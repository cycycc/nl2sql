stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> How many singers do we have? <s> SELECT count(*) FROM singer </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What is the total number of singers? <s> SELECT count(*) FROM singer </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> Show name, country, age for all singers ordered by age from the oldest to the youngest. <s> SELECT name ,  country ,  age FROM singer ORDER BY age DESC </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What are the names, countries, and ages for every singer in descending order of age? <s> SELECT name ,  country ,  age FROM singer ORDER BY age DESC </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What is the average, minimum, and maximum age of all singers from France? <s> SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France' </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What is the average, minimum, and maximum age for all French singers? <s> SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France' </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> Show the name and the release year of the song by the youngest singer. <s> SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1 </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What are the names and release years for all the songs of the youngest singer? <s> SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1 </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What are all distinct countries where singers above age 20 are from? <s> SELECT DISTINCT country FROM singer WHERE age  >  20 </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What are  the different countries with singers above age 20? <s> SELECT DISTINCT country FROM singer WHERE age  >  20 </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> Show all countries and the number of singers in each country. <s> SELECT country ,  count(*) FROM singer GROUP BY country </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> How many singers are from each country? <s> SELECT country ,  count(*) FROM singer GROUP BY country </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> List all song names by singers above the average age. <s> SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer) </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What are all the song names by singers who are older than average? <s> SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer) </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> Show location and name for all stadiums with a capacity between 5000 and 10000. <s> SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000 </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What are the locations and names of all stations with capacity between 5000 and 10000? <s> SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000 </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What is the maximum capacity and the average of all stadiums ? <s> select max(capacity), average from stadium </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What is the average and maximum capacities for all stadiums ? <s> select avg(capacity) ,  max(capacity) from stadium </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What is the name and capacity for the stadium with highest average attendance? <s> SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1 </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What is the name and capacity for the stadium with the highest average attendance? <s> SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1 </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> How many concerts are there in year 2014 or 2015? <s> SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015 </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> How many concerts occurred in 2014 or 2015? <s> SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015 </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> Show the stadium name and the number of concerts in each stadium. <s> SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> For each stadium, how many concerts play there? <s> SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> Show the stadium name and capacity with most number of concerts in year 2014 or after. <s> SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What is the name and capacity of the stadium with the most concerts after 2013 ? <s> select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1 </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> Which year has most number of concerts? <s> SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What is the year that had the most concerts? <s> SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> Show the stadium names without any concert. <s> SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert) </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What are the names of the stadiums without any concerts? <s> SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert) </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> Show countries where a singer above age 40 and a singer below 30 are from. <s> SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30 </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> Show names for all stadiums except for stadiums having a concert in year 2014. <s> SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014 </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What are the names of all stadiums that did not have a concert in 2014? <s> SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014 </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> Show the name and theme for all concerts and the number of singers in each concert. <s> SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What are the names , themes , and number of singers for every concert ? <s> select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> List singer names and number of concerts for each singer. <s> SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What are the names of the singers and number of concerts for each person? <s> SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> List all singer names in concerts in year 2014. <s> SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014 </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What are the names of the singers who performed in a concert in 2014? <s> SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014 </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> what is the name and nation of the singer who have a song having 'Hey' in its name? <s> SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%' </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What is the name and country of origin of every singer who has a song with the word 'Hey' in its title? <s> SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%' </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015. <s> SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015 </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015? <s> SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015 </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> Find the number of concerts happened in the stadium with the highest capacity . <s> select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1) </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What are the number of concerts that occurred in the stadium with the largest capacity ? <s> select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1) </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> Find the number of pets whose weight is heavier than 10. <s> SELECT count(*) FROM pets WHERE weight  >  10 </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> How many pets have a greater weight than 10? <s> SELECT count(*) FROM pets WHERE weight  >  10 </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> Find the weight of the youngest dog. <s> SELECT weight FROM pets ORDER BY pet_age LIMIT 1 </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> How much does the youngest dog weigh? <s> SELECT weight FROM pets ORDER BY pet_age LIMIT 1 </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> Find the maximum weight for each type of pet. List the maximum weight and pet type. <s> SELECT max(weight) ,  petType FROM pets GROUP BY petType </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> List the maximum weight and type for each type of pet. <s> SELECT max(weight) ,  petType FROM pets GROUP BY petType </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> Find number of pets owned by students who are older than 20. <s> SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20 </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> How many pets are owned by students that have an age greater than 20? <s> SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20 </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> Find the number of dog pets that are raised by female students (with sex F). <s> SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog' </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> How many dog pets are raised by female students? <s> SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog' </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> Find the number of distinct type of pets. <s> SELECT count(DISTINCT pettype) FROM pets </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> How many different types of pet are there? <s> SELECT count(DISTINCT pettype) FROM pets </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> Find the first name of students who have cat or dog pet. <s> SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog' </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> What are the first names of every student who has a cat or dog as a pet? <s> SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog' </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> Find the first name of students who have both cat and dog pets . <s> select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'dog' </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> What are the students' first names who have both cats and dogs as pets? <s> SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> Find the major and age of students who do not have a cat pet. <s> SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat') </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> What major is every student who does not own a cat as a pet, and also how old are they? <s> SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat') </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> Find the id of students who do not have a cat pet. <s> SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> What are the ids of the students who do not own cats as pets? <s> SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> Find the first name and age of students who have a dog but do not have a cat as a pet. <s> SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat') </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> What is the first name of every student who has a dog but does not have a cat? <s> SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat') </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> Find the type and weight of the youngest pet. <s> SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1 </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> What type of pet is the youngest animal, and how much does it weigh? <s> SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1 </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> Find the id and weight of all pets whose age is older than 1. <s> SELECT petid ,  weight FROM pets WHERE pet_age  >  1 </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> What is the id and weight of every pet who is older than 1? <s> SELECT petid ,  weight FROM pets WHERE pet_age  >  1 </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> Find the average and maximum age for each type of pet. <s> SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> What is the average and maximum age for each pet type? <s> SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> Find the average weight for each pet type. <s> SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> What is the average weight for each type of pet? <s> SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> Find the first name and age of students who have a pet. <s> SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> What are the different first names and ages of the students who do have pets? <s> SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> Find the id of the pet owned by student whose last name is ‘Smith’. <s> SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith' </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> What is the id of the pet owned by the student whose last name is 'Smith'? <s> SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith' </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> Find the number of pets for each student who has any pet and student id. <s> SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> For students who have pets , how many pets does each student have ? list their ids instead of names . <s> select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> Find the first name and gender of student who have more than one pet. <s> SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1 </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> What is the first name and gender of the all the students who have more than one pet? <s> SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1 </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> Find the last name of the student who has a cat that is age 3. <s> SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat' </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> What is the last name of the student who has a cat that is 3 years old? <s> SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat' </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> Find the average age of students who do not have any pet . <s> select avg(age) from student where stuid not in (select stuid from has_pet) </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> What is the average age for all students who do not own any pets ? <s> select avg(age) from student where stuid not in (select stuid from has_pet) </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> How many continents are there? <s> SELECT count(*) FROM CONTINENTS; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What is the number of continents? <s> SELECT count(*) FROM CONTINENTS; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> How many countries does each continent have? List the continent id, continent name and the number of countries. <s> SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> For each continent, list its id, name, and how many countries it has? <s> SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> How many countries are listed? <s> SELECT count(*) FROM COUNTRIES; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> How many countries exist? <s> SELECT count(*) FROM COUNTRIES; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> How many models does each car maker produce? List maker full name, id and the number. <s> SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What is the full name of each car maker, along with its id and how many models it produces? <s> SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> Which model of the car has the minimum horsepower? <s> SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What is the model of the car with the smallest amount of horsepower? <s> SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> Find the model of the car whose weight is below the average weight. <s> SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA) </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What is the model for the car with a weight smaller than the average? <s> SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA) </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> Find the name of the makers that produced some cars in the year of 1970? <s> SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970'; </s>