stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> How many singers do we have? <s> SELECT count(*) FROM singer </s>
--SEPARATOR--
singer_in_concert <c> Singer_ID <t> text <c> concert_ID <t> number </t> concert <c> concert_Name <t> text <c> Stadium_ID <t> text <c> Theme <t> text <c> Year <t> text <c> concert_ID <t> number </t> singer <c> Song_Name <t> text <c> Is_male <t> others <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Age <t> number <c> Song_release_year <t> text </t> stadium <c> Highest <t> number <c> Lowest <t> number <c> Location <t> text <c> Capacity <t> number <c> Stadium_ID <t> number <c> Average <t> number <c> Name <t> text <i> How many singers do we have? <s> SELECT count(*) FROM singer </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What is the total number of singers? <s> SELECT count(*) FROM singer </s>
--SEPARATOR--
stadium <c> Name <t> text <c> Capacity <t> number <c> Lowest <t> number <c> Stadium_ID <t> number <c> Location <t> text <c> Average <t> number <c> Highest <t> number </t> singer <c> Song_release_year <t> text <c> Is_male <t> others <c> Country <t> text <c> Age <t> number <c> Song_Name <t> text <c> Singer_ID <t> number <c> Name <t> text </t> concert <c> Year <t> text <c> concert_ID <t> number <c> concert_Name <t> text <c> Stadium_ID <t> text <c> Theme <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What is the total number of singers? <s> SELECT count(*) FROM singer </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> Show name, country, age for all singers ordered by age from the oldest to the youngest. <s> SELECT name ,  country ,  age FROM singer ORDER BY age DESC </s>
--SEPARATOR--
concert <c> Year <t> text <c> Theme <t> text <c> concert_ID <t> number <c> Stadium_ID <t> text <c> concert_Name <t> text </t> singer <c> Is_male <t> others <c> Country <t> text <c> Age <t> number <c> Song_Name <t> text <c> Name <t> text <c> Singer_ID <t> number <c> Song_release_year <t> text </t> stadium <c> Location <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number <c> Stadium_ID <t> number <c> Name <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> Show name, country, age for all singers ordered by age from the oldest to the youngest. <s> SELECT name ,  country ,  age FROM singer ORDER BY age DESC </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What are the names, countries, and ages for every singer in descending order of age? <s> SELECT name ,  country ,  age FROM singer ORDER BY age DESC </s>
--SEPARATOR--
singer <c> Singer_ID <t> number <c> Song_Name <t> text <c> Name <t> text <c> Age <t> number <c> Country <t> text <c> Song_release_year <t> text <c> Is_male <t> others </t> stadium <c> Location <t> text <c> Name <t> text <c> Lowest <t> number <c> Highest <t> number <c> Capacity <t> number <c> Stadium_ID <t> number <c> Average <t> number </t> concert <c> concert_Name <t> text <c> Year <t> text <c> concert_ID <t> number <c> Theme <t> text <c> Stadium_ID <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What are the names, countries, and ages for every singer in descending order of age? <s> SELECT name ,  country ,  age FROM singer ORDER BY age DESC </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What is the average, minimum, and maximum age of all singers from France? <s> SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France' </s>
--SEPARATOR--
concert <c> concert_ID <t> number <c> Year <t> text <c> concert_Name <t> text <c> Stadium_ID <t> text <c> Theme <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text </t> stadium <c> Stadium_ID <t> number <c> Name <t> text <c> Location <t> text <c> Highest <t> number <c> Average <t> number <c> Capacity <t> number <c> Lowest <t> number </t> singer <c> Song_release_year <t> text <c> Song_Name <t> text <c> Age <t> number <c> Singer_ID <t> number <c> Is_male <t> others <c> Country <t> text <c> Name <t> text <i> What is the average, minimum, and maximum age of all singers from France? <s> SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France' </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What is the average, minimum, and maximum age for all French singers? <s> SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France' </s>
--SEPARATOR--
singer_in_concert <c> Singer_ID <t> text <c> concert_ID <t> number </t> concert <c> concert_ID <t> number <c> Theme <t> text <c> concert_Name <t> text <c> Year <t> text <c> Stadium_ID <t> text </t> stadium <c> Stadium_ID <t> number <c> Highest <t> number <c> Capacity <t> number <c> Lowest <t> number <c> Name <t> text <c> Average <t> number <c> Location <t> text </t> singer <c> Song_release_year <t> text <c> Song_Name <t> text <c> Age <t> number <c> Country <t> text <c> Is_male <t> others <c> Singer_ID <t> number <c> Name <t> text <i> What is the average, minimum, and maximum age for all French singers? <s> SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France' </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> Show the name and the release year of the song by the youngest singer. <s> SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1 </s>
--SEPARATOR--
singer_in_concert <c> Singer_ID <t> text <c> concert_ID <t> number </t> stadium <c> Highest <t> number <c> Name <t> text <c> Lowest <t> number <c> Capacity <t> number <c> Location <t> text <c> Average <t> number <c> Stadium_ID <t> number </t> singer <c> Song_Name <t> text <c> Country <t> text <c> Singer_ID <t> number <c> Song_release_year <t> text <c> Is_male <t> others <c> Age <t> number <c> Name <t> text </t> concert <c> Year <t> text <c> Theme <t> text <c> concert_ID <t> number <c> Stadium_ID <t> text <c> concert_Name <t> text <i> Show the name and the release year of the song by the youngest singer. <s> SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1 </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What are the names and release years for all the songs of the youngest singer? <s> SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1 </s>
--SEPARATOR--
concert <c> Stadium_ID <t> text <c> Year <t> text <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text </t> singer <c> Country <t> text <c> Song_release_year <t> text <c> Song_Name <t> text <c> Name <t> text <c> Age <t> number <c> Is_male <t> others <c> Singer_ID <t> number </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text </t> stadium <c> Capacity <t> number <c> Average <t> number <c> Location <t> text <c> Name <t> text <c> Highest <t> number <c> Lowest <t> number <c> Stadium_ID <t> number <i> What are the names and release years for all the songs of the youngest singer? <s> SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1 </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What are all distinct countries where singers above age 20 are from? <s> SELECT DISTINCT country FROM singer WHERE age  >  20 </s>
--SEPARATOR--
singer <c> Song_Name <t> text <c> Singer_ID <t> number <c> Name <t> text <c> Song_release_year <t> text <c> Is_male <t> others <c> Age <t> number <c> Country <t> text </t> singer_in_concert <c> Singer_ID <t> text <c> concert_ID <t> number </t> stadium <c> Average <t> number <c> Name <t> text <c> Highest <t> number <c> Stadium_ID <t> number <c> Location <t> text <c> Lowest <t> number <c> Capacity <t> number </t> concert <c> Stadium_ID <t> text <c> concert_ID <t> number <c> Theme <t> text <c> concert_Name <t> text <c> Year <t> text <i> What are all distinct countries where singers above age 20 are from? <s> SELECT DISTINCT country FROM singer WHERE age  >  20 </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What are  the different countries with singers above age 20? <s> SELECT DISTINCT country FROM singer WHERE age  >  20 </s>
--SEPARATOR--
stadium <c> Lowest <t> number <c> Highest <t> number <c> Average <t> number <c> Location <t> text <c> Stadium_ID <t> number <c> Capacity <t> number <c> Name <t> text </t> singer <c> Is_male <t> others <c> Name <t> text <c> Age <t> number <c> Song_release_year <t> text <c> Song_Name <t> text <c> Singer_ID <t> number <c> Country <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text </t> concert <c> Stadium_ID <t> text <c> Year <t> text <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <i> What are  the different countries with singers above age 20? <s> SELECT DISTINCT country FROM singer WHERE age  >  20 </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> Show all countries and the number of singers in each country. <s> SELECT country ,  count(*) FROM singer GROUP BY country </s>
--SEPARATOR--
stadium <c> Highest <t> number <c> Location <t> text <c> Stadium_ID <t> number <c> Average <t> number <c> Name <t> text <c> Capacity <t> number <c> Lowest <t> number </t> concert <c> concert_ID <t> number <c> Stadium_ID <t> text <c> Theme <t> text <c> concert_Name <t> text <c> Year <t> text </t> singer <c> Song_release_year <t> text <c> Country <t> text <c> Age <t> number <c> Singer_ID <t> number <c> Name <t> text <c> Is_male <t> others <c> Song_Name <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> Show all countries and the number of singers in each country. <s> SELECT country ,  count(*) FROM singer GROUP BY country </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> How many singers are from each country? <s> SELECT country ,  count(*) FROM singer GROUP BY country </s>
--SEPARATOR--
singer <c> Song_release_year <t> text <c> Is_male <t> others <c> Singer_ID <t> number <c> Country <t> text <c> Song_Name <t> text <c> Name <t> text <c> Age <t> number </t> stadium <c> Capacity <t> number <c> Name <t> text <c> Lowest <t> number <c> Location <t> text <c> Average <t> number <c> Highest <t> number <c> Stadium_ID <t> number </t> concert <c> concert_Name <t> text <c> concert_ID <t> number <c> Year <t> text <c> Stadium_ID <t> text <c> Theme <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> How many singers are from each country? <s> SELECT country ,  count(*) FROM singer GROUP BY country </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> List all song names by singers above the average age. <s> SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer) </s>
--SEPARATOR--
singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text </t> singer <c> Age <t> number <c> Country <t> text <c> Name <t> text <c> Singer_ID <t> number <c> Song_Name <t> text <c> Is_male <t> others <c> Song_release_year <t> text </t> stadium <c> Average <t> number <c> Lowest <t> number <c> Name <t> text <c> Location <t> text <c> Stadium_ID <t> number <c> Highest <t> number <c> Capacity <t> number </t> concert <c> concert_ID <t> number <c> Stadium_ID <t> text <c> Year <t> text <c> concert_Name <t> text <c> Theme <t> text <i> List all song names by singers above the average age. <s> SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer) </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What are all the song names by singers who are older than average? <s> SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer) </s>
--SEPARATOR--
singer <c> Country <t> text <c> Is_male <t> others <c> Song_Name <t> text <c> Song_release_year <t> text <c> Singer_ID <t> number <c> Age <t> number <c> Name <t> text </t> stadium <c> Lowest <t> number <c> Stadium_ID <t> number <c> Location <t> text <c> Capacity <t> number <c> Name <t> text <c> Highest <t> number <c> Average <t> number </t> concert <c> concert_ID <t> number <c> Theme <t> text <c> Year <t> text <c> concert_Name <t> text <c> Stadium_ID <t> text </t> singer_in_concert <c> Singer_ID <t> text <c> concert_ID <t> number <i> What are all the song names by singers who are older than average? <s> SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer) </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> Show location and name for all stadiums with a capacity between 5000 and 10000. <s> SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000 </s>
--SEPARATOR--
singer <c> Name <t> text <c> Age <t> number <c> Song_release_year <t> text <c> Singer_ID <t> number <c> Country <t> text <c> Is_male <t> others <c> Song_Name <t> text </t> stadium <c> Highest <t> number <c> Stadium_ID <t> number <c> Location <t> text <c> Capacity <t> number <c> Average <t> number <c> Name <t> text <c> Lowest <t> number </t> singer_in_concert <c> Singer_ID <t> text <c> concert_ID <t> number </t> concert <c> Stadium_ID <t> text <c> Year <t> text <c> concert_Name <t> text <c> Theme <t> text <c> concert_ID <t> number <i> Show location and name for all stadiums with a capacity between 5000 and 10000. <s> SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000 </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What are the locations and names of all stations with capacity between 5000 and 10000? <s> SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000 </s>
--SEPARATOR--
concert <c> Stadium_ID <t> text <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text </t> stadium <c> Stadium_ID <t> number <c> Capacity <t> number <c> Name <t> text <c> Location <t> text <c> Lowest <t> number <c> Average <t> number <c> Highest <t> number </t> singer <c> Song_release_year <t> text <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Age <t> number <c> Is_male <t> others <c> Singer_ID <t> number <i> What are the locations and names of all stations with capacity between 5000 and 10000? <s> SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000 </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What is the maximum capacity and the average of all stadiums ? <s> select max(capacity), average from stadium </s>
--SEPARATOR--
singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text </t> stadium <c> Lowest <t> number <c> Highest <t> number <c> Capacity <t> number <c> Average <t> number <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text </t> concert <c> Stadium_ID <t> text <c> Year <t> text <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text </t> singer <c> Age <t> number <c> Song_Name <t> text <c> Is_male <t> others <c> Singer_ID <t> number <c> Song_release_year <t> text <c> Country <t> text <c> Name <t> text <i> What is the maximum capacity and the average of all stadiums ? <s> select max(capacity), average from stadium </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What is the average and maximum capacities for all stadiums ? <s> select avg(capacity) ,  max(capacity) from stadium </s>
--SEPARATOR--
stadium <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Name <t> text <c> Location <t> text <c> Stadium_ID <t> number <c> Average <t> number </t> singer <c> Age <t> number <c> Singer_ID <t> number <c> Is_male <t> others <c> Country <t> text <c> Name <t> text <c> Song_release_year <t> text <c> Song_Name <t> text </t> concert <c> concert_Name <t> text <c> Year <t> text <c> concert_ID <t> number <c> Stadium_ID <t> text <c> Theme <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What is the average and maximum capacities for all stadiums ? <s> select avg(capacity) ,  max(capacity) from stadium </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What is the name and capacity for the stadium with highest average attendance? <s> SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1 </s>
--SEPARATOR--
singer <c> Song_Name <t> text <c> Is_male <t> others <c> Song_release_year <t> text <c> Singer_ID <t> number <c> Country <t> text <c> Age <t> number <c> Name <t> text </t> stadium <c> Capacity <t> number <c> Location <t> text <c> Stadium_ID <t> number <c> Name <t> text <c> Average <t> number <c> Highest <t> number <c> Lowest <t> number </t> concert <c> Theme <t> text <c> concert_ID <t> number <c> concert_Name <t> text <c> Year <t> text <c> Stadium_ID <t> text </t> singer_in_concert <c> Singer_ID <t> text <c> concert_ID <t> number <i> What is the name and capacity for the stadium with highest average attendance? <s> SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1 </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What is the name and capacity for the stadium with the highest average attendance? <s> SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1 </s>
--SEPARATOR--
singer <c> Is_male <t> others <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Name <t> text <c> Singer_ID <t> number </t> stadium <c> Stadium_ID <t> number <c> Highest <t> number <c> Name <t> text <c> Location <t> text <c> Lowest <t> number <c> Average <t> number <c> Capacity <t> number </t> concert <c> Stadium_ID <t> text <c> concert_Name <t> text <c> Theme <t> text <c> concert_ID <t> number <c> Year <t> text </t> singer_in_concert <c> Singer_ID <t> text <c> concert_ID <t> number <i> What is the name and capacity for the stadium with the highest average attendance? <s> SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1 </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> How many concerts are there in year 2014 or 2015? <s> SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015 </s>
--SEPARATOR--
stadium <c> Highest <t> number <c> Average <t> number <c> Location <t> text <c> Capacity <t> number <c> Lowest <t> number <c> Name <t> text <c> Stadium_ID <t> number </t> singer_in_concert <c> Singer_ID <t> text <c> concert_ID <t> number </t> concert <c> Stadium_ID <t> text <c> Year <t> text <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text </t> singer <c> Age <t> number <c> Name <t> text <c> Singer_ID <t> number <c> Song_release_year <t> text <c> Song_Name <t> text <c> Is_male <t> others <c> Country <t> text <i> How many concerts are there in year 2014 or 2015? <s> SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015 </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> How many concerts occurred in 2014 or 2015? <s> SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015 </s>
--SEPARATOR--
singer <c> Name <t> text <c> Is_male <t> others <c> Country <t> text <c> Singer_ID <t> number <c> Age <t> number <c> Song_release_year <t> text <c> Song_Name <t> text </t> singer_in_concert <c> Singer_ID <t> text <c> concert_ID <t> number </t> concert <c> concert_Name <t> text <c> Stadium_ID <t> text <c> Theme <t> text <c> Year <t> text <c> concert_ID <t> number </t> stadium <c> Highest <t> number <c> Stadium_ID <t> number <c> Location <t> text <c> Average <t> number <c> Lowest <t> number <c> Name <t> text <c> Capacity <t> number <i> How many concerts occurred in 2014 or 2015? <s> SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015 </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> Show the stadium name and the number of concerts in each stadium. <s> SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id </s>
--SEPARATOR--
stadium <c> Location <t> text <c> Lowest <t> number <c> Average <t> number <c> Stadium_ID <t> number <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number </t> concert <c> Stadium_ID <t> text <c> Year <t> text <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text </t> singer_in_concert <c> Singer_ID <t> text <c> concert_ID <t> number </t> singer <c> Song_release_year <t> text <c> Song_Name <t> text <c> Name <t> text <c> Singer_ID <t> number <c> Age <t> number <c> Country <t> text <c> Is_male <t> others <i> Show the stadium name and the number of concerts in each stadium. <s> SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> For each stadium, how many concerts play there? <s> SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id </s>
--SEPARATOR--
concert <c> Year <t> text <c> Stadium_ID <t> text <c> Theme <t> text <c> concert_ID <t> number <c> concert_Name <t> text </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Is_male <t> others <c> Age <t> number <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text </t> stadium <c> Average <t> number <c> Capacity <t> number <c> Stadium_ID <t> number <c> Lowest <t> number <c> Location <t> text <c> Name <t> text <c> Highest <t> number <i> For each stadium, how many concerts play there? <s> SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> Show the stadium name and capacity with most number of concerts in year 2014 or after. <s> SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
singer_in_concert <c> Singer_ID <t> text <c> concert_ID <t> number </t> stadium <c> Location <t> text <c> Name <t> text <c> Highest <t> number <c> Average <t> number <c> Lowest <t> number <c> Capacity <t> number <c> Stadium_ID <t> number </t> singer <c> Country <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Song_Name <t> text <c> Singer_ID <t> number <c> Name <t> text <c> Is_male <t> others </t> concert <c> Stadium_ID <t> text <c> Theme <t> text <c> concert_ID <t> number <c> Year <t> text <c> concert_Name <t> text <i> Show the stadium name and capacity with most number of concerts in year 2014 or after. <s> SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What is the name and capacity of the stadium with the most concerts after 2013 ? <s> select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1 </s>
--SEPARATOR--
singer_in_concert <c> Singer_ID <t> text <c> concert_ID <t> number </t> stadium <c> Average <t> number <c> Location <t> text <c> Name <t> text <c> Stadium_ID <t> number <c> Highest <t> number <c> Capacity <t> number <c> Lowest <t> number </t> singer <c> Country <t> text <c> Age <t> number <c> Song_release_year <t> text <c> Is_male <t> others <c> Name <t> text <c> Song_Name <t> text <c> Singer_ID <t> number </t> concert <c> Theme <t> text <c> Stadium_ID <t> text <c> concert_ID <t> number <c> concert_Name <t> text <c> Year <t> text <i> What is the name and capacity of the stadium with the most concerts after 2013 ? <s> select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1 </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> Which year has most number of concerts? <s> SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
singer <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Singer_ID <t> number <c> Age <t> number <c> Song_release_year <t> text <c> Is_male <t> others </t> stadium <c> Location <t> text <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number <c> Name <t> text <c> Stadium_ID <t> number <c> Capacity <t> number </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text </t> concert <c> concert_ID <t> number <c> Theme <t> text <c> Year <t> text <c> concert_Name <t> text <c> Stadium_ID <t> text <i> Which year has most number of concerts? <s> SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What is the year that had the most concerts? <s> SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
singer_in_concert <c> Singer_ID <t> text <c> concert_ID <t> number </t> stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Average <t> number <c> Highest <t> number <c> Lowest <t> number <c> Capacity <t> number <c> Name <t> text </t> concert <c> Theme <t> text <c> concert_Name <t> text <c> Year <t> text <c> concert_ID <t> number <c> Stadium_ID <t> text </t> singer <c> Is_male <t> others <c> Singer_ID <t> number <c> Song_Name <t> text <c> Age <t> number <c> Country <t> text <c> Song_release_year <t> text <c> Name <t> text <i> What is the year that had the most concerts? <s> SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> Show the stadium names without any concert. <s> SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert) </s>
--SEPARATOR--
stadium <c> Location <t> text <c> Name <t> text <c> Lowest <t> number <c> Highest <t> number <c> Capacity <t> number <c> Stadium_ID <t> number <c> Average <t> number </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text </t> singer <c> Is_male <t> others <c> Age <t> number <c> Song_release_year <t> text <c> Name <t> text <c> Song_Name <t> text <c> Country <t> text <c> Singer_ID <t> number </t> concert <c> Theme <t> text <c> Stadium_ID <t> text <c> concert_Name <t> text <c> concert_ID <t> number <c> Year <t> text <i> Show the stadium names without any concert. <s> SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert) </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What are the names of the stadiums without any concerts? <s> SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert) </s>
--SEPARATOR--
singer <c> Name <t> text <c> Song_release_year <t> text <c> Is_male <t> others <c> Age <t> number <c> Song_Name <t> text <c> Country <t> text <c> Singer_ID <t> number </t> stadium <c> Location <t> text <c> Lowest <t> number <c> Capacity <t> number <c> Name <t> text <c> Stadium_ID <t> number <c> Average <t> number <c> Highest <t> number </t> concert <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> concert_ID <t> number <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What are the names of the stadiums without any concerts? <s> SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert) </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> Show countries where a singer above age 40 and a singer below 30 are from. <s> SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30 </s>
--SEPARATOR--
singer <c> Song_Name <t> text <c> Name <t> text <c> Singer_ID <t> number <c> Country <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> Theme <t> text <c> Year <t> text <c> concert_ID <t> number <c> concert_Name <t> text <c> Stadium_ID <t> text </t> stadium <c> Lowest <t> number <c> Capacity <t> number <c> Average <t> number <c> Name <t> text <c> Location <t> text <c> Stadium_ID <t> number <c> Highest <t> number </t> singer_in_concert <c> Singer_ID <t> text <c> concert_ID <t> number <i> Show countries where a singer above age 40 and a singer below 30 are from. <s> SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30 </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> Show names for all stadiums except for stadiums having a concert in year 2014. <s> SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014 </s>
--SEPARATOR--
stadium <c> Name <t> text <c> Capacity <t> number <c> Location <t> text <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number <c> Stadium_ID <t> number </t> singer <c> Name <t> text <c> Song_release_year <t> text <c> Singer_ID <t> number <c> Age <t> number <c> Song_Name <t> text <c> Country <t> text <c> Is_male <t> others </t> singer_in_concert <c> Singer_ID <t> text <c> concert_ID <t> number </t> concert <c> concert_Name <t> text <c> Theme <t> text <c> concert_ID <t> number <c> Year <t> text <c> Stadium_ID <t> text <i> Show names for all stadiums except for stadiums having a concert in year 2014. <s> SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014 </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What are the names of all stadiums that did not have a concert in 2014? <s> SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014 </s>
--SEPARATOR--
singer_in_concert <c> Singer_ID <t> text <c> concert_ID <t> number </t> stadium <c> Lowest <t> number <c> Capacity <t> number <c> Average <t> number <c> Highest <t> number <c> Name <t> text <c> Stadium_ID <t> number <c> Location <t> text </t> singer <c> Singer_ID <t> number <c> Song_Name <t> text <c> Is_male <t> others <c> Song_release_year <t> text <c> Age <t> number <c> Country <t> text <c> Name <t> text </t> concert <c> concert_ID <t> number <c> Stadium_ID <t> text <c> concert_Name <t> text <c> Theme <t> text <c> Year <t> text <i> What are the names of all stadiums that did not have a concert in 2014? <s> SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014 </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> Show the name and theme for all concerts and the number of singers in each concert. <s> SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id </s>
--SEPARATOR--
singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text </t> stadium <c> Location <t> text <c> Average <t> number <c> Highest <t> number <c> Stadium_ID <t> number <c> Capacity <t> number <c> Lowest <t> number <c> Name <t> text </t> singer <c> Singer_ID <t> number <c> Is_male <t> others <c> Name <t> text <c> Age <t> number <c> Song_release_year <t> text <c> Song_Name <t> text <c> Country <t> text </t> concert <c> Stadium_ID <t> text <c> Theme <t> text <c> Year <t> text <c> concert_Name <t> text <c> concert_ID <t> number <i> Show the name and theme for all concerts and the number of singers in each concert. <s> SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What are the names , themes , and number of singers for every concert ? <s> select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id </s>
--SEPARATOR--
singer_in_concert <c> Singer_ID <t> text <c> concert_ID <t> number </t> singer <c> Is_male <t> others <c> Singer_ID <t> number <c> Song_release_year <t> text <c> Country <t> text <c> Song_Name <t> text <c> Age <t> number <c> Name <t> text </t> concert <c> Theme <t> text <c> concert_Name <t> text <c> Stadium_ID <t> text <c> concert_ID <t> number <c> Year <t> text </t> stadium <c> Stadium_ID <t> number <c> Highest <t> number <c> Capacity <t> number <c> Location <t> text <c> Average <t> number <c> Name <t> text <c> Lowest <t> number <i> What are the names , themes , and number of singers for every concert ? <s> select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> List singer names and number of concerts for each singer. <s> SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id </s>
--SEPARATOR--
singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text </t> stadium <c> Stadium_ID <t> number <c> Name <t> text <c> Lowest <t> number <c> Highest <t> number <c> Average <t> number <c> Capacity <t> number <c> Location <t> text </t> singer <c> Song_release_year <t> text <c> Is_male <t> others <c> Song_Name <t> text <c> Name <t> text <c> Country <t> text <c> Age <t> number <c> Singer_ID <t> number </t> concert <c> Theme <t> text <c> concert_ID <t> number <c> Stadium_ID <t> text <c> Year <t> text <c> concert_Name <t> text <i> List singer names and number of concerts for each singer. <s> SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What are the names of the singers and number of concerts for each person? <s> SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id </s>
--SEPARATOR--
singer_in_concert <c> Singer_ID <t> text <c> concert_ID <t> number </t> stadium <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Stadium_ID <t> number <c> Average <t> number <c> Location <t> text <c> Lowest <t> number </t> singer <c> Name <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Is_male <t> others <c> Country <t> text <c> Age <t> number <c> Singer_ID <t> number </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Year <t> text <c> Theme <t> text <c> Stadium_ID <t> text <i> What are the names of the singers and number of concerts for each person? <s> SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> List all singer names in concerts in year 2014. <s> SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014 </s>
--SEPARATOR--
singer <c> Song_Name <t> text <c> Singer_ID <t> number <c> Is_male <t> others <c> Name <t> text <c> Country <t> text <c> Song_release_year <t> text <c> Age <t> number </t> concert <c> concert_ID <t> number <c> Stadium_ID <t> text <c> Theme <t> text <c> concert_Name <t> text <c> Year <t> text </t> stadium <c> Location <t> text <c> Capacity <t> number <c> Name <t> text <c> Average <t> number <c> Lowest <t> number <c> Stadium_ID <t> number <c> Highest <t> number </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> List all singer names in concerts in year 2014. <s> SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014 </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What are the names of the singers who performed in a concert in 2014? <s> SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014 </s>
--SEPARATOR--
singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Stadium_ID <t> text <c> Year <t> text <c> Theme <t> text </t> stadium <c> Highest <t> number <c> Location <t> text <c> Lowest <t> number <c> Capacity <t> number <c> Average <t> number <c> Stadium_ID <t> number <c> Name <t> text </t> singer <c> Song_Name <t> text <c> Age <t> number <c> Name <t> text <c> Singer_ID <t> number <c> Is_male <t> others <c> Song_release_year <t> text <c> Country <t> text <i> What are the names of the singers who performed in a concert in 2014? <s> SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014 </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> what is the name and nation of the singer who have a song having 'Hey' in its name? <s> SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%' </s>
--SEPARATOR--
singer <c> Name <t> text <c> Singer_ID <t> number <c> Song_release_year <t> text <c> Country <t> text <c> Song_Name <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> Year <t> text <c> concert_ID <t> number <c> Theme <t> text <c> concert_Name <t> text <c> Stadium_ID <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text </t> stadium <c> Capacity <t> number <c> Name <t> text <c> Average <t> number <c> Location <t> text <c> Lowest <t> number <c> Highest <t> number <c> Stadium_ID <t> number <i> what is the name and nation of the singer who have a song having 'Hey' in its name? <s> SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%' </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What is the name and country of origin of every singer who has a song with the word 'Hey' in its title? <s> SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%' </s>
--SEPARATOR--
singer_in_concert <c> Singer_ID <t> text <c> concert_ID <t> number </t> stadium <c> Name <t> text <c> Stadium_ID <t> number <c> Location <t> text <c> Capacity <t> number <c> Lowest <t> number <c> Highest <t> number <c> Average <t> number </t> concert <c> Year <t> text <c> concert_ID <t> number <c> Stadium_ID <t> text <c> concert_Name <t> text <c> Theme <t> text </t> singer <c> Name <t> text <c> Song_release_year <t> text <c> Is_male <t> others <c> Country <t> text <c> Singer_ID <t> number <c> Song_Name <t> text <c> Age <t> number <i> What is the name and country of origin of every singer who has a song with the word 'Hey' in its title? <s> SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%' </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015. <s> SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015 </s>
--SEPARATOR--
singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text </t> singer <c> Singer_ID <t> number <c> Song_Name <t> text <c> Song_release_year <t> text <c> Name <t> text <c> Country <t> text <c> Age <t> number <c> Is_male <t> others </t> stadium <c> Location <t> text <c> Highest <t> number <c> Average <t> number <c> Name <t> text <c> Stadium_ID <t> number <c> Lowest <t> number <c> Capacity <t> number </t> concert <c> Year <t> text <c> concert_ID <t> number <c> Theme <t> text <c> concert_Name <t> text <c> Stadium_ID <t> text <i> Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015. <s> SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015 </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015? <s> SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015 </s>
--SEPARATOR--
singer <c> Age <t> number <c> Is_male <t> others <c> Singer_ID <t> number <c> Song_release_year <t> text <c> Song_Name <t> text <c> Name <t> text <c> Country <t> text </t> stadium <c> Capacity <t> number <c> Name <t> text <c> Location <t> text <c> Highest <t> number <c> Lowest <t> number <c> Stadium_ID <t> number <c> Average <t> number </t> concert <c> Year <t> text <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text </t> singer_in_concert <c> Singer_ID <t> text <c> concert_ID <t> number <i> What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015? <s> SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015 </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> Find the number of concerts happened in the stadium with the highest capacity . <s> select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1) </s>
--SEPARATOR--
singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text </t> singer <c> Is_male <t> others <c> Singer_ID <t> number <c> Age <t> number <c> Song_Name <t> text <c> Country <t> text <c> Name <t> text <c> Song_release_year <t> text </t> concert <c> Year <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> concert_ID <t> number <c> concert_Name <t> text </t> stadium <c> Name <t> text <c> Lowest <t> number <c> Location <t> text <c> Stadium_ID <t> number <c> Capacity <t> number <c> Highest <t> number <c> Average <t> number <i> Find the number of concerts happened in the stadium with the highest capacity . <s> select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1) </s>
--SEPARATOR--
stadium <c> Stadium_ID <t> number <c> Location <t> text <c> Name <t> text <c> Capacity <t> number <c> Highest <t> number <c> Lowest <t> number <c> Average <t> number </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Country <t> text <c> Song_Name <t> text <c> Song_release_year <t> text <c> Age <t> number <c> Is_male <t> others </t> concert <c> concert_ID <t> number <c> concert_Name <t> text <c> Theme <t> text <c> Stadium_ID <t> text <c> Year <t> text </t> singer_in_concert <c> concert_ID <t> number <c> Singer_ID <t> text <i> What are the number of concerts that occurred in the stadium with the largest capacity ? <s> select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1) </s>
--SEPARATOR--
singer_in_concert <c> Singer_ID <t> text <c> concert_ID <t> number </t> concert <c> concert_Name <t> text <c> Year <t> text <c> Theme <t> text <c> concert_ID <t> number <c> Stadium_ID <t> text </t> singer <c> Is_male <t> others <c> Country <t> text <c> Song_release_year <t> text <c> Singer_ID <t> number <c> Song_Name <t> text <c> Name <t> text <c> Age <t> number </t> stadium <c> Capacity <t> number <c> Stadium_ID <t> number <c> Average <t> number <c> Highest <t> number <c> Name <t> text <c> Lowest <t> number <c> Location <t> text <i> What are the number of concerts that occurred in the stadium with the largest capacity ? <s> select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1) </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> Find the number of pets whose weight is heavier than 10. <s> SELECT count(*) FROM pets WHERE weight  >  10 </s>
--SEPARATOR--
Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Student <c> city_code <t> text <c> StuID <t> number <c> Age <t> number <c> Major <t> number <c> Fname <t> text <c> Sex <t> text <c> LName <t> text <c> Advisor <t> number </t> Pets <c> PetID <t> number <c> weight <t> number <c> pet_age <t> number <c> PetType <t> text <i> Find the number of pets whose weight is heavier than 10. <s> SELECT count(*) FROM pets WHERE weight  >  10 </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> How many pets have a greater weight than 10? <s> SELECT count(*) FROM pets WHERE weight  >  10 </s>
--SEPARATOR--
Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> weight <t> number <c> pet_age <t> number </t> Student <c> StuID <t> number <c> LName <t> text <c> city_code <t> text <c> Major <t> number <c> Fname <t> text <c> Sex <t> text <c> Advisor <t> number <c> Age <t> number <i> How many pets have a greater weight than 10? <s> SELECT count(*) FROM pets WHERE weight  >  10 </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> Find the weight of the youngest dog. <s> SELECT weight FROM pets ORDER BY pet_age LIMIT 1 </s>
--SEPARATOR--
Student <c> LName <t> text <c> Age <t> number <c> StuID <t> number <c> city_code <t> text <c> Fname <t> text <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> pet_age <t> number <c> PetID <t> number <c> PetType <t> text <c> weight <t> number <i> Find the weight of the youngest dog. <s> SELECT weight FROM pets ORDER BY pet_age LIMIT 1 </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> How much does the youngest dog weigh? <s> SELECT weight FROM pets ORDER BY pet_age LIMIT 1 </s>
--SEPARATOR--
Pets <c> PetID <t> number <c> weight <t> number <c> pet_age <t> number <c> PetType <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Student <c> Major <t> number <c> StuID <t> number <c> Age <t> number <c> Advisor <t> number <c> city_code <t> text <c> Fname <t> text <c> LName <t> text <c> Sex <t> text <i> How much does the youngest dog weigh? <s> SELECT weight FROM pets ORDER BY pet_age LIMIT 1 </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> Find the maximum weight for each type of pet. List the maximum weight and pet type. <s> SELECT max(weight) ,  petType FROM pets GROUP BY petType </s>
--SEPARATOR--
Has_Pet <c> PetID <t> number <c> StuID <t> number </t> Student <c> Sex <t> text <c> LName <t> text <c> StuID <t> number <c> Advisor <t> number <c> Age <t> number <c> Fname <t> text <c> city_code <t> text <c> Major <t> number </t> Pets <c> PetType <t> text <c> pet_age <t> number <c> PetID <t> number <c> weight <t> number <i> Find the maximum weight for each type of pet. List the maximum weight and pet type. <s> SELECT max(weight) ,  petType FROM pets GROUP BY petType </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> List the maximum weight and type for each type of pet. <s> SELECT max(weight) ,  petType FROM pets GROUP BY petType </s>
--SEPARATOR--
Student <c> LName <t> text <c> city_code <t> text <c> Fname <t> text <c> Major <t> number <c> StuID <t> number <c> Sex <t> text <c> Advisor <t> number <c> Age <t> number </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> pet_age <t> number <c> PetID <t> number <c> weight <t> number <c> PetType <t> text <i> List the maximum weight and type for each type of pet. <s> SELECT max(weight) ,  petType FROM pets GROUP BY petType </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> Find number of pets owned by students who are older than 20. <s> SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20 </s>
--SEPARATOR--
Student <c> StuID <t> number <c> Fname <t> text <c> Major <t> number <c> Sex <t> text <c> Advisor <t> number <c> LName <t> text <c> city_code <t> text <c> Age <t> number </t> Pets <c> pet_age <t> number <c> weight <t> number <c> PetType <t> text <c> PetID <t> number </t> Has_Pet <c> PetID <t> number <c> StuID <t> number <i> Find number of pets owned by students who are older than 20. <s> SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20 </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> How many pets are owned by students that have an age greater than 20? <s> SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20 </s>
--SEPARATOR--
Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> weight <t> number <c> pet_age <t> number <c> PetType <t> text <c> PetID <t> number </t> Student <c> Major <t> number <c> StuID <t> number <c> Sex <t> text <c> city_code <t> text <c> Fname <t> text <c> LName <t> text <c> Advisor <t> number <c> Age <t> number <i> How many pets are owned by students that have an age greater than 20? <s> SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20 </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> Find the number of dog pets that are raised by female students (with sex F). <s> SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog' </s>
--SEPARATOR--
Student <c> Advisor <t> number <c> city_code <t> text <c> Sex <t> text <c> StuID <t> number <c> Fname <t> text <c> LName <t> text <c> Age <t> number <c> Major <t> number </t> Has_Pet <c> PetID <t> number <c> StuID <t> number </t> Pets <c> PetType <t> text <c> PetID <t> number <c> weight <t> number <c> pet_age <t> number <i> Find the number of dog pets that are raised by female students (with sex F). <s> SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog' </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> How many dog pets are raised by female students? <s> SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog' </s>
--SEPARATOR--
Pets <c> weight <t> number <c> PetID <t> number <c> pet_age <t> number <c> PetType <t> text </t> Student <c> Age <t> number <c> Fname <t> text <c> Major <t> number <c> StuID <t> number <c> LName <t> text <c> Advisor <t> number <c> city_code <t> text <c> Sex <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number <i> How many dog pets are raised by female students? <s> SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog' </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> Find the number of distinct type of pets. <s> SELECT count(DISTINCT pettype) FROM pets </s>
--SEPARATOR--
Student <c> Age <t> number <c> Advisor <t> number <c> city_code <t> text <c> Fname <t> text <c> StuID <t> number <c> LName <t> text <c> Major <t> number <c> Sex <t> text </t> Has_Pet <c> PetID <t> number <c> StuID <t> number </t> Pets <c> pet_age <t> number <c> weight <t> number <c> PetType <t> text <c> PetID <t> number <i> Find the number of distinct type of pets. <s> SELECT count(DISTINCT pettype) FROM pets </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> How many different types of pet are there? <s> SELECT count(DISTINCT pettype) FROM pets </s>
--SEPARATOR--
Student <c> Advisor <t> number <c> Major <t> number <c> Fname <t> text <c> StuID <t> number <c> Age <t> number <c> LName <t> text <c> city_code <t> text <c> Sex <t> text </t> Pets <c> weight <t> number <c> PetID <t> number <c> pet_age <t> number <c> PetType <t> text </t> Has_Pet <c> PetID <t> number <c> StuID <t> number <i> How many different types of pet are there? <s> SELECT count(DISTINCT pettype) FROM pets </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> Find the first name of students who have cat or dog pet. <s> SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog' </s>
--SEPARATOR--
Student <c> Fname <t> text <c> LName <t> text <c> StuID <t> number <c> city_code <t> text <c> Sex <t> text <c> Major <t> number <c> Age <t> number <c> Advisor <t> number </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> pet_age <t> number <c> weight <t> number <c> PetID <t> number <c> PetType <t> text <i> Find the first name of students who have cat or dog pet. <s> SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog' </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> What are the first names of every student who has a cat or dog as a pet? <s> SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog' </s>
--SEPARATOR--
Student <c> LName <t> text <c> Age <t> number <c> StuID <t> number <c> Sex <t> text <c> Fname <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetType <t> text <c> PetID <t> number <c> weight <t> number <c> pet_age <t> number <i> What are the first names of every student who has a cat or dog as a pet? <s> SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog' </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> Find the first name of students who have both cat and dog pets . <s> select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'dog' </s>
--SEPARATOR--
Pets <c> pet_age <t> number <c> weight <t> number <c> PetType <t> text <c> PetID <t> number </t> Student <c> Age <t> number <c> Fname <t> text <c> Advisor <t> number <c> city_code <t> text <c> StuID <t> number <c> LName <t> text <c> Sex <t> text <c> Major <t> number </t> Has_Pet <c> PetID <t> number <c> StuID <t> number <i> Find the first name of students who have both cat and dog pets . <s> select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'dog' </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> What are the students' first names who have both cats and dogs as pets? <s> SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' </s>
--SEPARATOR--
Student <c> Advisor <t> number <c> Sex <t> text <c> StuID <t> number <c> city_code <t> text <c> LName <t> text <c> Age <t> number <c> Major <t> number <c> Fname <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> pet_age <t> number <c> weight <t> number <c> PetType <t> text <c> PetID <t> number <i> What are the students' first names who have both cats and dogs as pets? <s> SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> Find the major and age of students who do not have a cat pet. <s> SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat') </s>
--SEPARATOR--
Pets <c> pet_age <t> number <c> weight <t> number <c> PetID <t> number <c> PetType <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Student <c> Major <t> number <c> LName <t> text <c> StuID <t> number <c> city_code <t> text <c> Sex <t> text <c> Fname <t> text <c> Age <t> number <c> Advisor <t> number <i> Find the major and age of students who do not have a cat pet. <s> SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat') </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> What major is every student who does not own a cat as a pet, and also how old are they? <s> SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat') </s>
--SEPARATOR--
Has_Pet <c> PetID <t> number <c> StuID <t> number </t> Student <c> StuID <t> number <c> Age <t> number <c> Fname <t> text <c> Advisor <t> number <c> Major <t> number <c> city_code <t> text <c> Sex <t> text <c> LName <t> text </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> What major is every student who does not own a cat as a pet, and also how old are they? <s> SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat') </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> Find the id of students who do not have a cat pet. <s> SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' </s>
--SEPARATOR--
Has_Pet <c> PetID <t> number <c> StuID <t> number </t> Pets <c> PetType <t> text <c> pet_age <t> number <c> PetID <t> number <c> weight <t> number </t> Student <c> Advisor <t> number <c> LName <t> text <c> Major <t> number <c> Sex <t> text <c> Fname <t> text <c> StuID <t> number <c> city_code <t> text <c> Age <t> number <i> Find the id of students who do not have a cat pet. <s> SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> What are the ids of the students who do not own cats as pets? <s> SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' </s>
--SEPARATOR--
Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> pet_age <t> number <c> PetType <t> text <c> weight <t> number </t> Student <c> StuID <t> number <c> Major <t> number <c> Fname <t> text <c> city_code <t> text <c> Sex <t> text <c> LName <t> text <c> Age <t> number <c> Advisor <t> number <i> What are the ids of the students who do not own cats as pets? <s> SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> Find the first name and age of students who have a dog but do not have a cat as a pet. <s> SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat') </s>
--SEPARATOR--
Pets <c> weight <t> number <c> PetType <t> text <c> PetID <t> number <c> pet_age <t> number </t> Student <c> StuID <t> number <c> Age <t> number <c> Sex <t> text <c> Advisor <t> number <c> city_code <t> text <c> LName <t> text <c> Fname <t> text <c> Major <t> number </t> Has_Pet <c> PetID <t> number <c> StuID <t> number <i> Find the first name and age of students who have a dog but do not have a cat as a pet. <s> SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat') </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> What is the first name of every student who has a dog but does not have a cat? <s> SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat') </s>
--SEPARATOR--
Student <c> Advisor <t> number <c> city_code <t> text <c> Fname <t> text <c> LName <t> text <c> Major <t> number <c> StuID <t> number <c> Sex <t> text <c> Age <t> number </t> Pets <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <c> PetID <t> number </t> Has_Pet <c> PetID <t> number <c> StuID <t> number <i> What is the first name of every student who has a dog but does not have a cat? <s> SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat') </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> Find the type and weight of the youngest pet. <s> SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1 </s>
--SEPARATOR--
Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> pet_age <t> number <c> weight <t> number <c> PetType <t> text <c> PetID <t> number </t> Student <c> Sex <t> text <c> LName <t> text <c> Fname <t> text <c> city_code <t> text <c> Advisor <t> number <c> StuID <t> number <c> Age <t> number <c> Major <t> number <i> Find the type and weight of the youngest pet. <s> SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1 </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> What type of pet is the youngest animal, and how much does it weigh? <s> SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1 </s>
--SEPARATOR--
Has_Pet <c> PetID <t> number <c> StuID <t> number </t> Pets <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <c> PetID <t> number </t> Student <c> Sex <t> text <c> StuID <t> number <c> LName <t> text <c> city_code <t> text <c> Advisor <t> number <c> Major <t> number <c> Age <t> number <c> Fname <t> text <i> What type of pet is the youngest animal, and how much does it weigh? <s> SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1 </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> Find the id and weight of all pets whose age is older than 1. <s> SELECT petid ,  weight FROM pets WHERE pet_age  >  1 </s>
--SEPARATOR--
Pets <c> PetType <t> text <c> weight <t> number <c> pet_age <t> number <c> PetID <t> number </t> Has_Pet <c> PetID <t> number <c> StuID <t> number </t> Student <c> city_code <t> text <c> Age <t> number <c> StuID <t> number <c> Advisor <t> number <c> Fname <t> text <c> LName <t> text <c> Sex <t> text <c> Major <t> number <i> Find the id and weight of all pets whose age is older than 1. <s> SELECT petid ,  weight FROM pets WHERE pet_age  >  1 </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> What is the id and weight of every pet who is older than 1? <s> SELECT petid ,  weight FROM pets WHERE pet_age  >  1 </s>
--SEPARATOR--
Has_Pet <c> PetID <t> number <c> StuID <t> number </t> Student <c> Sex <t> text <c> Advisor <t> number <c> StuID <t> number <c> LName <t> text <c> Age <t> number <c> city_code <t> text <c> Fname <t> text <c> Major <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> weight <t> number <c> pet_age <t> number <i> What is the id and weight of every pet who is older than 1? <s> SELECT petid ,  weight FROM pets WHERE pet_age  >  1 </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> Find the average and maximum age for each type of pet. <s> SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype </s>
--SEPARATOR--
Student <c> Advisor <t> number <c> Fname <t> text <c> Major <t> number <c> city_code <t> text <c> Sex <t> text <c> Age <t> number <c> StuID <t> number <c> LName <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> pet_age <t> number <c> weight <t> number <c> PetType <t> text <i> Find the average and maximum age for each type of pet. <s> SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> What is the average and maximum age for each pet type? <s> SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype </s>
--SEPARATOR--
Pets <c> weight <t> number <c> PetType <t> text <c> PetID <t> number <c> pet_age <t> number </t> Student <c> LName <t> text <c> Fname <t> text <c> Major <t> number <c> Advisor <t> number <c> Sex <t> text <c> Age <t> number <c> city_code <t> text <c> StuID <t> number </t> Has_Pet <c> PetID <t> number <c> StuID <t> number <i> What is the average and maximum age for each pet type? <s> SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> Find the average weight for each pet type. <s> SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype </s>
--SEPARATOR--
Has_Pet <c> PetID <t> number <c> StuID <t> number </t> Pets <c> PetType <t> text <c> pet_age <t> number <c> PetID <t> number <c> weight <t> number </t> Student <c> Major <t> number <c> city_code <t> text <c> Fname <t> text <c> Age <t> number <c> Advisor <t> number <c> LName <t> text <c> StuID <t> number <c> Sex <t> text <i> Find the average weight for each pet type. <s> SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> What is the average weight for each type of pet? <s> SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype </s>
--SEPARATOR--
Has_Pet <c> PetID <t> number <c> StuID <t> number </t> Student <c> city_code <t> text <c> Age <t> number <c> LName <t> text <c> Fname <t> text <c> Sex <t> text <c> StuID <t> number <c> Advisor <t> number <c> Major <t> number </t> Pets <c> weight <t> number <c> pet_age <t> number <c> PetType <t> text <c> PetID <t> number <i> What is the average weight for each type of pet? <s> SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> Find the first name and age of students who have a pet. <s> SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid </s>
--SEPARATOR--
Pets <c> PetType <t> text <c> PetID <t> number <c> weight <t> number <c> pet_age <t> number </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Student <c> Sex <t> text <c> LName <t> text <c> Fname <t> text <c> StuID <t> number <c> Age <t> number <c> city_code <t> text <c> Major <t> number <c> Advisor <t> number <i> Find the first name and age of students who have a pet. <s> SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> What are the different first names and ages of the students who do have pets? <s> SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid </s>
--SEPARATOR--
Pets <c> weight <t> number <c> pet_age <t> number <c> PetType <t> text <c> PetID <t> number </t> Has_Pet <c> PetID <t> number <c> StuID <t> number </t> Student <c> Major <t> number <c> Advisor <t> number <c> LName <t> text <c> StuID <t> number <c> Age <t> number <c> Sex <t> text <c> city_code <t> text <c> Fname <t> text <i> What are the different first names and ages of the students who do have pets? <s> SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> Find the id of the pet owned by student whose last name is ‘Smith’. <s> SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith' </s>
--SEPARATOR--
Pets <c> pet_age <t> number <c> weight <t> number <c> PetID <t> number <c> PetType <t> text </t> Has_Pet <c> PetID <t> number <c> StuID <t> number </t> Student <c> Sex <t> text <c> StuID <t> number <c> Major <t> number <c> Advisor <t> number <c> Fname <t> text <c> city_code <t> text <c> LName <t> text <c> Age <t> number <i> Find the id of the pet owned by student whose last name is ‘Smith’. <s> SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith' </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> What is the id of the pet owned by the student whose last name is 'Smith'? <s> SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith' </s>
--SEPARATOR--
Pets <c> pet_age <t> number <c> PetType <t> text <c> weight <t> number <c> PetID <t> number </t> Has_Pet <c> PetID <t> number <c> StuID <t> number </t> Student <c> LName <t> text <c> Sex <t> text <c> StuID <t> number <c> city_code <t> text <c> Advisor <t> number <c> Age <t> number <c> Fname <t> text <c> Major <t> number <i> What is the id of the pet owned by the student whose last name is 'Smith'? <s> SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith' </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> Find the number of pets for each student who has any pet and student id. <s> SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid </s>
--SEPARATOR--
Pets <c> weight <t> number <c> pet_age <t> number <c> PetType <t> text <c> PetID <t> number </t> Has_Pet <c> PetID <t> number <c> StuID <t> number </t> Student <c> Age <t> number <c> city_code <t> text <c> LName <t> text <c> StuID <t> number <c> Fname <t> text <c> Advisor <t> number <c> Sex <t> text <c> Major <t> number <i> Find the number of pets for each student who has any pet and student id. <s> SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> For students who have pets , how many pets does each student have ? list their ids instead of names . <s> select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid </s>
--SEPARATOR--
Pets <c> pet_age <t> number <c> weight <t> number <c> PetID <t> number <c> PetType <t> text </t> Has_Pet <c> PetID <t> number <c> StuID <t> number </t> Student <c> Age <t> number <c> Major <t> number <c> StuID <t> number <c> LName <t> text <c> city_code <t> text <c> Sex <t> text <c> Advisor <t> number <c> Fname <t> text <i> For students who have pets , how many pets does each student have ? list their ids instead of names . <s> select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> Find the first name and gender of student who have more than one pet. <s> SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1 </s>
--SEPARATOR--
Student <c> city_code <t> text <c> Major <t> number <c> Fname <t> text <c> StuID <t> number <c> Age <t> number <c> Sex <t> text <c> Advisor <t> number <c> LName <t> text </t> Has_Pet <c> PetID <t> number <c> StuID <t> number </t> Pets <c> PetID <t> number <c> weight <t> number <c> pet_age <t> number <c> PetType <t> text <i> Find the first name and gender of student who have more than one pet. <s> SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1 </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> What is the first name and gender of the all the students who have more than one pet? <s> SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1 </s>
--SEPARATOR--
Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetType <t> text <c> weight <t> number <c> PetID <t> number <c> pet_age <t> number </t> Student <c> Age <t> number <c> Major <t> number <c> StuID <t> number <c> city_code <t> text <c> LName <t> text <c> Advisor <t> number <c> Fname <t> text <c> Sex <t> text <i> What is the first name and gender of the all the students who have more than one pet? <s> SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1 </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> Find the last name of the student who has a cat that is age 3. <s> SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat' </s>
--SEPARATOR--
Pets <c> weight <t> number <c> PetType <t> text <c> PetID <t> number <c> pet_age <t> number </t> Student <c> Age <t> number <c> StuID <t> number <c> Advisor <t> number <c> Fname <t> text <c> LName <t> text <c> city_code <t> text <c> Sex <t> text <c> Major <t> number </t> Has_Pet <c> StuID <t> number <c> PetID <t> number <i> Find the last name of the student who has a cat that is age 3. <s> SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat' </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> What is the last name of the student who has a cat that is 3 years old? <s> SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat' </s>
--SEPARATOR--
Has_Pet <c> PetID <t> number <c> StuID <t> number </t> Student <c> Age <t> number <c> LName <t> text <c> Major <t> number <c> Sex <t> text <c> Advisor <t> number <c> Fname <t> text <c> city_code <t> text <c> StuID <t> number </t> Pets <c> pet_age <t> number <c> PetID <t> number <c> weight <t> number <c> PetType <t> text <i> What is the last name of the student who has a cat that is 3 years old? <s> SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat' </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> Find the average age of students who do not have any pet . <s> select avg(age) from student where stuid not in (select stuid from has_pet) </s>
--SEPARATOR--
Has_Pet <c> PetID <t> number <c> StuID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number </t> Student <c> Major <t> number <c> StuID <t> number <c> Sex <t> text <c> Advisor <t> number <c> Fname <t> text <c> city_code <t> text <c> LName <t> text <c> Age <t> number <i> Find the average age of students who do not have any pet . <s> select avg(age) from student where stuid not in (select stuid from has_pet) </s>
--SEPARATOR--
Student <c> StuID <t> number <c> LName <t> text <c> Fname <t> text <c> Age <t> number <c> Sex <t> text <c> Major <t> number <c> Advisor <t> number <c> city_code <t> text </t> Has_Pet <c> StuID <t> number <c> PetID <t> number </t> Pets <c> PetID <t> number <c> PetType <t> text <c> pet_age <t> number <c> weight <t> number <i> What is the average age for all students who do not own any pets ? <s> select avg(age) from student where stuid not in (select stuid from has_pet) </s>
--SEPARATOR--
Pets <c> PetID <t> number <c> weight <t> number <c> pet_age <t> number <c> PetType <t> text </t> Student <c> LName <t> text <c> Advisor <t> number <c> StuID <t> number <c> Sex <t> text <c> Age <t> number <c> Fname <t> text <c> city_code <t> text <c> Major <t> number </t> Has_Pet <c> PetID <t> number <c> StuID <t> number <i> What is the average age for all students who do not own any pets ? <s> select avg(age) from student where stuid not in (select stuid from has_pet) </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> How many continents are there? <s> SELECT count(*) FROM CONTINENTS; </s>
--SEPARATOR--
car_names <c> Make <t> text <c> Model <t> text <c> MakeId <t> number </t> countries <c> CountryName <t> text <c> CountryId <t> number <c> Continent <t> number </t> model_list <c> Model <t> text <c> ModelId <t> number <c> Maker <t> number </t> car_makers <c> Id <t> number <c> FullName <t> text <c> Maker <t> text <c> Country <t> text </t> continents <c> ContId <t> number <c> Continent <t> text </t> cars_data <c> Year <t> number <c> Accelerate <t> number <c> Horsepower <t> text <c> Cylinders <t> number <c> Id <t> number <c> Edispl <t> number <c> MPG <t> text <c> Weight <t> number <i> How many continents are there? <s> SELECT count(*) FROM CONTINENTS; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What is the number of continents? <s> SELECT count(*) FROM CONTINENTS; </s>
--SEPARATOR--
countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> model_list <c> Maker <t> number <c> ModelId <t> number <c> Model <t> text </t> continents <c> ContId <t> number <c> Continent <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> Horsepower <t> text <c> Year <t> number <c> Accelerate <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Weight <t> number <c> Edispl <t> number </t> car_makers <c> Country <t> text <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <i> What is the number of continents? <s> SELECT count(*) FROM CONTINENTS; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> How many countries does each continent have? List the continent id, continent name and the number of countries. <s> SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId; </s>
--SEPARATOR--
car_makers <c> Id <t> number <c> Country <t> text <c> FullName <t> text <c> Maker <t> text </t> car_names <c> Model <t> text <c> Make <t> text <c> MakeId <t> number </t> cars_data <c> MPG <t> text <c> Year <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Cylinders <t> number <c> Accelerate <t> number <c> Id <t> number <c> Weight <t> number </t> continents <c> Continent <t> text <c> ContId <t> number </t> countries <c> CountryName <t> text <c> Continent <t> number <c> CountryId <t> number </t> model_list <c> ModelId <t> number <c> Model <t> text <c> Maker <t> number <i> How many countries does each continent have? List the continent id, continent name and the number of countries. <s> SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> For each continent, list its id, name, and how many countries it has? <s> SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId; </s>
--SEPARATOR--
continents <c> Continent <t> text <c> ContId <t> number </t> cars_data <c> Cylinders <t> number <c> Weight <t> number <c> Edispl <t> number <c> Id <t> number <c> Accelerate <t> number <c> Year <t> number <c> Horsepower <t> text <c> MPG <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> model_list <c> Maker <t> number <c> Model <t> text <c> ModelId <t> number </t> car_names <c> Make <t> text <c> MakeId <t> number <c> Model <t> text </t> car_makers <c> Id <t> number <c> FullName <t> text <c> Maker <t> text <c> Country <t> text <i> For each continent, list its id, name, and how many countries it has? <s> SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> How many countries are listed? <s> SELECT count(*) FROM COUNTRIES; </s>
--SEPARATOR--
car_makers <c> Id <t> number <c> FullName <t> text <c> Maker <t> text <c> Country <t> text </t> continents <c> Continent <t> text <c> ContId <t> number </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> cars_data <c> MPG <t> text <c> Weight <t> number <c> Id <t> number <c> Accelerate <t> number <c> Edispl <t> number <c> Cylinders <t> number <c> Horsepower <t> text <c> Year <t> number </t> car_names <c> Make <t> text <c> MakeId <t> number <c> Model <t> text </t> countries <c> CountryName <t> text <c> Continent <t> number <c> CountryId <t> number <i> How many countries are listed? <s> SELECT count(*) FROM COUNTRIES; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> How many countries exist? <s> SELECT count(*) FROM COUNTRIES; </s>
--SEPARATOR--
car_makers <c> Id <t> number <c> Maker <t> text <c> Country <t> text <c> FullName <t> text </t> cars_data <c> Edispl <t> number <c> MPG <t> text <c> Accelerate <t> number <c> Year <t> number <c> Horsepower <t> text <c> Id <t> number <c> Cylinders <t> number <c> Weight <t> number </t> continents <c> Continent <t> text <c> ContId <t> number </t> car_names <c> Model <t> text <c> Make <t> text <c> MakeId <t> number </t> model_list <c> Model <t> text <c> ModelId <t> number <c> Maker <t> number </t> countries <c> CountryName <t> text <c> Continent <t> number <c> CountryId <t> number <i> How many countries exist? <s> SELECT count(*) FROM COUNTRIES; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> How many models does each car maker produce? List maker full name, id and the number. <s> SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id; </s>
--SEPARATOR--
car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Accelerate <t> number <c> Cylinders <t> number <c> Edispl <t> number <c> Year <t> number <c> MPG <t> text <c> Id <t> number <c> Horsepower <t> text <c> Weight <t> number </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Maker <t> text <c> Country <t> text <c> Id <t> number <c> FullName <t> text </t> model_list <c> Maker <t> number <c> Model <t> text <c> ModelId <t> number </t> continents <c> ContId <t> number <c> Continent <t> text <i> How many models does each car maker produce? List maker full name, id and the number. <s> SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What is the full name of each car maker, along with its id and how many models it produces? <s> SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id; </s>
--SEPARATOR--
countries <c> CountryName <t> text <c> Continent <t> number <c> CountryId <t> number </t> model_list <c> Maker <t> number <c> ModelId <t> number <c> Model <t> text </t> cars_data <c> Edispl <t> number <c> Year <t> number <c> MPG <t> text <c> Id <t> number <c> Accelerate <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Cylinders <t> number </t> car_names <c> MakeId <t> number <c> Make <t> text <c> Model <t> text </t> car_makers <c> FullName <t> text <c> Id <t> number <c> Country <t> text <c> Maker <t> text </t> continents <c> Continent <t> text <c> ContId <t> number <i> What is the full name of each car maker, along with its id and how many models it produces? <s> SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> Which model of the car has the minimum horsepower? <s> SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1; </s>
--SEPARATOR--
cars_data <c> Cylinders <t> number <c> Year <t> number <c> Id <t> number <c> Accelerate <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> MPG <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> car_makers <c> FullName <t> text <c> Id <t> number <c> Country <t> text <c> Maker <t> text </t> continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryName <t> text <c> Continent <t> number <c> CountryId <t> number </t> model_list <c> Maker <t> number <c> ModelId <t> number <c> Model <t> text <i> Which model of the car has the minimum horsepower? <s> SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What is the model of the car with the smallest amount of horsepower? <s> SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1; </s>
--SEPARATOR--
car_names <c> Model <t> text <c> Make <t> text <c> MakeId <t> number </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> Continent <t> number <c> CountryName <t> text </t> car_makers <c> Country <t> text <c> Maker <t> text <c> FullName <t> text <c> Id <t> number </t> cars_data <c> Weight <t> number <c> Horsepower <t> text <c> Accelerate <t> number <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Year <t> number <i> What is the model of the car with the smallest amount of horsepower? <s> SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> Find the model of the car whose weight is below the average weight. <s> SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA) </s>
--SEPARATOR--
car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Weight <t> number <c> Horsepower <t> text <c> Year <t> number <c> Edispl <t> number <c> Accelerate <t> number </t> countries <c> CountryId <t> number <c> Continent <t> number <c> CountryName <t> text </t> car_makers <c> FullName <t> text <c> Country <t> text <c> Maker <t> text <c> Id <t> number </t> model_list <c> ModelId <t> number <c> Model <t> text <c> Maker <t> number </t> continents <c> Continent <t> text <c> ContId <t> number <i> Find the model of the car whose weight is below the average weight. <s> SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA) </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What is the model for the car with a weight smaller than the average? <s> SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA) </s>
--SEPARATOR--
cars_data <c> Accelerate <t> number <c> Horsepower <t> text <c> Id <t> number <c> Weight <t> number <c> Edispl <t> number <c> Year <t> number <c> MPG <t> text <c> Cylinders <t> number </t> model_list <c> Maker <t> number <c> Model <t> text <c> ModelId <t> number </t> car_names <c> Model <t> text <c> Make <t> text <c> MakeId <t> number </t> car_makers <c> FullName <t> text <c> Country <t> text <c> Maker <t> text <c> Id <t> number </t> continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryName <t> text <c> Continent <t> number <c> CountryId <t> number <i> What is the model for the car with a weight smaller than the average? <s> SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA) </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> Find the name of the makers that produced some cars in the year of 1970? <s> SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970'; </s>
--SEPARATOR--
cars_data <c> Edispl <t> number <c> Horsepower <t> text <c> MPG <t> text <c> Year <t> number <c> Id <t> number <c> Accelerate <t> number <c> Weight <t> number <c> Cylinders <t> number </t> car_makers <c> Country <t> text <c> Maker <t> text <c> Id <t> number <c> FullName <t> text </t> model_list <c> ModelId <t> number <c> Model <t> text <c> Maker <t> number </t> countries <c> Continent <t> number <c> CountryName <t> text <c> CountryId <t> number </t> continents <c> Continent <t> text <c> ContId <t> number </t> car_names <c> MakeId <t> number <c> Make <t> text <c> Model <t> text <i> Find the name of the makers that produced some cars in the year of 1970? <s> SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970'; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What is the name of the different car makers who produced a car in 1970? <s> SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970'; </s>
--SEPARATOR--
car_names <c> Model <t> text <c> MakeId <t> number <c> Make <t> text </t> car_makers <c> Maker <t> text <c> Country <t> text <c> FullName <t> text <c> Id <t> number </t> model_list <c> Model <t> text <c> ModelId <t> number <c> Maker <t> number </t> continents <c> ContId <t> number <c> Continent <t> text </t> cars_data <c> Cylinders <t> number <c> MPG <t> text <c> Year <t> number <c> Id <t> number <c> Edispl <t> number <c> Weight <t> number <c> Accelerate <t> number <c> Horsepower <t> text </t> countries <c> CountryId <t> number <c> Continent <t> number <c> CountryName <t> text <i> What is the name of the different car makers who produced a car in 1970? <s> SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970'; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> Find the make and production time of the cars that were produced in the earliest year? <s> SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA); </s>
--SEPARATOR--
model_list <c> ModelId <t> number <c> Model <t> text <c> Maker <t> number </t> car_names <c> Make <t> text <c> MakeId <t> number <c> Model <t> text </t> countries <c> Continent <t> number <c> CountryName <t> text <c> CountryId <t> number </t> car_makers <c> Country <t> text <c> Maker <t> text <c> Id <t> number <c> FullName <t> text </t> continents <c> Continent <t> text <c> ContId <t> number </t> cars_data <c> Edispl <t> number <c> Cylinders <t> number <c> Horsepower <t> text <c> Id <t> number <c> MPG <t> text <c> Year <t> number <c> Accelerate <t> number <c> Weight <t> number <i> Find the make and production time of the cars that were produced in the earliest year? <s> SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA); </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What is the maker of the carr produced in the earliest year and what year was it? <s> SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA); </s>
--SEPARATOR--
car_makers <c> FullName <t> text <c> Country <t> text <c> Id <t> number <c> Maker <t> text </t> model_list <c> Maker <t> number <c> Model <t> text <c> ModelId <t> number </t> continents <c> Continent <t> text <c> ContId <t> number </t> countries <c> Continent <t> number <c> CountryName <t> text <c> CountryId <t> number </t> cars_data <c> Accelerate <t> number <c> MPG <t> text <c> Weight <t> number <c> Id <t> number <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Year <t> number </t> car_names <c> Make <t> text <c> MakeId <t> number <c> Model <t> text <i> What is the maker of the carr produced in the earliest year and what year was it? <s> SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA); </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> Which distinct car models are the produced after 1980? <s> SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980; </s>
--SEPARATOR--
countries <c> CountryName <t> text <c> CountryId <t> number <c> Continent <t> number </t> car_makers <c> Country <t> text <c> FullName <t> text <c> Maker <t> text <c> Id <t> number </t> cars_data <c> Edispl <t> number <c> MPG <t> text <c> Year <t> number <c> Weight <t> number <c> Accelerate <t> number <c> Id <t> number <c> Horsepower <t> text <c> Cylinders <t> number </t> model_list <c> Model <t> text <c> Maker <t> number <c> ModelId <t> number </t> continents <c> Continent <t> text <c> ContId <t> number </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text <i> Which distinct car models are the produced after 1980? <s> SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What are the different models for the cards produced after 1980? <s> SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980; </s>
--SEPARATOR--
model_list <c> Model <t> text <c> ModelId <t> number <c> Maker <t> number </t> continents <c> ContId <t> number <c> Continent <t> text </t> cars_data <c> MPG <t> text <c> Id <t> number <c> Edispl <t> number <c> Year <t> number <c> Weight <t> number <c> Horsepower <t> text <c> Accelerate <t> number <c> Cylinders <t> number </t> car_makers <c> Maker <t> text <c> Id <t> number <c> Country <t> text <c> FullName <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> countries <c> CountryName <t> text <c> CountryId <t> number <c> Continent <t> number <i> What are the different models for the cards produced after 1980? <s> SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> How many car makers are there in each continents? List the continent name and the count. <s> SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent; </s>
--SEPARATOR--
car_makers <c> Id <t> number <c> Country <t> text <c> FullName <t> text <c> Maker <t> text </t> cars_data <c> Year <t> number <c> Cylinders <t> number <c> Horsepower <t> text <c> Accelerate <t> number <c> Weight <t> number <c> MPG <t> text <c> Edispl <t> number <c> Id <t> number </t> model_list <c> Model <t> text <c> ModelId <t> number <c> Maker <t> number </t> countries <c> CountryName <t> text <c> Continent <t> number <c> CountryId <t> number </t> continents <c> Continent <t> text <c> ContId <t> number </t> car_names <c> Make <t> text <c> MakeId <t> number <c> Model <t> text <i> How many car makers are there in each continents? List the continent name and the count. <s> SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What is the name of each continent and how many car makers are there in each one? <s> SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent; </s>
--SEPARATOR--
cars_data <c> Horsepower <t> text <c> Year <t> number <c> Cylinders <t> number <c> MPG <t> text <c> Weight <t> number <c> Id <t> number <c> Accelerate <t> number <c> Edispl <t> number </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> continents <c> ContId <t> number <c> Continent <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> countries <c> CountryName <t> text <c> Continent <t> number <c> CountryId <t> number </t> car_makers <c> FullName <t> text <c> Country <t> text <c> Maker <t> text <c> Id <t> number <i> What is the name of each continent and how many car makers are there in each one? <s> SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> Which of the countries has the most car makers? List the country name. <s> SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1; </s>
--SEPARATOR--
countries <c> CountryName <t> text <c> Continent <t> number <c> CountryId <t> number </t> car_makers <c> Country <t> text <c> Id <t> number <c> FullName <t> text <c> Maker <t> text </t> continents <c> ContId <t> number <c> Continent <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Horsepower <t> text <c> Weight <t> number <c> Year <t> number <c> Cylinders <t> number <c> Accelerate <t> number <c> Edispl <t> number </t> model_list <c> Model <t> text <c> Maker <t> number <c> ModelId <t> number </t> car_names <c> Make <t> text <c> MakeId <t> number <c> Model <t> text <i> Which of the countries has the most car makers? List the country name. <s> SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What is the name of the country with the most car makers? <s> SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1; </s>
--SEPARATOR--
car_names <c> Model <t> text <c> Make <t> text <c> MakeId <t> number </t> continents <c> ContId <t> number <c> Continent <t> text </t> car_makers <c> FullName <t> text <c> Country <t> text <c> Maker <t> text <c> Id <t> number </t> cars_data <c> Horsepower <t> text <c> Weight <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Accelerate <t> number <c> Edispl <t> number <c> Id <t> number <c> Year <t> number </t> countries <c> CountryName <t> text <c> Continent <t> number <c> CountryId <t> number </t> model_list <c> Maker <t> number <c> Model <t> text <c> ModelId <t> number <i> What is the name of the country with the most car makers? <s> SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> How many car models are produced by each maker ? Only list the count and the maker full name . <s> select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id; </s>
--SEPARATOR--
model_list <c> Model <t> text <c> ModelId <t> number <c> Maker <t> number </t> cars_data <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Cylinders <t> number <c> Id <t> number <c> Year <t> number <c> MPG <t> text <c> Edispl <t> number </t> car_names <c> Model <t> text <c> MakeId <t> number <c> Make <t> text </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> Continent <t> number <c> CountryId <t> number <c> CountryName <t> text <i> How many car models are produced by each maker ? Only list the count and the maker full name . <s> select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What is the number of car models that are produced by each maker and what is the id and full name of each maker? <s> SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id; </s>
--SEPARATOR--
cars_data <c> Horsepower <t> text <c> Cylinders <t> number <c> Id <t> number <c> Accelerate <t> number <c> Edispl <t> number <c> MPG <t> text <c> Weight <t> number <c> Year <t> number </t> countries <c> CountryId <t> number <c> Continent <t> number <c> CountryName <t> text </t> car_makers <c> FullName <t> text <c> Id <t> number <c> Country <t> text <c> Maker <t> text </t> model_list <c> Model <t> text <c> ModelId <t> number <c> Maker <t> number </t> continents <c> ContId <t> number <c> Continent <t> text </t> car_names <c> Model <t> text <c> MakeId <t> number <c> Make <t> text <i> What is the number of car models that are produced by each maker and what is the id and full name of each maker? <s> SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What is the accelerate of the car make amc hornet sportabout (sw)? <s> SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)'; </s>
--SEPARATOR--
model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_makers <c> Maker <t> text <c> FullName <t> text <c> Id <t> number <c> Country <t> text </t> cars_data <c> Year <t> number <c> Cylinders <t> number <c> Accelerate <t> number <c> Weight <t> number <c> Id <t> number <c> MPG <t> text <c> Edispl <t> number <c> Horsepower <t> text </t> car_names <c> Make <t> text <c> MakeId <t> number <c> Model <t> text </t> continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number <i> What is the accelerate of the car make amc hornet sportabout (sw)? <s> SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)'; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> How much does the car accelerate that makes amc hornet sportabout (sw)? <s> SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)'; </s>
--SEPARATOR--
cars_data <c> Cylinders <t> number <c> Horsepower <t> text <c> Year <t> number <c> Id <t> number <c> Weight <t> number <c> MPG <t> text <c> Accelerate <t> number <c> Edispl <t> number </t> model_list <c> ModelId <t> number <c> Model <t> text <c> Maker <t> number </t> car_makers <c> Country <t> text <c> FullName <t> text <c> Maker <t> text <c> Id <t> number </t> continents <c> ContId <t> number <c> Continent <t> text </t> car_names <c> Model <t> text <c> Make <t> text <c> MakeId <t> number </t> countries <c> CountryName <t> text <c> CountryId <t> number <c> Continent <t> number <i> How much does the car accelerate that makes amc hornet sportabout (sw)? <s> SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)'; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> How many car makers are there in france? <s> SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france'; </s>
--SEPARATOR--
model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> cars_data <c> Horsepower <t> text <c> Cylinders <t> number <c> MPG <t> text <c> Edispl <t> number <c> Accelerate <t> number <c> Id <t> number <c> Year <t> number <c> Weight <t> number </t> car_makers <c> Country <t> text <c> FullName <t> text <c> Id <t> number <c> Maker <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> continents <c> Continent <t> text <c> ContId <t> number </t> car_names <c> Model <t> text <c> Make <t> text <c> MakeId <t> number <i> How many car makers are there in france? <s> SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france'; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What is the number of makers of care in France? <s> SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france'; </s>
--SEPARATOR--
car_makers <c> Country <t> text <c> Maker <t> text <c> FullName <t> text <c> Id <t> number </t> model_list <c> Maker <t> number <c> ModelId <t> number <c> Model <t> text </t> car_names <c> Model <t> text <c> Make <t> text <c> MakeId <t> number </t> countries <c> CountryName <t> text <c> Continent <t> number <c> CountryId <t> number </t> cars_data <c> Cylinders <t> number <c> Id <t> number <c> MPG <t> text <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Year <t> number <c> Accelerate <t> number </t> continents <c> Continent <t> text <c> ContId <t> number <i> What is the number of makers of care in France? <s> SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france'; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> How many car models are produced in the usa? <s> SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa'; </s>
--SEPARATOR--
car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> model_list <c> Model <t> text <c> ModelId <t> number <c> Maker <t> number </t> continents <c> Continent <t> text <c> ContId <t> number </t> car_makers <c> FullName <t> text <c> Maker <t> text <c> Id <t> number <c> Country <t> text </t> countries <c> CountryName <t> text <c> Continent <t> number <c> CountryId <t> number </t> cars_data <c> Horsepower <t> text <c> Weight <t> number <c> Year <t> number <c> Accelerate <t> number <c> Cylinders <t> number <c> Id <t> number <c> Edispl <t> number <c> MPG <t> text <i> How many car models are produced in the usa? <s> SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa'; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What is the count of the car models produced in the United States? <s> SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa'; </s>
--SEPARATOR--
car_makers <c> Maker <t> text <c> Id <t> number <c> FullName <t> text <c> Country <t> text </t> cars_data <c> Edispl <t> number <c> Cylinders <t> number <c> MPG <t> text <c> Year <t> number <c> Weight <t> number <c> Id <t> number <c> Accelerate <t> number <c> Horsepower <t> text </t> continents <c> ContId <t> number <c> Continent <t> text </t> car_names <c> Model <t> text <c> Make <t> text <c> MakeId <t> number </t> model_list <c> ModelId <t> number <c> Model <t> text <c> Maker <t> number </t> countries <c> CountryName <t> text <c> Continent <t> number <c> CountryId <t> number <i> What is the count of the car models produced in the United States? <s> SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa'; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What is the average miles per gallon(mpg) of the cars with 4 cylinders? <s> SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> model_list <c> ModelId <t> number <c> Model <t> text <c> Maker <t> number </t> car_makers <c> Maker <t> text <c> FullName <t> text <c> Country <t> text <c> Id <t> number </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_names <c> Make <t> text <c> MakeId <t> number <c> Model <t> text </t> cars_data <c> Id <t> number <c> Edispl <t> number <c> Weight <t> number <c> Cylinders <t> number <c> Accelerate <t> number <c> Year <t> number <c> Horsepower <t> text <c> MPG <t> text <i> What is the average miles per gallon(mpg) of the cars with 4 cylinders? <s> SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What is the average miles per gallon of all the cards with 4 cylinders? <s> SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4; </s>
--SEPARATOR--
countries <c> CountryName <t> text <c> CountryId <t> number <c> Continent <t> number </t> cars_data <c> Cylinders <t> number <c> MPG <t> text <c> Accelerate <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Year <t> number <c> Id <t> number <c> Edispl <t> number </t> car_names <c> Model <t> text <c> Make <t> text <c> MakeId <t> number </t> model_list <c> Model <t> text <c> ModelId <t> number <c> Maker <t> number </t> car_makers <c> Country <t> text <c> Id <t> number <c> FullName <t> text <c> Maker <t> text </t> continents <c> ContId <t> number <c> Continent <t> text <i> What is the average miles per gallon of all the cards with 4 cylinders? <s> SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What is the smallest weight of the car produced with 8 cylinders on 1974 ? <s> select min(weight) from cars_data where cylinders  =  8 and year  =  1974 </s>
--SEPARATOR--
model_list <c> ModelId <t> number <c> Model <t> text <c> Maker <t> number </t> car_names <c> Model <t> text <c> Make <t> text <c> MakeId <t> number </t> continents <c> ContId <t> number <c> Continent <t> text </t> cars_data <c> Cylinders <t> number <c> Edispl <t> number <c> Accelerate <t> number <c> MPG <t> text <c> Horsepower <t> text <c> Weight <t> number <c> Id <t> number <c> Year <t> number </t> countries <c> Continent <t> number <c> CountryId <t> number <c> CountryName <t> text </t> car_makers <c> FullName <t> text <c> Maker <t> text <c> Id <t> number <c> Country <t> text <i> What is the smallest weight of the car produced with 8 cylinders on 1974 ? <s> select min(weight) from cars_data where cylinders  =  8 and year  =  1974 </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What is the minimum weight of the car with 8 cylinders produced in 1974 ? <s> select min(weight) from cars_data where cylinders  =  8 and year  =  1974 </s>
--SEPARATOR--
continents <c> Continent <t> text <c> ContId <t> number </t> cars_data <c> Year <t> number <c> Weight <t> number <c> Edispl <t> number <c> Accelerate <t> number <c> Horsepower <t> text <c> Cylinders <t> number <c> MPG <t> text <c> Id <t> number </t> countries <c> Continent <t> number <c> CountryId <t> number <c> CountryName <t> text </t> car_makers <c> Maker <t> text <c> Id <t> number <c> FullName <t> text <c> Country <t> text </t> model_list <c> Model <t> text <c> Maker <t> number <c> ModelId <t> number </t> car_names <c> Model <t> text <c> Make <t> text <c> MakeId <t> number <i> What is the minimum weight of the car with 8 cylinders produced in 1974 ? <s> select min(weight) from cars_data where cylinders  =  8 and year  =  1974 </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What are all the makers and models? <s> SELECT Maker ,  Model FROM MODEL_LIST; </s>
--SEPARATOR--
car_names <c> Model <t> text <c> Make <t> text <c> MakeId <t> number </t> car_makers <c> Country <t> text <c> FullName <t> text <c> Id <t> number <c> Maker <t> text </t> cars_data <c> Id <t> number <c> Accelerate <t> number <c> Horsepower <t> text <c> Year <t> number <c> Weight <t> number <c> Edispl <t> number <c> MPG <t> text <c> Cylinders <t> number </t> countries <c> CountryId <t> number <c> Continent <t> number <c> CountryName <t> text </t> continents <c> ContId <t> number <c> Continent <t> text </t> model_list <c> ModelId <t> number <c> Model <t> text <c> Maker <t> number <i> What are all the makers and models? <s> SELECT Maker ,  Model FROM MODEL_LIST; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What are the makers and models? <s> SELECT Maker ,  Model FROM MODEL_LIST; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryName <t> text <c> CountryId <t> number <c> Continent <t> number </t> model_list <c> ModelId <t> number <c> Model <t> text <c> Maker <t> number </t> car_names <c> Model <t> text <c> Make <t> text <c> MakeId <t> number </t> cars_data <c> Year <t> number <c> Accelerate <t> number <c> Edispl <t> number <c> Weight <t> number <c> Horsepower <t> text <c> MPG <t> text <c> Id <t> number <c> Cylinders <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text <i> What are the makers and models? <s> SELECT Maker ,  Model FROM MODEL_LIST; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What are the countries having at least one car maker? List name and id. <s> SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1; </s>
--SEPARATOR--
car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> countries <c> CountryName <t> text <c> Continent <t> number <c> CountryId <t> number </t> model_list <c> Model <t> text <c> ModelId <t> number <c> Maker <t> number </t> car_makers <c> Maker <t> text <c> Id <t> number <c> Country <t> text <c> FullName <t> text </t> cars_data <c> Weight <t> number <c> Cylinders <t> number <c> Id <t> number <c> Accelerate <t> number <c> Horsepower <t> text <c> MPG <t> text <c> Year <t> number <c> Edispl <t> number </t> continents <c> ContId <t> number <c> Continent <t> text <i> What are the countries having at least one car maker? List name and id. <s> SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What are the names and ids of all countries with at least one car maker? <s> SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1; </s>
--SEPARATOR--
cars_data <c> Id <t> number <c> Accelerate <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Cylinders <t> number <c> Year <t> number <c> MPG <t> text <c> Weight <t> number </t> model_list <c> Maker <t> number <c> Model <t> text <c> ModelId <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> continents <c> ContId <t> number <c> Continent <t> text </t> car_names <c> Model <t> text <c> Make <t> text <c> MakeId <t> number </t> countries <c> CountryId <t> number <c> Continent <t> number <c> CountryName <t> text <i> What are the names and ids of all countries with at least one car maker? <s> SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What is the number of the cars with horsepower more than 150? <s> SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150; </s>
--SEPARATOR--
car_names <c> Model <t> text <c> Make <t> text <c> MakeId <t> number </t> car_makers <c> FullName <t> text <c> Country <t> text <c> Maker <t> text <c> Id <t> number </t> cars_data <c> Edispl <t> number <c> Accelerate <t> number <c> Weight <t> number <c> Cylinders <t> number <c> Year <t> number <c> MPG <t> text <c> Horsepower <t> text <c> Id <t> number </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> model_list <c> Model <t> text <c> ModelId <t> number <c> Maker <t> number </t> continents <c> Continent <t> text <c> ContId <t> number <i> What is the number of the cars with horsepower more than 150? <s> SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What is the number of cars with a horsepower greater than 150? <s> SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150; </s>
--SEPARATOR--
car_names <c> MakeId <t> number <c> Make <t> text <c> Model <t> text </t> cars_data <c> Weight <t> number <c> Year <t> number <c> Accelerate <t> number <c> Id <t> number <c> Edispl <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Horsepower <t> text </t> car_makers <c> Id <t> number <c> Maker <t> text <c> Country <t> text <c> FullName <t> text </t> continents <c> ContId <t> number <c> Continent <t> text </t> model_list <c> Model <t> text <c> ModelId <t> number <c> Maker <t> number </t> countries <c> CountryId <t> number <c> Continent <t> number <c> CountryName <t> text <i> What is the number of cars with a horsepower greater than 150? <s> SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What is the average weight of cars each year? <s> SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR; </s>
--SEPARATOR--
cars_data <c> Year <t> number <c> Cylinders <t> number <c> Accelerate <t> number <c> Id <t> number <c> Weight <t> number <c> Edispl <t> number <c> MPG <t> text <c> Horsepower <t> text </t> model_list <c> Maker <t> number <c> Model <t> text <c> ModelId <t> number </t> car_names <c> Make <t> text <c> Model <t> text <c> MakeId <t> number </t> countries <c> CountryName <t> text <c> CountryId <t> number <c> Continent <t> number </t> car_makers <c> FullName <t> text <c> Maker <t> text <c> Id <t> number <c> Country <t> text </t> continents <c> ContId <t> number <c> Continent <t> text <i> What is the average weight of cars each year? <s> SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What is the average weight and year for each year? <s> SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR; </s>
--SEPARATOR--
cars_data <c> Accelerate <t> number <c> Cylinders <t> number <c> Weight <t> number <c> Horsepower <t> text <c> Edispl <t> number <c> Id <t> number <c> MPG <t> text <c> Year <t> number </t> countries <c> Continent <t> number <c> CountryId <t> number <c> CountryName <t> text </t> continents <c> ContId <t> number <c> Continent <t> text </t> model_list <c> Maker <t> number <c> ModelId <t> number <c> Model <t> text </t> car_makers <c> Id <t> number <c> Country <t> text <c> FullName <t> text <c> Maker <t> text </t> car_names <c> Make <t> text <c> MakeId <t> number <c> Model <t> text <i> What is the average weight and year for each year? <s> SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> Which countries in europe have at least 3 car manufacturers? <s> SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3; </s>
--SEPARATOR--
continents <c> Continent <t> text <c> ContId <t> number </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> car_makers <c> Country <t> text <c> Id <t> number <c> Maker <t> text <c> FullName <t> text </t> model_list <c> Maker <t> number <c> Model <t> text <c> ModelId <t> number </t> cars_data <c> Edispl <t> number <c> Cylinders <t> number <c> Accelerate <t> number <c> Horsepower <t> text <c> MPG <t> text <c> Year <t> number <c> Id <t> number <c> Weight <t> number </t> countries <c> CountryId <t> number <c> Continent <t> number <c> CountryName <t> text <i> Which countries in europe have at least 3 car manufacturers? <s> SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What are the names of all European countries with at least 3 manufacturers? <s> SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3; </s>
--SEPARATOR--
car_makers <c> Country <t> text <c> Id <t> number <c> Maker <t> text <c> FullName <t> text </t> car_names <c> Make <t> text <c> MakeId <t> number <c> Model <t> text </t> countries <c> CountryName <t> text <c> Continent <t> number <c> CountryId <t> number </t> continents <c> ContId <t> number <c> Continent <t> text </t> cars_data <c> Accelerate <t> number <c> Id <t> number <c> MPG <t> text <c> Horsepower <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Weight <t> number <c> Year <t> number </t> model_list <c> Model <t> text <c> Maker <t> number <c> ModelId <t> number <i> What are the names of all European countries with at least 3 manufacturers? <s> SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What is the maximum horsepower and the make of the car models with 3 cylinders? <s> SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> car_makers <c> Id <t> number <c> Maker <t> text <c> Country <t> text <c> FullName <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> cars_data <c> Edispl <t> number <c> Id <t> number <c> Weight <t> number <c> Accelerate <t> number <c> Horsepower <t> text <c> Year <t> number <c> MPG <t> text <c> Cylinders <t> number </t> countries <c> CountryId <t> number <c> Continent <t> number <c> CountryName <t> text </t> car_names <c> Make <t> text <c> MakeId <t> number <c> Model <t> text <i> What is the maximum horsepower and the make of the car models with 3 cylinders? <s> SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What is the largest amount of horsepower for the models with 3 cylinders and what make is it? <s> SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1; </s>
--SEPARATOR--
model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> cars_data <c> Horsepower <t> text <c> Year <t> number <c> MPG <t> text <c> Id <t> number <c> Weight <t> number <c> Cylinders <t> number <c> Accelerate <t> number <c> Edispl <t> number </t> car_makers <c> FullName <t> text <c> Id <t> number <c> Country <t> text <c> Maker <t> text </t> countries <c> CountryName <t> text <c> Continent <t> number <c> CountryId <t> number </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> continents <c> ContId <t> number <c> Continent <t> text <i> What is the largest amount of horsepower for the models with 3 cylinders and what make is it? <s> SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> Which model saves the most gasoline? That is to say, have the maximum miles per gallon. <s> SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1; </s>
--SEPARATOR--
cars_data <c> MPG <t> text <c> Id <t> number <c> Cylinders <t> number <c> Horsepower <t> text <c> Edispl <t> number <c> Weight <t> number <c> Year <t> number <c> Accelerate <t> number </t> continents <c> Continent <t> text <c> ContId <t> number </t> countries <c> CountryName <t> text <c> CountryId <t> number <c> Continent <t> number </t> model_list <c> Maker <t> number <c> ModelId <t> number <c> Model <t> text </t> car_names <c> Make <t> text <c> MakeId <t> number <c> Model <t> text </t> car_makers <c> Country <t> text <c> Id <t> number <c> FullName <t> text <c> Maker <t> text <i> Which model saves the most gasoline? That is to say, have the maximum miles per gallon. <s> SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What is the car model with the highest mpg ? <s> select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1; </s>
--SEPARATOR--
car_names <c> Make <t> text <c> MakeId <t> number <c> Model <t> text </t> continents <c> Continent <t> text <c> ContId <t> number </t> car_makers <c> Country <t> text <c> FullName <t> text <c> Id <t> number <c> Maker <t> text </t> countries <c> CountryName <t> text <c> Continent <t> number <c> CountryId <t> number </t> cars_data <c> Horsepower <t> text <c> MPG <t> text <c> Accelerate <t> number <c> Cylinders <t> number <c> Edispl <t> number <c> Id <t> number <c> Weight <t> number <c> Year <t> number </t> model_list <c> Model <t> text <c> Maker <t> number <c> ModelId <t> number <i> What is the car model with the highest mpg ? <s> select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What is the average horsepower of the cars before 1980? <s> SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980; </s>
--SEPARATOR--
car_makers <c> Maker <t> text <c> FullName <t> text <c> Id <t> number <c> Country <t> text </t> continents <c> ContId <t> number <c> Continent <t> text </t> car_names <c> Make <t> text <c> MakeId <t> number <c> Model <t> text </t> model_list <c> Maker <t> number <c> Model <t> text <c> ModelId <t> number </t> cars_data <c> Edispl <t> number <c> Accelerate <t> number <c> Horsepower <t> text <c> Weight <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Year <t> number <c> Id <t> number </t> countries <c> CountryId <t> number <c> Continent <t> number <c> CountryName <t> text <i> What is the average horsepower of the cars before 1980? <s> SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What is the average horsepower for all cars produced before 1980 ? <s> select avg(horsepower) from cars_data where year  <  1980; </s>
--SEPARATOR--
model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> countries <c> CountryId <t> number <c> Continent <t> number <c> CountryName <t> text </t> car_names <c> Model <t> text <c> Make <t> text <c> MakeId <t> number </t> car_makers <c> FullName <t> text <c> Maker <t> text <c> Id <t> number <c> Country <t> text </t> continents <c> ContId <t> number <c> Continent <t> text </t> cars_data <c> Cylinders <t> number <c> Horsepower <t> text <c> Id <t> number <c> Edispl <t> number <c> Accelerate <t> number <c> Year <t> number <c> Weight <t> number <c> MPG <t> text <i> What is the average horsepower for all cars produced before 1980 ? <s> select avg(horsepower) from cars_data where year  <  1980; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What is the average edispl of the cars of model volvo? <s> SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo'; </s>
--SEPARATOR--
car_makers <c> FullName <t> text <c> Maker <t> text <c> Country <t> text <c> Id <t> number </t> cars_data <c> MPG <t> text <c> Accelerate <t> number <c> Edispl <t> number <c> Weight <t> number <c> Horsepower <t> text <c> Cylinders <t> number <c> Year <t> number <c> Id <t> number </t> countries <c> CountryName <t> text <c> Continent <t> number <c> CountryId <t> number </t> car_names <c> Make <t> text <c> Model <t> text <c> MakeId <t> number </t> continents <c> ContId <t> number <c> Continent <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text <i> What is the average edispl of the cars of model volvo? <s> SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo'; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What is the average edispl for all volvos? <s> SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo'; </s>
--SEPARATOR--
model_list <c> Maker <t> number <c> ModelId <t> number <c> Model <t> text </t> car_names <c> Model <t> text <c> MakeId <t> number <c> Make <t> text </t> continents <c> Continent <t> text <c> ContId <t> number </t> cars_data <c> MPG <t> text <c> Horsepower <t> text <c> Edispl <t> number <c> Year <t> number <c> Accelerate <t> number <c> Weight <t> number <c> Cylinders <t> number <c> Id <t> number </t> car_makers <c> FullName <t> text <c> Country <t> text <c> Maker <t> text <c> Id <t> number </t> countries <c> Continent <t> number <c> CountryName <t> text <c> CountryId <t> number <i> What is the average edispl for all volvos? <s> SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo'; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What is the maximum accelerate for different number of cylinders? <s> SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders; </s>
--SEPARATOR--
countries <c> Continent <t> number <c> CountryId <t> number <c> CountryName <t> text </t> model_list <c> Maker <t> number <c> ModelId <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> continents <c> Continent <t> text <c> ContId <t> number </t> car_makers <c> Country <t> text <c> Id <t> number <c> FullName <t> text <c> Maker <t> text </t> cars_data <c> Edispl <t> number <c> Accelerate <t> number <c> Id <t> number <c> Horsepower <t> text <c> MPG <t> text <c> Cylinders <t> number <c> Weight <t> number <c> Year <t> number <i> What is the maximum accelerate for different number of cylinders? <s> SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What is the maximum accelerate for all the different cylinders? <s> SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders; </s>
--SEPARATOR--
car_names <c> Model <t> text <c> Make <t> text <c> MakeId <t> number </t> cars_data <c> Edispl <t> number <c> Cylinders <t> number <c> Id <t> number <c> MPG <t> text <c> Accelerate <t> number <c> Weight <t> number <c> Horsepower <t> text <c> Year <t> number </t> countries <c> CountryName <t> text <c> CountryId <t> number <c> Continent <t> number </t> continents <c> Continent <t> text <c> ContId <t> number </t> car_makers <c> Maker <t> text <c> Id <t> number <c> Country <t> text <c> FullName <t> text </t> model_list <c> Maker <t> number <c> Model <t> text <c> ModelId <t> number <i> What is the maximum accelerate for all the different cylinders? <s> SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> Which model has the most version(make) of cars? <s> SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1; </s>
--SEPARATOR--
countries <c> Continent <t> number <c> CountryName <t> text <c> CountryId <t> number </t> continents <c> Continent <t> text <c> ContId <t> number </t> car_names <c> Make <t> text <c> MakeId <t> number <c> Model <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> cars_data <c> MPG <t> text <c> Weight <t> number <c> Horsepower <t> text <c> Cylinders <t> number <c> Id <t> number <c> Year <t> number <c> Accelerate <t> number <c> Edispl <t> number </t> car_makers <c> FullName <t> text <c> Maker <t> text <c> Id <t> number <c> Country <t> text <i> Which model has the most version(make) of cars? <s> SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What model has the most different versions? <s> SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1; </s>
--SEPARATOR--
cars_data <c> Year <t> number <c> Accelerate <t> number <c> Id <t> number <c> MPG <t> text <c> Horsepower <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Weight <t> number </t> car_names <c> Make <t> text <c> Model <t> text <c> MakeId <t> number </t> car_makers <c> Maker <t> text <c> FullName <t> text <c> Id <t> number <c> Country <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> model_list <c> Model <t> text <c> ModelId <t> number <c> Maker <t> number </t> continents <c> ContId <t> number <c> Continent <t> text <i> What model has the most different versions? <s> SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> How many cars have more than 4 cylinders? <s> SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4; </s>
--SEPARATOR--
continents <c> Continent <t> text <c> ContId <t> number </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> cars_data <c> Edispl <t> number <c> Cylinders <t> number <c> Horsepower <t> text <c> MPG <t> text <c> Accelerate <t> number <c> Weight <t> number <c> Id <t> number <c> Year <t> number </t> model_list <c> Maker <t> number <c> ModelId <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Make <t> text <c> Model <t> text </t> car_makers <c> Id <t> number <c> FullName <t> text <c> Maker <t> text <c> Country <t> text <i> How many cars have more than 4 cylinders? <s> SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What is the number of cars with more than 4 cylinders? <s> SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4; </s>
--SEPARATOR--
model_list <c> Maker <t> number <c> Model <t> text <c> ModelId <t> number </t> continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> Continent <t> number <c> CountryName <t> text <c> CountryId <t> number </t> car_makers <c> Id <t> number <c> FullName <t> text <c> Maker <t> text <c> Country <t> text </t> cars_data <c> Year <t> number <c> Edispl <t> number <c> MPG <t> text <c> Weight <t> number <c> Id <t> number <c> Accelerate <t> number <c> Cylinders <t> number <c> Horsepower <t> text </t> car_names <c> MakeId <t> number <c> Make <t> text <c> Model <t> text <i> What is the number of cars with more than 4 cylinders? <s> SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> how many cars were produced in 1980? <s> SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> cars_data <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Edispl <t> number <c> Cylinders <t> number <c> Year <t> number <c> Id <t> number <c> MPG <t> text </t> car_names <c> MakeId <t> number <c> Make <t> text <c> Model <t> text </t> model_list <c> Model <t> text <c> ModelId <t> number <c> Maker <t> number </t> countries <c> CountryName <t> text <c> CountryId <t> number <c> Continent <t> number </t> car_makers <c> Country <t> text <c> Id <t> number <c> FullName <t> text <c> Maker <t> text <i> how many cars were produced in 1980? <s> SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> In 1980, how many cars were made? <s> SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980; </s>
--SEPARATOR--
car_makers <c> FullName <t> text <c> Id <t> number <c> Country <t> text <c> Maker <t> text </t> car_names <c> Make <t> text <c> MakeId <t> number <c> Model <t> text </t> continents <c> Continent <t> text <c> ContId <t> number </t> countries <c> CountryName <t> text <c> Continent <t> number <c> CountryId <t> number </t> model_list <c> ModelId <t> number <c> Model <t> text <c> Maker <t> number </t> cars_data <c> Id <t> number <c> Accelerate <t> number <c> MPG <t> text <c> Horsepower <t> text <c> Year <t> number <c> Weight <t> number <c> Edispl <t> number <c> Cylinders <t> number <i> In 1980, how many cars were made? <s> SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> How many car models were produced by the maker with full name American Motor Company? <s> SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company'; </s>
--SEPARATOR--
car_makers <c> Maker <t> text <c> FullName <t> text <c> Country <t> text <c> Id <t> number </t> car_names <c> Model <t> text <c> Make <t> text <c> MakeId <t> number </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> continents <c> ContId <t> number <c> Continent <t> text </t> cars_data <c> Id <t> number <c> Accelerate <t> number <c> MPG <t> text <c> Horsepower <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Year <t> number <c> Weight <t> number </t> model_list <c> Maker <t> number <c> Model <t> text <c> ModelId <t> number <i> How many car models were produced by the maker with full name American Motor Company? <s> SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company'; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What is the number of car models created by the car maker American Motor Company? <s> SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company'; </s>
--SEPARATOR--
model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> continents <c> Continent <t> text <c> ContId <t> number </t> car_names <c> Model <t> text <c> Make <t> text <c> MakeId <t> number </t> countries <c> CountryName <t> text <c> CountryId <t> number <c> Continent <t> number </t> cars_data <c> Horsepower <t> text <c> Accelerate <t> number <c> Year <t> number <c> Id <t> number <c> Weight <t> number <c> Cylinders <t> number <c> MPG <t> text <c> Edispl <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> Country <t> text <c> FullName <t> text <i> What is the number of car models created by the car maker American Motor Company? <s> SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company'; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> Which makers designed more than 3 car models? List full name and the id. <s> SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3; </s>
--SEPARATOR--
cars_data <c> Weight <t> number <c> Accelerate <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Cylinders <t> number <c> Id <t> number <c> Year <t> number <c> MPG <t> text </t> car_makers <c> FullName <t> text <c> Id <t> number <c> Country <t> text <c> Maker <t> text </t> countries <c> CountryId <t> number <c> Continent <t> number <c> CountryName <t> text </t> car_names <c> Make <t> text <c> Model <t> text <c> MakeId <t> number </t> model_list <c> ModelId <t> number <c> Model <t> text <c> Maker <t> number </t> continents <c> ContId <t> number <c> Continent <t> text <i> Which makers designed more than 3 car models? List full name and the id. <s> SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What are the names and ids of all makers with more than 3 models? <s> SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3; </s>
--SEPARATOR--
car_makers <c> Id <t> number <c> Country <t> text <c> Maker <t> text <c> FullName <t> text </t> countries <c> Continent <t> number <c> CountryId <t> number <c> CountryName <t> text </t> model_list <c> Model <t> text <c> Maker <t> number <c> ModelId <t> number </t> continents <c> Continent <t> text <c> ContId <t> number </t> car_names <c> Model <t> text <c> Make <t> text <c> MakeId <t> number </t> cars_data <c> Horsepower <t> text <c> Year <t> number <c> Cylinders <t> number <c> Edispl <t> number <c> Accelerate <t> number <c> Weight <t> number <c> MPG <t> text <c> Id <t> number <i> What are the names and ids of all makers with more than 3 models? <s> SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> Which distinctive models are produced by maker with the full name General Motors or weighing more than 3500? <s> SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500; </s>
--SEPARATOR--
car_names <c> Model <t> text <c> Make <t> text <c> MakeId <t> number </t> countries <c> Continent <t> number <c> CountryId <t> number <c> CountryName <t> text </t> car_makers <c> FullName <t> text <c> Maker <t> text <c> Id <t> number <c> Country <t> text </t> model_list <c> Model <t> text <c> Maker <t> number <c> ModelId <t> number </t> cars_data <c> Weight <t> number <c> Year <t> number <c> Edispl <t> number <c> MPG <t> text <c> Accelerate <t> number <c> Cylinders <t> number <c> Id <t> number <c> Horsepower <t> text </t> continents <c> Continent <t> text <c> ContId <t> number <i> Which distinctive models are produced by maker with the full name General Motors or weighing more than 3500? <s> SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What are the different models created by either the car maker General Motors or weighed more than 3500? <s> SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500; </s>
--SEPARATOR--
continents <c> Continent <t> text <c> ContId <t> number </t> car_makers <c> Maker <t> text <c> FullName <t> text <c> Country <t> text <c> Id <t> number </t> model_list <c> Maker <t> number <c> Model <t> text <c> ModelId <t> number </t> cars_data <c> Year <t> number <c> Cylinders <t> number <c> Horsepower <t> text <c> Id <t> number <c> Edispl <t> number <c> MPG <t> text <c> Accelerate <t> number <c> Weight <t> number </t> car_names <c> Model <t> text <c> MakeId <t> number <c> Make <t> text </t> countries <c> CountryId <t> number <c> Continent <t> number <c> CountryName <t> text <i> What are the different models created by either the car maker General Motors or weighed more than 3500? <s> SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> In which years cars were produced weighing no less than 3000 and no more than 4000 ? <s> select distinct year from cars_data where weight between 3000 and 4000; </s>
--SEPARATOR--
car_names <c> Make <t> text <c> Model <t> text <c> MakeId <t> number </t> cars_data <c> Edispl <t> number <c> MPG <t> text <c> Id <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Cylinders <t> number <c> Accelerate <t> number <c> Year <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> Country <t> text <c> FullName <t> text </t> countries <c> CountryId <t> number <c> Continent <t> number <c> CountryName <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> continents <c> Continent <t> text <c> ContId <t> number <i> In which years cars were produced weighing no less than 3000 and no more than 4000 ? <s> select distinct year from cars_data where weight between 3000 and 4000; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What are the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000 ? <s> select distinct year from cars_data where weight between 3000 and 4000; </s>
--SEPARATOR--
car_makers <c> Country <t> text <c> FullName <t> text <c> Maker <t> text <c> Id <t> number </t> model_list <c> Maker <t> number <c> Model <t> text <c> ModelId <t> number </t> car_names <c> MakeId <t> number <c> Make <t> text <c> Model <t> text </t> cars_data <c> Accelerate <t> number <c> Year <t> number <c> Cylinders <t> number <c> MPG <t> text <c> Edispl <t> number <c> Horsepower <t> text <c> Id <t> number <c> Weight <t> number </t> continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryName <t> text <c> Continent <t> number <c> CountryId <t> number <i> What are the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000 ? <s> select distinct year from cars_data where weight between 3000 and 4000; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What is the horsepower of the car with the largest accelerate? <s> SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryName <t> text <c> CountryId <t> number <c> Continent <t> number </t> cars_data <c> Horsepower <t> text <c> Cylinders <t> number <c> Year <t> number <c> Edispl <t> number <c> MPG <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Id <t> number </t> car_names <c> Model <t> text <c> MakeId <t> number <c> Make <t> text </t> model_list <c> Maker <t> number <c> ModelId <t> number <c> Model <t> text </t> car_makers <c> Id <t> number <c> Country <t> text <c> Maker <t> text <c> FullName <t> text <i> What is the horsepower of the car with the largest accelerate? <s> SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What is the horsepower of the car with the greatest accelerate? <s> SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1; </s>
--SEPARATOR--
model_list <c> Model <t> text <c> ModelId <t> number <c> Maker <t> number </t> car_names <c> Model <t> text <c> MakeId <t> number <c> Make <t> text </t> car_makers <c> FullName <t> text <c> Maker <t> text <c> Country <t> text <c> Id <t> number </t> countries <c> CountryId <t> number <c> Continent <t> number <c> CountryName <t> text </t> cars_data <c> Cylinders <t> number <c> MPG <t> text <c> Accelerate <t> number <c> Horsepower <t> text <c> Id <t> number <c> Weight <t> number <c> Year <t> number <c> Edispl <t> number </t> continents <c> Continent <t> text <c> ContId <t> number <i> What is the horsepower of the car with the greatest accelerate? <s> SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> For model volvo, how many cylinders does the car with the least accelerate have? <s> SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1; </s>
--SEPARATOR--
model_list <c> Model <t> text <c> Maker <t> number <c> ModelId <t> number </t> countries <c> CountryName <t> text <c> CountryId <t> number <c> Continent <t> number </t> cars_data <c> Cylinders <t> number <c> Horsepower <t> text <c> Accelerate <t> number <c> Id <t> number <c> Edispl <t> number <c> MPG <t> text <c> Year <t> number <c> Weight <t> number </t> car_makers <c> Id <t> number <c> Country <t> text <c> FullName <t> text <c> Maker <t> text </t> car_names <c> Make <t> text <c> Model <t> text <c> MakeId <t> number </t> continents <c> Continent <t> text <c> ContId <t> number <i> For model volvo, how many cylinders does the car with the least accelerate have? <s> SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> For a volvo model, how many cylinders does the version with least accelerate have? <s> SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1; </s>
--SEPARATOR--
car_makers <c> Maker <t> text <c> Id <t> number <c> Country <t> text <c> FullName <t> text </t> model_list <c> Model <t> text <c> Maker <t> number <c> ModelId <t> number </t> car_names <c> MakeId <t> number <c> Make <t> text <c> Model <t> text </t> continents <c> Continent <t> text <c> ContId <t> number </t> countries <c> CountryName <t> text <c> CountryId <t> number <c> Continent <t> number </t> cars_data <c> MPG <t> text <c> Accelerate <t> number <c> Weight <t> number <c> Cylinders <t> number <c> Edispl <t> number <c> Id <t> number <c> Horsepower <t> text <c> Year <t> number <i> For a volvo model, how many cylinders does the version with least accelerate have? <s> SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> How many cars have a larger accelerate than the car with the largest horsepower? <s> SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 ); </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> Continent <t> number <c> CountryName <t> text </t> cars_data <c> Edispl <t> number <c> Id <t> number <c> MPG <t> text <c> Horsepower <t> text <c> Cylinders <t> number <c> Accelerate <t> number <c> Weight <t> number <c> Year <t> number </t> car_makers <c> Maker <t> text <c> Country <t> text <c> Id <t> number <c> FullName <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> model_list <c> Model <t> text <c> Maker <t> number <c> ModelId <t> number <i> How many cars have a larger accelerate than the car with the largest horsepower? <s> SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 ); </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What is the number of cars with a greater accelerate than the one with the most horsepower? <s> SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 ); </s>
--SEPARATOR--
car_names <c> Model <t> text <c> MakeId <t> number <c> Make <t> text </t> car_makers <c> FullName <t> text <c> Id <t> number <c> Maker <t> text <c> Country <t> text </t> continents <c> Continent <t> text <c> ContId <t> number </t> model_list <c> ModelId <t> number <c> Model <t> text <c> Maker <t> number </t> cars_data <c> MPG <t> text <c> Accelerate <t> number <c> Cylinders <t> number <c> Horsepower <t> text <c> Id <t> number <c> Weight <t> number <c> Year <t> number <c> Edispl <t> number </t> countries <c> CountryName <t> text <c> Continent <t> number <c> CountryId <t> number <i> What is the number of cars with a greater accelerate than the one with the most horsepower? <s> SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 ); </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> How many countries has more than 2 car makers ? <s> select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2 </s>
--SEPARATOR--
car_makers <c> FullName <t> text <c> Country <t> text <c> Id <t> number <c> Maker <t> text </t> cars_data <c> MPG <t> text <c> Id <t> number <c> Horsepower <t> text <c> Cylinders <t> number <c> Accelerate <t> number <c> Weight <t> number <c> Edispl <t> number <c> Year <t> number </t> car_names <c> Model <t> text <c> MakeId <t> number <c> Make <t> text </t> continents <c> ContId <t> number <c> Continent <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> countries <c> CountryName <t> text <c> Continent <t> number <c> CountryId <t> number <i> How many countries has more than 2 car makers ? <s> select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2 </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What is the number of countries with more than 2 car makers ? <s> select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2 </s>
--SEPARATOR--
cars_data <c> Edispl <t> number <c> Id <t> number <c> Year <t> number <c> MPG <t> text <c> Horsepower <t> text <c> Cylinders <t> number <c> Accelerate <t> number <c> Weight <t> number </t> continents <c> ContId <t> number <c> Continent <t> text </t> car_makers <c> Id <t> number <c> Maker <t> text <c> Country <t> text <c> FullName <t> text </t> model_list <c> Model <t> text <c> Maker <t> number <c> ModelId <t> number </t> countries <c> Continent <t> number <c> CountryName <t> text <c> CountryId <t> number </t> car_names <c> MakeId <t> number <c> Make <t> text <c> Model <t> text <i> What is the number of countries with more than 2 car makers ? <s> select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2 </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> How many cars has over 6 cylinders? <s> SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6; </s>
--SEPARATOR--
car_names <c> Model <t> text <c> Make <t> text <c> MakeId <t> number </t> continents <c> ContId <t> number <c> Continent <t> text </t> car_makers <c> FullName <t> text <c> Id <t> number <c> Country <t> text <c> Maker <t> text </t> cars_data <c> Accelerate <t> number <c> MPG <t> text <c> Horsepower <t> text <c> Year <t> number <c> Weight <t> number <c> Cylinders <t> number <c> Edispl <t> number <c> Id <t> number </t> countries <c> Continent <t> number <c> CountryName <t> text <c> CountryId <t> number </t> model_list <c> Maker <t> number <c> ModelId <t> number <c> Model <t> text <i> How many cars has over 6 cylinders? <s> SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What is the number of carsw ith over 6 cylinders? <s> SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6; </s>
--SEPARATOR--
cars_data <c> Year <t> number <c> Id <t> number <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> MPG <t> text <c> Accelerate <t> number </t> continents <c> Continent <t> text <c> ContId <t> number </t> car_makers <c> Country <t> text <c> Id <t> number <c> FullName <t> text <c> Maker <t> text </t> model_list <c> Maker <t> number <c> ModelId <t> number <c> Model <t> text </t> countries <c> CountryId <t> number <c> Continent <t> number <c> CountryName <t> text </t> car_names <c> Model <t> text <c> MakeId <t> number <c> Make <t> text <i> What is the number of carsw ith over 6 cylinders? <s> SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> For the cars with 4 cylinders, which model has the largest horsepower? <s> SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1; </s>
--SEPARATOR--
car_makers <c> Id <t> number <c> Country <t> text <c> FullName <t> text <c> Maker <t> text </t> car_names <c> Model <t> text <c> MakeId <t> number <c> Make <t> text </t> countries <c> CountryName <t> text <c> Continent <t> number <c> CountryId <t> number </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> continents <c> ContId <t> number <c> Continent <t> text </t> cars_data <c> Year <t> number <c> MPG <t> text <c> Accelerate <t> number <c> Id <t> number <c> Horsepower <t> text <c> Edispl <t> number <c> Cylinders <t> number <c> Weight <t> number <i> For the cars with 4 cylinders, which model has the largest horsepower? <s> SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> For all of the 4 cylinder cars, which model has the most horsepower? <s> SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1; </s>
--SEPARATOR--
model_list <c> Model <t> text <c> Maker <t> number <c> ModelId <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> car_names <c> Make <t> text <c> MakeId <t> number <c> Model <t> text </t> continents <c> Continent <t> text <c> ContId <t> number </t> countries <c> CountryName <t> text <c> CountryId <t> number <c> Continent <t> number </t> cars_data <c> Weight <t> number <c> Cylinders <t> number <c> Id <t> number <c> Horsepower <t> text <c> MPG <t> text <c> Accelerate <t> number <c> Edispl <t> number <c> Year <t> number <i> For all of the 4 cylinder cars, which model has the most horsepower? <s> SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> Among the cars with more than lowest horsepower, which ones do not have more than 3 cylinders? List the car makeid and make name. <s> SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3; </s>
--SEPARATOR--
continents <c> Continent <t> text <c> ContId <t> number </t> car_names <c> Model <t> text <c> MakeId <t> number <c> Make <t> text </t> model_list <c> Model <t> text <c> ModelId <t> number <c> Maker <t> number </t> countries <c> CountryId <t> number <c> Continent <t> number <c> CountryName <t> text </t> car_makers <c> Maker <t> text <c> FullName <t> text <c> Country <t> text <c> Id <t> number </t> cars_data <c> Year <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Id <t> number <c> Edispl <t> number <c> Weight <t> number <c> Accelerate <t> number <c> Horsepower <t> text <i> Among the cars with more than lowest horsepower, which ones do not have more than 3 cylinders? List the car makeid and make name. <s> SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> Among the cars that do not have the minimum horsepower , what are the make ids and names of all those with less than 4 cylinders ? <s> select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4; </s>
--SEPARATOR--
car_names <c> Make <t> text <c> MakeId <t> number <c> Model <t> text </t> cars_data <c> Cylinders <t> number <c> Accelerate <t> number <c> Weight <t> number <c> Id <t> number <c> Edispl <t> number <c> Year <t> number <c> MPG <t> text <c> Horsepower <t> text </t> continents <c> Continent <t> text <c> ContId <t> number </t> car_makers <c> FullName <t> text <c> Maker <t> text <c> Country <t> text <c> Id <t> number </t> model_list <c> Maker <t> number <c> ModelId <t> number <c> Model <t> text </t> countries <c> CountryId <t> number <c> Continent <t> number <c> CountryName <t> text <i> Among the cars that do not have the minimum horsepower , what are the make ids and names of all those with less than 4 cylinders ? <s> select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What is the maximum miles per gallon of the car with 8 cylinders or produced before 1980 ? <s> select max(mpg) from cars_data where cylinders  =  8 or year  <  1980 </s>
--SEPARATOR--
model_list <c> Model <t> text <c> Maker <t> number <c> ModelId <t> number </t> car_makers <c> Maker <t> text <c> FullName <t> text <c> Id <t> number <c> Country <t> text </t> continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryName <t> text <c> CountryId <t> number <c> Continent <t> number </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> Horsepower <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Accelerate <t> number <c> Weight <t> number <c> MPG <t> text <c> Year <t> number <i> What is the maximum miles per gallon of the car with 8 cylinders or produced before 1980 ? <s> select max(mpg) from cars_data where cylinders  =  8 or year  <  1980 </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What is the maximum mpg of the cars that had 8 cylinders or that were produced before 1980 ? <s> select max(mpg) from cars_data where cylinders  =  8 or year  <  1980 </s>
--SEPARATOR--
cars_data <c> Horsepower <t> text <c> Accelerate <t> number <c> Year <t> number <c> MPG <t> text <c> Id <t> number <c> Edispl <t> number <c> Weight <t> number <c> Cylinders <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> continents <c> ContId <t> number <c> Continent <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> model_list <c> Maker <t> number <c> ModelId <t> number <c> Model <t> text <i> What is the maximum mpg of the cars that had 8 cylinders or that were produced before 1980 ? <s> select max(mpg) from cars_data where cylinders  =  8 or year  <  1980 </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> Which models are lighter than 3500 but not built by the 'Ford Motor Company'? <s> SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company'; </s>
--SEPARATOR--
car_makers <c> Maker <t> text <c> Country <t> text <c> FullName <t> text <c> Id <t> number </t> model_list <c> Maker <t> number <c> ModelId <t> number <c> Model <t> text </t> countries <c> Continent <t> number <c> CountryName <t> text <c> CountryId <t> number </t> car_names <c> MakeId <t> number <c> Make <t> text <c> Model <t> text </t> cars_data <c> Id <t> number <c> Cylinders <t> number <c> Edispl <t> number <c> MPG <t> text <c> Accelerate <t> number <c> Horsepower <t> text <c> Year <t> number <c> Weight <t> number </t> continents <c> Continent <t> text <c> ContId <t> number <i> Which models are lighter than 3500 but not built by the 'Ford Motor Company'? <s> SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company'; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What are the different models wthat are lighter than 3500 but were not built by the Ford Motor Company? <s> SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company'; </s>
--SEPARATOR--
car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> continents <c> Continent <t> text <c> ContId <t> number </t> car_makers <c> Id <t> number <c> Country <t> text <c> Maker <t> text <c> FullName <t> text </t> cars_data <c> Accelerate <t> number <c> Horsepower <t> text <c> Year <t> number <c> Edispl <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Id <t> number <c> Weight <t> number </t> countries <c> CountryId <t> number <c> Continent <t> number <c> CountryName <t> text </t> model_list <c> Maker <t> number <c> ModelId <t> number <c> Model <t> text <i> What are the different models wthat are lighter than 3500 but were not built by the Ford Motor Company? <s> SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company'; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What are the name of the countries where there is not a single car maker? <s> SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country; </s>
--SEPARATOR--
countries <c> CountryName <t> text <c> Continent <t> number <c> CountryId <t> number </t> cars_data <c> MPG <t> text <c> Id <t> number <c> Cylinders <t> number <c> Edispl <t> number <c> Year <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number </t> model_list <c> ModelId <t> number <c> Model <t> text <c> Maker <t> number </t> car_names <c> MakeId <t> number <c> Make <t> text <c> Model <t> text </t> car_makers <c> Maker <t> text <c> FullName <t> text <c> Country <t> text <c> Id <t> number </t> continents <c> ContId <t> number <c> Continent <t> text <i> What are the name of the countries where there is not a single car maker? <s> SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What are the names of the countries with no car makers? <s> SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> cars_data <c> Edispl <t> number <c> Horsepower <t> text <c> Id <t> number <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <c> MPG <t> text <c> Cylinders <t> number </t> model_list <c> ModelId <t> number <c> Model <t> text <c> Maker <t> number </t> car_names <c> Make <t> text <c> MakeId <t> number <c> Model <t> text </t> countries <c> Continent <t> number <c> CountryId <t> number <c> CountryName <t> text </t> car_makers <c> Country <t> text <c> FullName <t> text <c> Maker <t> text <c> Id <t> number <i> What are the names of the countries with no car makers? <s> SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> Which are the car makers which produce at least 2 models and more than 3 car makers ? List the id and the maker . <s> select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3; </s>
--SEPARATOR--
car_makers <c> Country <t> text <c> FullName <t> text <c> Id <t> number <c> Maker <t> text </t> car_names <c> Make <t> text <c> Model <t> text <c> MakeId <t> number </t> cars_data <c> Year <t> number <c> Accelerate <t> number <c> Id <t> number <c> Horsepower <t> text <c> Edispl <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Weight <t> number </t> countries <c> CountryId <t> number <c> Continent <t> number <c> CountryName <t> text </t> continents <c> Continent <t> text <c> ContId <t> number </t> model_list <c> Maker <t> number <c> Model <t> text <c> ModelId <t> number <i> Which are the car makers which produce at least 2 models and more than 3 car makers ? List the id and the maker . <s> select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What are the ids and makers of all car makers that produce at least 2 models and make more than 3 cars? <s> SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3; </s>
--SEPARATOR--
model_list <c> Model <t> text <c> ModelId <t> number <c> Maker <t> number </t> car_names <c> Model <t> text <c> MakeId <t> number <c> Make <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Maker <t> text <c> FullName <t> text <c> Country <t> text <c> Id <t> number </t> continents <c> ContId <t> number <c> Continent <t> text </t> cars_data <c> Horsepower <t> text <c> Edispl <t> number <c> MPG <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Id <t> number <c> Year <t> number <c> Cylinders <t> number <i> What are the ids and makers of all car makers that produce at least 2 models and make more than 3 cars? <s> SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What are the id and names of the countries which have more than 3 car makers or produce the 'fiat' model? <s> SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat'; </s>
--SEPARATOR--
car_makers <c> FullName <t> text <c> Id <t> number <c> Country <t> text <c> Maker <t> text </t> model_list <c> Model <t> text <c> Maker <t> number <c> ModelId <t> number </t> continents <c> Continent <t> text <c> ContId <t> number </t> cars_data <c> Cylinders <t> number <c> Accelerate <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> MPG <t> text <c> Year <t> number <c> Weight <t> number <c> Id <t> number </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text <i> What are the id and names of the countries which have more than 3 car makers or produce the 'fiat' model? <s> SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat'; </s>
--SEPARATOR--
continents <c> ContId <t> number <c> Continent <t> text </t> countries <c> CountryId <t> number <c> CountryName <t> text <c> Continent <t> number </t> car_makers <c> Id <t> number <c> Maker <t> text <c> FullName <t> text <c> Country <t> text </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_names <c> MakeId <t> number <c> Model <t> text <c> Make <t> text </t> cars_data <c> Id <t> number <c> MPG <t> text <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> Accelerate <t> number <c> Year <t> number <i> What are the ids and names of all countries that either have more than 3 car makers or produce fiat model ? <s> select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat'; </s>
--SEPARATOR--
cars_data <c> Cylinders <t> number <c> Edispl <t> number <c> Horsepower <t> text <c> Weight <t> number <c> MPG <t> text <c> Year <t> number <c> Id <t> number <c> Accelerate <t> number </t> car_names <c> MakeId <t> number <c> Make <t> text <c> Model <t> text </t> continents <c> Continent <t> text <c> ContId <t> number </t> model_list <c> ModelId <t> number <c> Maker <t> number <c> Model <t> text </t> car_makers <c> FullName <t> text <c> Maker <t> text <c> Country <t> text <c> Id <t> number </t> countries <c> Continent <t> number <c> CountryName <t> text <c> CountryId <t> number <i> What are the ids and names of all countries that either have more than 3 car makers or produce fiat model ? <s> select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat'; </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> Which country does Airline "JetBlue Airways" belong to? <s> SELECT Country FROM AIRLINES WHERE Airline  =  "JetBlue Airways" </s>
--SEPARATOR--
flights <c> SourceAirport <t> text <c> FlightNo <t> number <c> Airline <t> number <c> DestAirport <t> text </t> airlines <c> Country <t> text <c> Abbreviation <t> text <c> uid <t> number <c> Airline <t> text </t> airports <c> CountryAbbrev <t> text <c> City <t> text <c> AirportName <t> text <c> AirportCode <t> text <c> Country <t> text <i> Which country does Airline "JetBlue Airways" belong to? <s> SELECT Country FROM AIRLINES WHERE Airline  =  "JetBlue Airways" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> What country is Jetblue Airways affiliated with? <s> SELECT Country FROM AIRLINES WHERE Airline  =  "JetBlue Airways" </s>
--SEPARATOR--
airports <c> AirportName <t> text <c> AirportCode <t> text <c> City <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> airlines <c> Country <t> text <c> Abbreviation <t> text <c> Airline <t> text <c> uid <t> number </t> flights <c> FlightNo <t> number <c> DestAirport <t> text <c> Airline <t> number <c> SourceAirport <t> text <i> What country is Jetblue Airways affiliated with? <s> SELECT Country FROM AIRLINES WHERE Airline  =  "JetBlue Airways" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> What is the abbreviation of Airline "JetBlue Airways"? <s> SELECT Abbreviation FROM AIRLINES WHERE Airline  =  "JetBlue Airways" </s>
--SEPARATOR--
airports <c> AirportName <t> text <c> AirportCode <t> text <c> CountryAbbrev <t> text <c> Country <t> text <c> City <t> text </t> flights <c> DestAirport <t> text <c> SourceAirport <t> text <c> FlightNo <t> number <c> Airline <t> number </t> airlines <c> uid <t> number <c> Country <t> text <c> Abbreviation <t> text <c> Airline <t> text <i> What is the abbreviation of Airline "JetBlue Airways"? <s> SELECT Abbreviation FROM AIRLINES WHERE Airline  =  "JetBlue Airways" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> Which abbreviation corresponds to Jetblue Airways? <s> SELECT Abbreviation FROM AIRLINES WHERE Airline  =  "JetBlue Airways" </s>
--SEPARATOR--
airports <c> Country <t> text <c> CountryAbbrev <t> text <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text </t> flights <c> FlightNo <t> number <c> Airline <t> number <c> SourceAirport <t> text <c> DestAirport <t> text </t> airlines <c> uid <t> number <c> Country <t> text <c> Airline <t> text <c> Abbreviation <t> text <i> Which abbreviation corresponds to Jetblue Airways? <s> SELECT Abbreviation FROM AIRLINES WHERE Airline  =  "JetBlue Airways" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> List all airline names and their abbreviations in "USA". <s> SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  "USA" </s>
--SEPARATOR--
airports <c> City <t> text <c> Country <t> text <c> AirportName <t> text <c> AirportCode <t> text <c> CountryAbbrev <t> text </t> airlines <c> Country <t> text <c> Airline <t> text <c> Abbreviation <t> text <c> uid <t> number </t> flights <c> SourceAirport <t> text <c> FlightNo <t> number <c> DestAirport <t> text <c> Airline <t> number <i> List all airline names and their abbreviations in "USA". <s> SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  "USA" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> What are the airline names and abbreviations for airlines in the USA? <s> SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  "USA" </s>
--SEPARATOR--
flights <c> FlightNo <t> number <c> DestAirport <t> text <c> SourceAirport <t> text <c> Airline <t> number </t> airlines <c> Country <t> text <c> Airline <t> text <c> Abbreviation <t> text <c> uid <t> number </t> airports <c> AirportName <t> text <c> Country <t> text <c> City <t> text <c> CountryAbbrev <t> text <c> AirportCode <t> text <i> What are the airline names and abbreviations for airlines in the USA? <s> SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  "USA" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> List the airport code and name in the city of Anthony. <s> SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  "Anthony" </s>
--SEPARATOR--
airports <c> AirportName <t> text <c> City <t> text <c> Country <t> text <c> AirportCode <t> text <c> CountryAbbrev <t> text </t> flights <c> FlightNo <t> number <c> SourceAirport <t> text <c> Airline <t> number <c> DestAirport <t> text </t> airlines <c> uid <t> number <c> Country <t> text <c> Airline <t> text <c> Abbreviation <t> text <i> List the airport code and name in the city of Anthony. <s> SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  "Anthony" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> Give the airport code and airport name corresonding to the city Anthony. <s> SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  "Anthony" </s>
--SEPARATOR--
flights <c> DestAirport <t> text <c> SourceAirport <t> text <c> FlightNo <t> number <c> Airline <t> number </t> airlines <c> Airline <t> text <c> uid <t> number <c> Country <t> text <c> Abbreviation <t> text </t> airports <c> CountryAbbrev <t> text <c> Country <t> text <c> AirportName <t> text <c> City <t> text <c> AirportCode <t> text <i> Give the airport code and airport name corresonding to the city Anthony. <s> SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  "Anthony" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> How many airlines do we have? <s> SELECT count(*) FROM AIRLINES </s>
--SEPARATOR--
airports <c> CountryAbbrev <t> text <c> AirportName <t> text <c> AirportCode <t> text <c> Country <t> text <c> City <t> text </t> airlines <c> uid <t> number <c> Abbreviation <t> text <c> Airline <t> text <c> Country <t> text </t> flights <c> DestAirport <t> text <c> Airline <t> number <c> SourceAirport <t> text <c> FlightNo <t> number <i> How many airlines do we have? <s> SELECT count(*) FROM AIRLINES </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> What is the total number of airlines? <s> SELECT count(*) FROM AIRLINES </s>
--SEPARATOR--
airports <c> City <t> text <c> AirportName <t> text <c> CountryAbbrev <t> text <c> AirportCode <t> text <c> Country <t> text </t> flights <c> DestAirport <t> text <c> Airline <t> number <c> SourceAirport <t> text <c> FlightNo <t> number </t> airlines <c> uid <t> number <c> Abbreviation <t> text <c> Country <t> text <c> Airline <t> text <i> What is the total number of airlines? <s> SELECT count(*) FROM AIRLINES </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> How many airports do we have? <s> SELECT count(*) FROM AIRPORTS </s>
--SEPARATOR--
flights <c> Airline <t> number <c> FlightNo <t> number <c> DestAirport <t> text <c> SourceAirport <t> text </t> airlines <c> uid <t> number <c> Country <t> text <c> Abbreviation <t> text <c> Airline <t> text </t> airports <c> AirportName <t> text <c> AirportCode <t> text <c> Country <t> text <c> City <t> text <c> CountryAbbrev <t> text <i> How many airports do we have? <s> SELECT count(*) FROM AIRPORTS </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> Return the number of  airports. <s> SELECT count(*) FROM AIRPORTS </s>
--SEPARATOR--
flights <c> SourceAirport <t> text <c> FlightNo <t> number <c> Airline <t> number <c> DestAirport <t> text </t> airports <c> City <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text <c> AirportCode <t> text </t> airlines <c> Abbreviation <t> text <c> uid <t> number <c> Airline <t> text <c> Country <t> text <i> Return the number of  airports. <s> SELECT count(*) FROM AIRPORTS </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> How many flights do we have? <s> SELECT count(*) FROM FLIGHTS </s>
--SEPARATOR--
airlines <c> Airline <t> text <c> Country <t> text <c> uid <t> number <c> Abbreviation <t> text </t> flights <c> FlightNo <t> number <c> Airline <t> number <c> DestAirport <t> text <c> SourceAirport <t> text </t> airports <c> AirportCode <t> text <c> City <t> text <c> CountryAbbrev <t> text <c> Country <t> text <c> AirportName <t> text <i> How many flights do we have? <s> SELECT count(*) FROM FLIGHTS </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> Return the number of flights. <s> SELECT count(*) FROM FLIGHTS </s>
--SEPARATOR--
flights <c> SourceAirport <t> text <c> DestAirport <t> text <c> Airline <t> number <c> FlightNo <t> number </t> airlines <c> Airline <t> text <c> Country <t> text <c> Abbreviation <t> text <c> uid <t> number </t> airports <c> City <t> text <c> AirportCode <t> text <c> CountryAbbrev <t> text <c> AirportName <t> text <c> Country <t> text <i> Return the number of flights. <s> SELECT count(*) FROM FLIGHTS </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> Which airline has abbreviation 'UAL'? <s> SELECT Airline FROM AIRLINES WHERE Abbreviation  =  "UAL" </s>
--SEPARATOR--
flights <c> Airline <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <c> FlightNo <t> number </t> airports <c> AirportName <t> text <c> City <t> text <c> AirportCode <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> airlines <c> Abbreviation <t> text <c> Country <t> text <c> uid <t> number <c> Airline <t> text <i> Which airline has abbreviation 'UAL'? <s> SELECT Airline FROM AIRLINES WHERE Abbreviation  =  "UAL" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> Give the airline with abbreviation 'UAL'. <s> SELECT Airline FROM AIRLINES WHERE Abbreviation  =  "UAL" </s>
--SEPARATOR--
airlines <c> Airline <t> text <c> uid <t> number <c> Country <t> text <c> Abbreviation <t> text </t> flights <c> Airline <t> number <c> DestAirport <t> text <c> SourceAirport <t> text <c> FlightNo <t> number </t> airports <c> CountryAbbrev <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> City <t> text <c> Country <t> text <i> Give the airline with abbreviation 'UAL'. <s> SELECT Airline FROM AIRLINES WHERE Abbreviation  =  "UAL" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> How many airlines are from USA? <s> SELECT count(*) FROM AIRLINES WHERE Country  =  "USA" </s>
--SEPARATOR--
airports <c> CountryAbbrev <t> text <c> AirportCode <t> text <c> Country <t> text <c> City <t> text <c> AirportName <t> text </t> airlines <c> Abbreviation <t> text <c> uid <t> number <c> Country <t> text <c> Airline <t> text </t> flights <c> Airline <t> number <c> SourceAirport <t> text <c> FlightNo <t> number <c> DestAirport <t> text <i> How many airlines are from USA? <s> SELECT count(*) FROM AIRLINES WHERE Country  =  "USA" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> Return the number of airlines in the USA. <s> SELECT count(*) FROM AIRLINES WHERE Country  =  "USA" </s>
--SEPARATOR--
flights <c> Airline <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <c> FlightNo <t> number </t> airports <c> City <t> text <c> CountryAbbrev <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text </t> airlines <c> Country <t> text <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <i> Return the number of airlines in the USA. <s> SELECT count(*) FROM AIRLINES WHERE Country  =  "USA" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> Which city and country is the Alton airport at? <s> SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  "Alton" </s>
--SEPARATOR--
airports <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text <c> AirportCode <t> text <c> City <t> text </t> airlines <c> Airline <t> text <c> uid <t> number <c> Abbreviation <t> text <c> Country <t> text </t> flights <c> DestAirport <t> text <c> Airline <t> number <c> SourceAirport <t> text <c> FlightNo <t> number <i> Which city and country is the Alton airport at? <s> SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  "Alton" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> Give the city and country for the Alton airport. <s> SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  "Alton" </s>
--SEPARATOR--
airlines <c> Country <t> text <c> uid <t> number <c> Abbreviation <t> text <c> Airline <t> text </t> flights <c> FlightNo <t> number <c> DestAirport <t> text <c> Airline <t> number <c> SourceAirport <t> text </t> airports <c> City <t> text <c> AirportName <t> text <c> CountryAbbrev <t> text <c> Country <t> text <c> AirportCode <t> text <i> Give the city and country for the Alton airport. <s> SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  "Alton" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> What is the airport name for airport 'AKO'? <s> SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  "AKO" </s>
--SEPARATOR--
airports <c> AirportCode <t> text <c> Country <t> text <c> AirportName <t> text <c> City <t> text <c> CountryAbbrev <t> text </t> airlines <c> Airline <t> text <c> uid <t> number <c> Abbreviation <t> text <c> Country <t> text </t> flights <c> Airline <t> number <c> SourceAirport <t> text <c> FlightNo <t> number <c> DestAirport <t> text <i> What is the airport name for airport 'AKO'? <s> SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  "AKO" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> Return the name of the airport with code 'AKO'. <s> SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  "AKO" </s>
--SEPARATOR--
airlines <c> Country <t> text <c> Airline <t> text <c> uid <t> number <c> Abbreviation <t> text </t> airports <c> City <t> text <c> Country <t> text <c> AirportName <t> text <c> CountryAbbrev <t> text <c> AirportCode <t> text </t> flights <c> Airline <t> number <c> DestAirport <t> text <c> SourceAirport <t> text <c> FlightNo <t> number <i> Return the name of the airport with code 'AKO'. <s> SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  "AKO" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> What are airport names at City 'Aberdeen'? <s> SELECT AirportName FROM AIRPORTS WHERE City = "Aberdeen" </s>
--SEPARATOR--
airports <c> AirportCode <t> text <c> City <t> text <c> Country <t> text <c> CountryAbbrev <t> text <c> AirportName <t> text </t> airlines <c> Country <t> text <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text </t> flights <c> SourceAirport <t> text <c> Airline <t> number <c> FlightNo <t> number <c> DestAirport <t> text <i> What are airport names at City 'Aberdeen'? <s> SELECT AirportName FROM AIRPORTS WHERE City = "Aberdeen" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> What are the names of airports in Aberdeen? <s> SELECT AirportName FROM AIRPORTS WHERE City = "Aberdeen" </s>
--SEPARATOR--
airports <c> AirportName <t> text <c> City <t> text <c> CountryAbbrev <t> text <c> Country <t> text <c> AirportCode <t> text </t> airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> flights <c> FlightNo <t> number <c> Airline <t> number <c> DestAirport <t> text <c> SourceAirport <t> text <i> What are the names of airports in Aberdeen? <s> SELECT AirportName FROM AIRPORTS WHERE City = "Aberdeen" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> How many flights depart from 'APG'? <s> SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  "APG" </s>
--SEPARATOR--
flights <c> FlightNo <t> number <c> DestAirport <t> text <c> Airline <t> number <c> SourceAirport <t> text </t> airlines <c> Abbreviation <t> text <c> Airline <t> text <c> Country <t> text <c> uid <t> number </t> airports <c> CountryAbbrev <t> text <c> AirportCode <t> text <c> Country <t> text <c> City <t> text <c> AirportName <t> text <i> How many flights depart from 'APG'? <s> SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  "APG" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> Count the number of flights departing from 'APG'. <s> SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  "APG" </s>
--SEPARATOR--
airports <c> AirportName <t> text <c> City <t> text <c> AirportCode <t> text <c> CountryAbbrev <t> text <c> Country <t> text </t> airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> flights <c> DestAirport <t> text <c> Airline <t> number <c> SourceAirport <t> text <c> FlightNo <t> number <i> Count the number of flights departing from 'APG'. <s> SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  "APG" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> How many flights have destination ATO? <s> SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  "ATO" </s>
--SEPARATOR--
flights <c> DestAirport <t> text <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> CountryAbbrev <t> text <c> AirportName <t> text <c> Country <t> text </t> airlines <c> Country <t> text <c> uid <t> number <c> Abbreviation <t> text <c> Airline <t> text <i> How many flights have destination ATO? <s> SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  "ATO" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> Count the number of flights into ATO. <s> SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  "ATO" </s>
--SEPARATOR--
flights <c> DestAirport <t> text <c> FlightNo <t> number <c> Airline <t> number <c> SourceAirport <t> text </t> airports <c> Country <t> text <c> City <t> text <c> CountryAbbrev <t> text <c> AirportCode <t> text <c> AirportName <t> text </t> airlines <c> Abbreviation <t> text <c> Country <t> text <c> Airline <t> text <c> uid <t> number <i> Count the number of flights into ATO. <s> SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  "ATO" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> How many flights depart from City Aberdeen? <s> SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen" </s>
--SEPARATOR--
airports <c> Country <t> text <c> CountryAbbrev <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> City <t> text </t> flights <c> DestAirport <t> text <c> SourceAirport <t> text <c> FlightNo <t> number <c> Airline <t> number </t> airlines <c> Country <t> text <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <i> How many flights depart from City Aberdeen? <s> SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> Return the number of flights departing from Aberdeen. <s> SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Country <t> text <c> Airline <t> text <c> Abbreviation <t> text </t> flights <c> FlightNo <t> number <c> DestAirport <t> text <c> SourceAirport <t> text <c> Airline <t> number </t> airports <c> Country <t> text <c> AirportName <t> text <c> AirportCode <t> text <c> City <t> text <c> CountryAbbrev <t> text <i> Return the number of flights departing from Aberdeen. <s> SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> How many flights arriving in Aberdeen city? <s> SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen" </s>
--SEPARATOR--
flights <c> DestAirport <t> text <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text </t> airports <c> City <t> text <c> AirportName <t> text <c> CountryAbbrev <t> text <c> Country <t> text <c> AirportCode <t> text </t> airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text <i> How many flights arriving in Aberdeen city? <s> SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> Return the number of flights arriving in Aberdeen. <s> SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen" </s>
--SEPARATOR--
airports <c> Country <t> text <c> AirportCode <t> text <c> City <t> text <c> CountryAbbrev <t> text <c> AirportName <t> text </t> airlines <c> Country <t> text <c> Airline <t> text <c> Abbreviation <t> text <c> uid <t> number </t> flights <c> Airline <t> number <c> DestAirport <t> text <c> SourceAirport <t> text <c> FlightNo <t> number <i> Return the number of flights arriving in Aberdeen. <s> SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> How many flights depart from City 'Aberdeen' and have destination City 'Ashley'? <s> SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Country <t> text <c> Abbreviation <t> text </t> airports <c> Country <t> text <c> CountryAbbrev <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> City <t> text </t> flights <c> SourceAirport <t> text <c> DestAirport <t> text <c> FlightNo <t> number <c> Airline <t> number <i> How many flights depart from City 'Aberdeen' and have destination City 'Ashley'? <s> SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> How many flights fly from Aberdeen to Ashley? <s> SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen" </s>
--SEPARATOR--
airlines <c> Airline <t> text <c> Country <t> text <c> uid <t> number <c> Abbreviation <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> DestAirport <t> text <c> SourceAirport <t> text </t> airports <c> AirportCode <t> text <c> Country <t> text <c> AirportName <t> text <c> City <t> text <c> CountryAbbrev <t> text <i> How many flights fly from Aberdeen to Ashley? <s> SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> How many flights does airline 'JetBlue Airways' have? <s> SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways" </s>
--SEPARATOR--
airlines <c> Airline <t> text <c> Country <t> text <c> Abbreviation <t> text <c> uid <t> number </t> airports <c> AirportName <t> text <c> AirportCode <t> text <c> CountryAbbrev <t> text <c> Country <t> text <c> City <t> text </t> flights <c> SourceAirport <t> text <c> DestAirport <t> text <c> Airline <t> number <c> FlightNo <t> number <i> How many flights does airline 'JetBlue Airways' have? <s> SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> Give the number of Jetblue Airways flights. <s> SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways" </s>
--SEPARATOR--
flights <c> FlightNo <t> number <c> DestAirport <t> text <c> Airline <t> number <c> SourceAirport <t> text </t> airlines <c> Airline <t> text <c> Abbreviation <t> text <c> uid <t> number <c> Country <t> text </t> airports <c> AirportName <t> text <c> CountryAbbrev <t> text <c> Country <t> text <c> AirportCode <t> text <c> City <t> text <i> Give the number of Jetblue Airways flights. <s> SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> How many 'United Airlines' flights go to Airport 'ASY'? <s> SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.DestAirport  =  "ASY" </s>
--SEPARATOR--
flights <c> DestAirport <t> text <c> FlightNo <t> number <c> SourceAirport <t> text <c> Airline <t> number </t> airlines <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text <c> uid <t> number </t> airports <c> CountryAbbrev <t> text <c> City <t> text <c> AirportName <t> text <c> AirportCode <t> text <c> Country <t> text <i> How many 'United Airlines' flights go to Airport 'ASY'? <s> SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.DestAirport  =  "ASY" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> Count the number of United Airlines flights arriving in ASY Airport. <s> SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.DestAirport  =  "ASY" </s>
--SEPARATOR--
airlines <c> Airline <t> text <c> Abbreviation <t> text <c> uid <t> number <c> Country <t> text </t> airports <c> AirportCode <t> text <c> City <t> text <c> AirportName <t> text <c> CountryAbbrev <t> text <c> Country <t> text </t> flights <c> SourceAirport <t> text <c> Airline <t> number <c> FlightNo <t> number <c> DestAirport <t> text <i> Count the number of United Airlines flights arriving in ASY Airport. <s> SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.DestAirport  =  "ASY" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> How many 'United Airlines' flights depart from Airport 'AHD'? <s> SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.SourceAirport  =  "AHD" </s>
--SEPARATOR--
airlines <c> Airline <t> text <c> Country <t> text <c> Abbreviation <t> text <c> uid <t> number </t> airports <c> CountryAbbrev <t> text <c> AirportCode <t> text <c> Country <t> text <c> City <t> text <c> AirportName <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> DestAirport <t> text <c> SourceAirport <t> text <i> How many 'United Airlines' flights depart from Airport 'AHD'? <s> SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.SourceAirport  =  "AHD" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> Return the number of United Airlines flights leaving from AHD Airport. <s> SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.SourceAirport  =  "AHD" </s>
--SEPARATOR--
flights <c> FlightNo <t> number <c> Airline <t> number <c> DestAirport <t> text <c> SourceAirport <t> text </t> airlines <c> Country <t> text <c> Abbreviation <t> text <c> Airline <t> text <c> uid <t> number </t> airports <c> AirportName <t> text <c> City <t> text <c> AirportCode <t> text <c> Country <t> text <c> CountryAbbrev <t> text <i> Return the number of United Airlines flights leaving from AHD Airport. <s> SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.SourceAirport  =  "AHD" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> How many United Airlines flights go to City 'Aberdeen'? <s> SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines" </s>
--SEPARATOR--
airports <c> Country <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> CountryAbbrev <t> text <c> City <t> text </t> flights <c> DestAirport <t> text <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text </t> airlines <c> Country <t> text <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <i> How many United Airlines flights go to City 'Aberdeen'? <s> SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> Count the number of United Airlines flights that arrive in Aberdeen. <s> SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Country <t> text <c> Abbreviation <t> text </t> airports <c> AirportCode <t> text <c> CountryAbbrev <t> text <c> City <t> text <c> Country <t> text <c> AirportName <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> DestAirport <t> text <c> SourceAirport <t> text <i> Count the number of United Airlines flights that arrive in Aberdeen. <s> SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> Which city has most number of arriving flights? <s> SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
airports <c> AirportCode <t> text <c> CountryAbbrev <t> text <c> Country <t> text <c> AirportName <t> text <c> City <t> text </t> flights <c> DestAirport <t> text <c> SourceAirport <t> text <c> FlightNo <t> number <c> Airline <t> number </t> airlines <c> uid <t> number <c> Country <t> text <c> Airline <t> text <c> Abbreviation <t> text <i> Which city has most number of arriving flights? <s> SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> Which city has the most frequent destination airport? <s> SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
airlines <c> Airline <t> text <c> Country <t> text <c> uid <t> number <c> Abbreviation <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text </t> airports <c> City <t> text <c> AirportName <t> text <c> Country <t> text <c> AirportCode <t> text <c> CountryAbbrev <t> text <i> Which city has the most frequent destination airport? <s> SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> Which city has most number of departing flights? <s> SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
flights <c> Airline <t> number <c> SourceAirport <t> text <c> FlightNo <t> number <c> DestAirport <t> text </t> airlines <c> Airline <t> text <c> uid <t> number <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> AirportName <t> text <c> Country <t> text <c> AirportCode <t> text <c> City <t> text <c> CountryAbbrev <t> text <i> Which city has most number of departing flights? <s> SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> Which city is the most frequent source airport? <s> SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
flights <c> Airline <t> number <c> SourceAirport <t> text <c> FlightNo <t> number <c> DestAirport <t> text </t> airlines <c> Country <t> text <c> Abbreviation <t> text <c> uid <t> number <c> Airline <t> text </t> airports <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text <c> City <t> text <c> AirportCode <t> text <i> Which city is the most frequent source airport? <s> SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> What is the code of airport that has the highest number of flights? <s> SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
flights <c> SourceAirport <t> text <c> DestAirport <t> text <c> FlightNo <t> number <c> Airline <t> number </t> airlines <c> uid <t> number <c> Country <t> text <c> Airline <t> text <c> Abbreviation <t> text </t> airports <c> Country <t> text <c> City <t> text <c> CountryAbbrev <t> text <c> AirportCode <t> text <c> AirportName <t> text <i> What is the code of airport that has the highest number of flights? <s> SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> What is the airport code of the airport with the most flights? <s> SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
airports <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text <c> AirportCode <t> text <c> City <t> text </t> flights <c> DestAirport <t> text <c> FlightNo <t> number <c> SourceAirport <t> text <c> Airline <t> number </t> airlines <c> Airline <t> text <c> uid <t> number <c> Abbreviation <t> text <c> Country <t> text <i> What is the airport code of the airport with the most flights? <s> SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> What is the code of airport that has fewest number of flights? <s> SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1 </s>
--SEPARATOR--
flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text </t> airports <c> Country <t> text <c> AirportName <t> text <c> City <t> text <c> CountryAbbrev <t> text <c> AirportCode <t> text </t> airlines <c> Airline <t> text <c> Country <t> text <c> uid <t> number <c> Abbreviation <t> text <i> What is the code of airport that has fewest number of flights? <s> SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1 </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> Give the code of the airport with the least flights. <s> SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1 </s>
--SEPARATOR--
airports <c> AirportCode <t> text <c> AirportName <t> text <c> City <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> DestAirport <t> text <c> SourceAirport <t> text <c> FlightNo <t> number </t> airlines <c> Abbreviation <t> text <c> Airline <t> text <c> uid <t> number <c> Country <t> text <i> Give the code of the airport with the least flights. <s> SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1 </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> Which airline has most number of flights? <s> SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Country <t> text <c> Airline <t> text <c> Abbreviation <t> text </t> flights <c> SourceAirport <t> text <c> FlightNo <t> number <c> Airline <t> number <c> DestAirport <t> text </t> airports <c> CountryAbbrev <t> text <c> AirportName <t> text <c> AirportCode <t> text <c> City <t> text <c> Country <t> text <i> Which airline has most number of flights? <s> SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> What airline serves the most flights? <s> SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
flights <c> SourceAirport <t> text <c> Airline <t> number <c> DestAirport <t> text <c> FlightNo <t> number </t> airports <c> CountryAbbrev <t> text <c> Country <t> text <c> AirportName <t> text <c> City <t> text <c> AirportCode <t> text </t> airlines <c> Airline <t> text <c> Abbreviation <t> text <c> uid <t> number <c> Country <t> text <i> What airline serves the most flights? <s> SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> Find the abbreviation and country of the airline that has fewest number of flights? <s> SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1 </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Country <t> text <c> Abbreviation <t> text <c> Airline <t> text </t> flights <c> SourceAirport <t> text <c> FlightNo <t> number <c> Airline <t> number <c> DestAirport <t> text </t> airports <c> Country <t> text <c> CountryAbbrev <t> text <c> AirportCode <t> text <c> City <t> text <c> AirportName <t> text <i> Find the abbreviation and country of the airline that has fewest number of flights? <s> SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1 </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> What is the abbreviation of the airilne has the fewest flights and what country is it in? <s> SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1 </s>
--SEPARATOR--
airlines <c> Country <t> text <c> uid <t> number <c> Abbreviation <t> text <c> Airline <t> text </t> flights <c> SourceAirport <t> text <c> Airline <t> number <c> DestAirport <t> text <c> FlightNo <t> number </t> airports <c> City <t> text <c> AirportCode <t> text <c> CountryAbbrev <t> text <c> Country <t> text <c> AirportName <t> text <i> What is the abbreviation of the airilne has the fewest flights and what country is it in? <s> SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1 </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> What are airlines that have some flight departing from airport 'AHD'? <s> SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "AHD" </s>
--SEPARATOR--
flights <c> SourceAirport <t> text <c> DestAirport <t> text <c> Airline <t> number <c> FlightNo <t> number </t> airports <c> AirportCode <t> text <c> AirportName <t> text <c> CountryAbbrev <t> text <c> Country <t> text <c> City <t> text </t> airlines <c> Abbreviation <t> text <c> Country <t> text <c> uid <t> number <c> Airline <t> text <i> What are airlines that have some flight departing from airport 'AHD'? <s> SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "AHD" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> Which airlines have a flight with source airport AHD? <s> SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "AHD" </s>
--SEPARATOR--
airports <c> CountryAbbrev <t> text <c> AirportName <t> text <c> Country <t> text <c> AirportCode <t> text <c> City <t> text </t> airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> flights <c> DestAirport <t> text <c> FlightNo <t> number <c> Airline <t> number <c> SourceAirport <t> text <i> Which airlines have a flight with source airport AHD? <s> SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "AHD" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> What are airlines that have flights arriving at airport 'AHD'? <s> SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  "AHD" </s>
--SEPARATOR--
airports <c> AirportName <t> text <c> Country <t> text <c> City <t> text <c> AirportCode <t> text <c> CountryAbbrev <t> text </t> flights <c> SourceAirport <t> text <c> Airline <t> number <c> DestAirport <t> text <c> FlightNo <t> number </t> airlines <c> uid <t> number <c> Country <t> text <c> Airline <t> text <c> Abbreviation <t> text <i> What are airlines that have flights arriving at airport 'AHD'? <s> SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  "AHD" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> Which airlines have a flight with destination airport AHD? <s> SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  "AHD" </s>
--SEPARATOR--
airports <c> AirportName <t> text <c> AirportCode <t> text <c> Country <t> text <c> City <t> text <c> CountryAbbrev <t> text </t> flights <c> FlightNo <t> number <c> Airline <t> number <c> DestAirport <t> text <c> SourceAirport <t> text </t> airlines <c> Abbreviation <t> text <c> Country <t> text <c> Airline <t> text <c> uid <t> number <i> Which airlines have a flight with destination airport AHD? <s> SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  "AHD" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> Find all airlines that have flights from both airports 'APG' and 'CVO'. <s> SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO" </s>
--SEPARATOR--
airlines <c> Airline <t> text <c> Country <t> text <c> uid <t> number <c> Abbreviation <t> text </t> flights <c> FlightNo <t> number <c> DestAirport <t> text <c> SourceAirport <t> text <c> Airline <t> number </t> airports <c> City <t> text <c> AirportName <t> text <c> CountryAbbrev <t> text <c> Country <t> text <c> AirportCode <t> text <i> Find all airlines that have flights from both airports 'APG' and 'CVO'. <s> SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> Which airlines have departing flights from both APG and CVO airports? <s> SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO" </s>
--SEPARATOR--
flights <c> FlightNo <t> number <c> DestAirport <t> text <c> SourceAirport <t> text <c> Airline <t> number </t> airports <c> City <t> text <c> Country <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> CountryAbbrev <t> text </t> airlines <c> Abbreviation <t> text <c> Country <t> text <c> uid <t> number <c> Airline <t> text <i> Which airlines have departing flights from both APG and CVO airports? <s> SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> Find all airlines that have flights from airport 'CVO' but not from 'APG'. <s> SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG" </s>
--SEPARATOR--
flights <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <c> Airline <t> number </t> airports <c> CountryAbbrev <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> City <t> text <c> Country <t> text </t> airlines <c> Airline <t> text <c> uid <t> number <c> Country <t> text <c> Abbreviation <t> text <i> Find all airlines that have flights from airport 'CVO' but not from 'APG'. <s> SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> Which airlines have departures from CVO but not from APG airports? <s> SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG" </s>
--SEPARATOR--
airlines <c> Abbreviation <t> text <c> uid <t> number <c> Country <t> text <c> Airline <t> text </t> airports <c> City <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text <c> AirportCode <t> text </t> flights <c> DestAirport <t> text <c> SourceAirport <t> text <c> Airline <t> number <c> FlightNo <t> number <i> Which airlines have departures from CVO but not from APG airports? <s> SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> Find all airlines that have at least 10 flights. <s> SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10 </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Country <t> text <c> Abbreviation <t> text <c> Airline <t> text </t> airports <c> CountryAbbrev <t> text <c> City <t> text <c> AirportCode <t> text <c> Country <t> text <c> AirportName <t> text </t> flights <c> DestAirport <t> text <c> Airline <t> number <c> SourceAirport <t> text <c> FlightNo <t> number <i> Find all airlines that have at least 10 flights. <s> SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10 </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> Which airlines have at least 10 flights? <s> SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10 </s>
--SEPARATOR--
airports <c> CountryAbbrev <t> text <c> Country <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> City <t> text </t> airlines <c> Airline <t> text <c> Country <t> text <c> uid <t> number <c> Abbreviation <t> text </t> flights <c> FlightNo <t> number <c> SourceAirport <t> text <c> Airline <t> number <c> DestAirport <t> text <i> Which airlines have at least 10 flights? <s> SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10 </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> Find all airlines that have fewer than 200 flights. <s> SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200 </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> flights <c> FlightNo <t> number <c> Airline <t> number <c> SourceAirport <t> text <c> DestAirport <t> text </t> airports <c> AirportCode <t> text <c> City <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text <i> Find all airlines that have fewer than 200 flights. <s> SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200 </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> Which airlines have less than 200 flights? <s> SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200 </s>
--SEPARATOR--
airports <c> CountryAbbrev <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> City <t> text </t> airlines <c> Country <t> text <c> Airline <t> text <c> Abbreviation <t> text <c> uid <t> number </t> flights <c> SourceAirport <t> text <c> FlightNo <t> number <c> Airline <t> number <c> DestAirport <t> text <i> Which airlines have less than 200 flights? <s> SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200 </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> What are flight numbers of Airline "United Airlines"? <s> SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  "United Airlines" </s>
--SEPARATOR--
airports <c> Country <t> text <c> AirportName <t> text <c> City <t> text <c> AirportCode <t> text <c> CountryAbbrev <t> text </t> airlines <c> uid <t> number <c> Country <t> text <c> Airline <t> text <c> Abbreviation <t> text </t> flights <c> DestAirport <t> text <c> Airline <t> number <c> SourceAirport <t> text <c> FlightNo <t> number <i> What are flight numbers of Airline "United Airlines"? <s> SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  "United Airlines" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> Which flight numbers correspond to United Airlines flights? <s> SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  "United Airlines" </s>
--SEPARATOR--
airports <c> AirportCode <t> text <c> CountryAbbrev <t> text <c> Country <t> text <c> AirportName <t> text <c> City <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text </t> airlines <c> uid <t> number <c> Country <t> text <c> Airline <t> text <c> Abbreviation <t> text <i> Which flight numbers correspond to United Airlines flights? <s> SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  "United Airlines" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> What are flight numbers of flights departing from Airport "APG"? <s> SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  "APG" </s>
--SEPARATOR--
airports <c> CountryAbbrev <t> text <c> AirportName <t> text <c> Country <t> text <c> City <t> text <c> AirportCode <t> text </t> flights <c> SourceAirport <t> text <c> Airline <t> number <c> FlightNo <t> number <c> DestAirport <t> text </t> airlines <c> Airline <t> text <c> Country <t> text <c> uid <t> number <c> Abbreviation <t> text <i> What are flight numbers of flights departing from Airport "APG"? <s> SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  "APG" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> Give the flight numbers of flights leaving from APG. <s> SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  "APG" </s>
--SEPARATOR--
airports <c> AirportCode <t> text <c> Country <t> text <c> City <t> text <c> AirportName <t> text <c> CountryAbbrev <t> text </t> flights <c> FlightNo <t> number <c> DestAirport <t> text <c> SourceAirport <t> text <c> Airline <t> number </t> airlines <c> Country <t> text <c> uid <t> number <c> Abbreviation <t> text <c> Airline <t> text <i> Give the flight numbers of flights leaving from APG. <s> SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  "APG" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> What are flight numbers of flights arriving at Airport "APG"? <s> SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  "APG" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> flights <c> FlightNo <t> number <c> DestAirport <t> text <c> Airline <t> number <c> SourceAirport <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> CountryAbbrev <t> text <c> Country <t> text <i> What are flight numbers of flights arriving at Airport "APG"? <s> SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  "APG" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> Give the flight numbers of flights landing at APG. <s> SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  "APG" </s>
--SEPARATOR--
airlines <c> Country <t> text <c> uid <t> number <c> Abbreviation <t> text <c> Airline <t> text </t> flights <c> SourceAirport <t> text <c> DestAirport <t> text <c> FlightNo <t> number <c> Airline <t> number </t> airports <c> AirportName <t> text <c> AirportCode <t> text <c> Country <t> text <c> City <t> text <c> CountryAbbrev <t> text <i> Give the flight numbers of flights landing at APG. <s> SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  "APG" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> What are flight numbers of flights departing from City "Aberdeen "? <s> SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen" </s>
--SEPARATOR--
airports <c> AirportName <t> text <c> CountryAbbrev <t> text <c> City <t> text <c> AirportCode <t> text <c> Country <t> text </t> airlines <c> Country <t> text <c> Airline <t> text <c> Abbreviation <t> text <c> uid <t> number </t> flights <c> Airline <t> number <c> DestAirport <t> text <c> SourceAirport <t> text <c> FlightNo <t> number <i> What are flight numbers of flights departing from City "Aberdeen "? <s> SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> Give the flight numbers of flights leaving from Aberdeen. <s> SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen" </s>
--SEPARATOR--
airlines <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text <c> uid <t> number </t> airports <c> City <t> text <c> Country <t> text <c> AirportName <t> text <c> CountryAbbrev <t> text <c> AirportCode <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> DestAirport <t> text <c> SourceAirport <t> text <i> Give the flight numbers of flights leaving from Aberdeen. <s> SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> What are flight numbers of flights arriving at City "Aberdeen"? <s> SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen" </s>
--SEPARATOR--
flights <c> FlightNo <t> number <c> DestAirport <t> text <c> SourceAirport <t> text <c> Airline <t> number </t> airports <c> AirportCode <t> text <c> City <t> text <c> CountryAbbrev <t> text <c> AirportName <t> text <c> Country <t> text </t> airlines <c> Country <t> text <c> Abbreviation <t> text <c> Airline <t> text <c> uid <t> number <i> What are flight numbers of flights arriving at City "Aberdeen"? <s> SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> Give the flight numbers of flights arriving in Aberdeen. <s> SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen" </s>
--SEPARATOR--
airports <c> AirportName <t> text <c> CountryAbbrev <t> text <c> City <t> text <c> Country <t> text <c> AirportCode <t> text </t> airlines <c> Country <t> text <c> Abbreviation <t> text <c> Airline <t> text <c> uid <t> number </t> flights <c> FlightNo <t> number <c> DestAirport <t> text <c> Airline <t> number <c> SourceAirport <t> text <i> Give the flight numbers of flights arriving in Aberdeen. <s> SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> Find the number of flights landing in the city of Aberdeen or Abilene. <s> SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" OR T2.city  =  "Abilene" </s>
--SEPARATOR--
flights <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <c> Airline <t> number </t> airports <c> AirportName <t> text <c> CountryAbbrev <t> text <c> City <t> text <c> Country <t> text <c> AirportCode <t> text </t> airlines <c> Country <t> text <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <i> Find the number of flights landing in the city of Aberdeen or Abilene. <s> SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" OR T2.city  =  "Abilene" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> How many flights land in Aberdeen or Abilene? <s> SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" OR T2.city  =  "Abilene" </s>
--SEPARATOR--
flights <c> DestAirport <t> text <c> FlightNo <t> number <c> Airline <t> number <c> SourceAirport <t> text </t> airlines <c> Abbreviation <t> text <c> uid <t> number <c> Country <t> text <c> Airline <t> text </t> airports <c> AirportCode <t> text <c> CountryAbbrev <t> text <c> AirportName <t> text <c> City <t> text <c> Country <t> text <i> How many flights land in Aberdeen or Abilene? <s> SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" OR T2.city  =  "Abilene" </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> Find the name of airports which do not have any flight in and out. <s> SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights) </s>
--SEPARATOR--
airports <c> AirportName <t> text <c> CountryAbbrev <t> text <c> AirportCode <t> text <c> Country <t> text <c> City <t> text </t> flights <c> FlightNo <t> number <c> DestAirport <t> text <c> Airline <t> number <c> SourceAirport <t> text </t> airlines <c> Airline <t> text <c> Country <t> text <c> uid <t> number <c> Abbreviation <t> text <i> Find the name of airports which do not have any flight in and out. <s> SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights) </s>
--SEPARATOR--
airlines <c> uid <t> number <c> Airline <t> text <c> Abbreviation <t> text <c> Country <t> text </t> airports <c> City <t> text <c> AirportCode <t> text <c> AirportName <t> text <c> Country <t> text <c> CountryAbbrev <t> text </t> flights <c> Airline <t> number <c> FlightNo <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <i> Which airports do not have departing or arriving flights? <s> SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights) </s>
--SEPARATOR--
flights <c> Airline <t> number <c> SourceAirport <t> text <c> DestAirport <t> text <c> FlightNo <t> number </t> airlines <c> Airline <t> text <c> Abbreviation <t> text <c> uid <t> number <c> Country <t> text </t> airports <c> CountryAbbrev <t> text <c> AirportCode <t> text <c> City <t> text <c> AirportName <t> text <c> Country <t> text <i> Which airports do not have departing or arriving flights? <s> SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights) </s>
--SEPARATOR--
employee <c> Employee_ID <t> number <c> Name <t> text <c> Age <t> number <c> City <t> text </t> shop <c> Shop_ID <t> number <c> Name <t> text <c> Location <t> text <c> District <t> text <c> Number_products <t> number <c> Manager_name <t> text </t> hiring <c> Shop_ID <t> number <c> Employee_ID <t> number <c> Start_from <t> text <c> Is_full_time <t> others </t> evaluation <c> Employee_ID <t> text <c> Year_awarded <t> text <c> Bonus <t> number <i> How many employees are there? <s> SELECT count(*) FROM employee </s>
--SEPARATOR--
evaluation <c> Bonus <t> number <c> Year_awarded <t> text <c> Employee_ID <t> text </t> employee <c> Age <t> number <c> City <t> text <c> Name <t> text <c> Employee_ID <t> number </t> hiring <c> Shop_ID <t> number <c> Employee_ID <t> number <c> Is_full_time <t> others <c> Start_from <t> text </t> shop <c> District <t> text <c> Manager_name <t> text <c> Number_products <t> number <c> Location <t> text <c> Shop_ID <t> number <c> Name <t> text <i> How many employees are there? <s> SELECT count(*) FROM employee </s>
--SEPARATOR--
employee <c> Employee_ID <t> number <c> Name <t> text <c> Age <t> number <c> City <t> text </t> shop <c> Shop_ID <t> number <c> Name <t> text <c> Location <t> text <c> District <t> text <c> Number_products <t> number <c> Manager_name <t> text </t> hiring <c> Shop_ID <t> number <c> Employee_ID <t> number <c> Start_from <t> text <c> Is_full_time <t> others </t> evaluation <c> Employee_ID <t> text <c> Year_awarded <t> text <c> Bonus <t> number <i> Count the number of employees <s> SELECT count(*) FROM employee </s>
--SEPARATOR--
employee <c> Age <t> number <c> Name <t> text <c> Employee_ID <t> number <c> City <t> text </t> hiring <c> Shop_ID <t> number <c> Is_full_time <t> others <c> Employee_ID <t> number <c> Start_from <t> text </t> shop <c> Name <t> text <c> District <t> text <c> Manager_name <t> text <c> Location <t> text <c> Number_products <t> number <c> Shop_ID <t> number </t> evaluation <c> Bonus <t> number <c> Employee_ID <t> text <c> Year_awarded <t> text <i> Count the number of employees <s> SELECT count(*) FROM employee </s>
--SEPARATOR--
employee <c> Employee_ID <t> number <c> Name <t> text <c> Age <t> number <c> City <t> text </t> shop <c> Shop_ID <t> number <c> Name <t> text <c> Location <t> text <c> District <t> text <c> Number_products <t> number <c> Manager_name <t> text </t> hiring <c> Shop_ID <t> number <c> Employee_ID <t> number <c> Start_from <t> text <c> Is_full_time <t> others </t> evaluation <c> Employee_ID <t> text <c> Year_awarded <t> text <c> Bonus <t> number <i> Sort employee names by their age in ascending order. <s> SELECT name FROM employee ORDER BY age </s>
--SEPARATOR--
hiring <c> Is_full_time <t> others <c> Shop_ID <t> number <c> Start_from <t> text <c> Employee_ID <t> number </t> shop <c> Location <t> text <c> Name <t> text <c> District <t> text <c> Shop_ID <t> number <c> Number_products <t> number <c> Manager_name <t> text </t> evaluation <c> Bonus <t> number <c> Year_awarded <t> text <c> Employee_ID <t> text </t> employee <c> Employee_ID <t> number <c> Name <t> text <c> Age <t> number <c> City <t> text <i> Sort employee names by their age in ascending order. <s> SELECT name FROM employee ORDER BY age </s>
--SEPARATOR--
employee <c> Employee_ID <t> number <c> Name <t> text <c> Age <t> number <c> City <t> text </t> shop <c> Shop_ID <t> number <c> Name <t> text <c> Location <t> text <c> District <t> text <c> Number_products <t> number <c> Manager_name <t> text </t> hiring <c> Shop_ID <t> number <c> Employee_ID <t> number <c> Start_from <t> text <c> Is_full_time <t> others </t> evaluation <c> Employee_ID <t> text <c> Year_awarded <t> text <c> Bonus <t> number <i> List the names of employees and sort in ascending order of age. <s> SELECT name FROM employee ORDER BY age </s>
--SEPARATOR--
employee <c> Age <t> number <c> City <t> text <c> Employee_ID <t> number <c> Name <t> text </t> shop <c> Manager_name <t> text <c> Shop_ID <t> number <c> Name <t> text <c> Number_products <t> number <c> Location <t> text <c> District <t> text </t> evaluation <c> Year_awarded <t> text <c> Employee_ID <t> text <c> Bonus <t> number </t> hiring <c> Start_from <t> text <c> Is_full_time <t> others <c> Employee_ID <t> number <c> Shop_ID <t> number <i> List the names of employees and sort in ascending order of age. <s> SELECT name FROM employee ORDER BY age </s>
--SEPARATOR--
employee <c> Employee_ID <t> number <c> Name <t> text <c> Age <t> number <c> City <t> text </t> shop <c> Shop_ID <t> number <c> Name <t> text <c> Location <t> text <c> District <t> text <c> Number_products <t> number <c> Manager_name <t> text </t> hiring <c> Shop_ID <t> number <c> Employee_ID <t> number <c> Start_from <t> text <c> Is_full_time <t> others </t> evaluation <c> Employee_ID <t> text <c> Year_awarded <t> text <c> Bonus <t> number <i> What is the number of employees from each city? <s> SELECT count(*) ,  city FROM employee GROUP BY city </s>
--SEPARATOR--
hiring <c> Start_from <t> text <c> Is_full_time <t> others <c> Shop_ID <t> number <c> Employee_ID <t> number </t> evaluation <c> Year_awarded <t> text <c> Employee_ID <t> text <c> Bonus <t> number </t> shop <c> Manager_name <t> text <c> Shop_ID <t> number <c> Location <t> text <c> Name <t> text <c> Number_products <t> number <c> District <t> text </t> employee <c> City <t> text <c> Age <t> number <c> Employee_ID <t> number <c> Name <t> text <i> What is the number of employees from each city? <s> SELECT count(*) ,  city FROM employee GROUP BY city </s>
--SEPARATOR--
employee <c> Employee_ID <t> number <c> Name <t> text <c> Age <t> number <c> City <t> text </t> shop <c> Shop_ID <t> number <c> Name <t> text <c> Location <t> text <c> District <t> text <c> Number_products <t> number <c> Manager_name <t> text </t> hiring <c> Shop_ID <t> number <c> Employee_ID <t> number <c> Start_from <t> text <c> Is_full_time <t> others </t> evaluation <c> Employee_ID <t> text <c> Year_awarded <t> text <c> Bonus <t> number <i> Count the number of employees for each city. <s> SELECT count(*) ,  city FROM employee GROUP BY city </s>
--SEPARATOR--
evaluation <c> Year_awarded <t> text <c> Bonus <t> number <c> Employee_ID <t> text </t> employee <c> Name <t> text <c> Employee_ID <t> number <c> Age <t> number <c> City <t> text </t> shop <c> Manager_name <t> text <c> District <t> text <c> Shop_ID <t> number <c> Number_products <t> number <c> Name <t> text <c> Location <t> text </t> hiring <c> Is_full_time <t> others <c> Shop_ID <t> number <c> Employee_ID <t> number <c> Start_from <t> text <i> Count the number of employees for each city. <s> SELECT count(*) ,  city FROM employee GROUP BY city </s>
--SEPARATOR--
employee <c> Employee_ID <t> number <c> Name <t> text <c> Age <t> number <c> City <t> text </t> shop <c> Shop_ID <t> number <c> Name <t> text <c> Location <t> text <c> District <t> text <c> Number_products <t> number <c> Manager_name <t> text </t> hiring <c> Shop_ID <t> number <c> Employee_ID <t> number <c> Start_from <t> text <c> Is_full_time <t> others </t> evaluation <c> Employee_ID <t> text <c> Year_awarded <t> text <c> Bonus <t> number <i> Which cities do more than one employee under age 30 come from? <s> SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1 </s>
--SEPARATOR--
hiring <c> Shop_ID <t> number <c> Employee_ID <t> number <c> Is_full_time <t> others <c> Start_from <t> text </t> evaluation <c> Year_awarded <t> text <c> Bonus <t> number <c> Employee_ID <t> text </t> employee <c> City <t> text <c> Employee_ID <t> number <c> Name <t> text <c> Age <t> number </t> shop <c> Manager_name <t> text <c> Location <t> text <c> Name <t> text <c> Shop_ID <t> number <c> Number_products <t> number <c> District <t> text <i> Which cities do more than one employee under age 30 come from? <s> SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1 </s>
--SEPARATOR--
employee <c> Employee_ID <t> number <c> Name <t> text <c> Age <t> number <c> City <t> text </t> shop <c> Shop_ID <t> number <c> Name <t> text <c> Location <t> text <c> District <t> text <c> Number_products <t> number <c> Manager_name <t> text </t> hiring <c> Shop_ID <t> number <c> Employee_ID <t> number <c> Start_from <t> text <c> Is_full_time <t> others </t> evaluation <c> Employee_ID <t> text <c> Year_awarded <t> text <c> Bonus <t> number <i> Find the cities that have more than one employee under age 30. <s> SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1 </s>
--SEPARATOR--
employee <c> Name <t> text <c> City <t> text <c> Employee_ID <t> number <c> Age <t> number </t> hiring <c> Shop_ID <t> number <c> Start_from <t> text <c> Employee_ID <t> number <c> Is_full_time <t> others </t> shop <c> Shop_ID <t> number <c> Number_products <t> number <c> Location <t> text <c> Manager_name <t> text <c> Name <t> text <c> District <t> text </t> evaluation <c> Year_awarded <t> text <c> Bonus <t> number <c> Employee_ID <t> text <i> Find the cities that have more than one employee under age 30. <s> SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1 </s>
--SEPARATOR--
employee <c> Employee_ID <t> number <c> Name <t> text <c> Age <t> number <c> City <t> text </t> shop <c> Shop_ID <t> number <c> Name <t> text <c> Location <t> text <c> District <t> text <c> Number_products <t> number <c> Manager_name <t> text </t> hiring <c> Shop_ID <t> number <c> Employee_ID <t> number <c> Start_from <t> text <c> Is_full_time <t> others </t> evaluation <c> Employee_ID <t> text <c> Year_awarded <t> text <c> Bonus <t> number <i> Find the number of shops in each location. <s> SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION </s>
--SEPARATOR--
shop <c> District <t> text <c> Location <t> text <c> Manager_name <t> text <c> Shop_ID <t> number <c> Number_products <t> number <c> Name <t> text </t> hiring <c> Employee_ID <t> number <c> Shop_ID <t> number <c> Is_full_time <t> others <c> Start_from <t> text </t> evaluation <c> Employee_ID <t> text <c> Year_awarded <t> text <c> Bonus <t> number </t> employee <c> Age <t> number <c> City <t> text <c> Employee_ID <t> number <c> Name <t> text <i> Find the number of shops in each location. <s> SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION </s>
--SEPARATOR--
employee <c> Employee_ID <t> number <c> Name <t> text <c> Age <t> number <c> City <t> text </t> shop <c> Shop_ID <t> number <c> Name <t> text <c> Location <t> text <c> District <t> text <c> Number_products <t> number <c> Manager_name <t> text </t> hiring <c> Shop_ID <t> number <c> Employee_ID <t> number <c> Start_from <t> text <c> Is_full_time <t> others </t> evaluation <c> Employee_ID <t> text <c> Year_awarded <t> text <c> Bonus <t> number <i> How many shops are there in each location? <s> SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION </s>
--SEPARATOR--
shop <c> Location <t> text <c> District <t> text <c> Name <t> text <c> Number_products <t> number <c> Shop_ID <t> number <c> Manager_name <t> text </t> hiring <c> Start_from <t> text <c> Is_full_time <t> others <c> Shop_ID <t> number <c> Employee_ID <t> number </t> employee <c> Employee_ID <t> number <c> Age <t> number <c> City <t> text <c> Name <t> text </t> evaluation <c> Bonus <t> number <c> Employee_ID <t> text <c> Year_awarded <t> text <i> How many shops are there in each location? <s> SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION </s>
--SEPARATOR--
employee <c> Employee_ID <t> number <c> Name <t> text <c> Age <t> number <c> City <t> text </t> shop <c> Shop_ID <t> number <c> Name <t> text <c> Location <t> text <c> District <t> text <c> Number_products <t> number <c> Manager_name <t> text </t> hiring <c> Shop_ID <t> number <c> Employee_ID <t> number <c> Start_from <t> text <c> Is_full_time <t> others </t> evaluation <c> Employee_ID <t> text <c> Year_awarded <t> text <c> Bonus <t> number <i> Find the manager name and district of the shop whose number of products is the largest. <s> SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1 </s>
--SEPARATOR--
evaluation <c> Bonus <t> number <c> Employee_ID <t> text <c> Year_awarded <t> text </t> shop <c> District <t> text <c> Number_products <t> number <c> Shop_ID <t> number <c> Manager_name <t> text <c> Location <t> text <c> Name <t> text </t> hiring <c> Is_full_time <t> others <c> Shop_ID <t> number <c> Start_from <t> text <c> Employee_ID <t> number </t> employee <c> Age <t> number <c> Employee_ID <t> number <c> Name <t> text <c> City <t> text <i> Find the manager name and district of the shop whose number of products is the largest. <s> SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1 </s>
--SEPARATOR--
employee <c> Employee_ID <t> number <c> Name <t> text <c> Age <t> number <c> City <t> text </t> shop <c> Shop_ID <t> number <c> Name <t> text <c> Location <t> text <c> District <t> text <c> Number_products <t> number <c> Manager_name <t> text </t> hiring <c> Shop_ID <t> number <c> Employee_ID <t> number <c> Start_from <t> text <c> Is_full_time <t> others </t> evaluation <c> Employee_ID <t> text <c> Year_awarded <t> text <c> Bonus <t> number <i> What are the manager name and district of the shop that sells the largest number of products? <s> SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1 </s>
--SEPARATOR--
shop <c> Manager_name <t> text <c> Location <t> text <c> Number_products <t> number <c> District <t> text <c> Shop_ID <t> number <c> Name <t> text </t> employee <c> Employee_ID <t> number <c> City <t> text <c> Age <t> number <c> Name <t> text </t> hiring <c> Start_from <t> text <c> Is_full_time <t> others <c> Employee_ID <t> number <c> Shop_ID <t> number </t> evaluation <c> Employee_ID <t> text <c> Bonus <t> number <c> Year_awarded <t> text <i> What are the manager name and district of the shop that sells the largest number of products? <s> SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1 </s>
--SEPARATOR--
employee <c> Employee_ID <t> number <c> Name <t> text <c> Age <t> number <c> City <t> text </t> shop <c> Shop_ID <t> number <c> Name <t> text <c> Location <t> text <c> District <t> text <c> Number_products <t> number <c> Manager_name <t> text </t> hiring <c> Shop_ID <t> number <c> Employee_ID <t> number <c> Start_from <t> text <c> Is_full_time <t> others </t> evaluation <c> Employee_ID <t> text <c> Year_awarded <t> text <c> Bonus <t> number <i> find the minimum and maximum number of products of all stores. <s> SELECT min(Number_products) ,  max(Number_products) FROM shop </s>
--SEPARATOR--
evaluation <c> Year_awarded <t> text <c> Employee_ID <t> text <c> Bonus <t> number </t> hiring <c> Is_full_time <t> others <c> Start_from <t> text <c> Employee_ID <t> number <c> Shop_ID <t> number </t> shop <c> Name <t> text <c> District <t> text <c> Manager_name <t> text <c> Location <t> text <c> Number_products <t> number <c> Shop_ID <t> number </t> employee <c> Name <t> text <c> Employee_ID <t> number <c> City <t> text <c> Age <t> number <i> find the minimum and maximum number of products of all stores. <s> SELECT min(Number_products) ,  max(Number_products) FROM shop </s>
--SEPARATOR--
employee <c> Employee_ID <t> number <c> Name <t> text <c> Age <t> number <c> City <t> text </t> shop <c> Shop_ID <t> number <c> Name <t> text <c> Location <t> text <c> District <t> text <c> Number_products <t> number <c> Manager_name <t> text </t> hiring <c> Shop_ID <t> number <c> Employee_ID <t> number <c> Start_from <t> text <c> Is_full_time <t> others </t> evaluation <c> Employee_ID <t> text <c> Year_awarded <t> text <c> Bonus <t> number <i> What are the minimum and maximum number of products across all the shops? <s> SELECT min(Number_products) ,  max(Number_products) FROM shop </s>
--SEPARATOR--
evaluation <c> Year_awarded <t> text <c> Employee_ID <t> text <c> Bonus <t> number </t> shop <c> Number_products <t> number <c> Manager_name <t> text <c> Name <t> text <c> District <t> text <c> Shop_ID <t> number <c> Location <t> text </t> employee <c> City <t> text <c> Employee_ID <t> number <c> Age <t> number <c> Name <t> text </t> hiring <c> Employee_ID <t> number <c> Shop_ID <t> number <c> Is_full_time <t> others <c> Start_from <t> text <i> What are the minimum and maximum number of products across all the shops? <s> SELECT min(Number_products) ,  max(Number_products) FROM shop </s>
--SEPARATOR--
employee <c> Employee_ID <t> number <c> Name <t> text <c> Age <t> number <c> City <t> text </t> shop <c> Shop_ID <t> number <c> Name <t> text <c> Location <t> text <c> District <t> text <c> Number_products <t> number <c> Manager_name <t> text </t> hiring <c> Shop_ID <t> number <c> Employee_ID <t> number <c> Start_from <t> text <c> Is_full_time <t> others </t> evaluation <c> Employee_ID <t> text <c> Year_awarded <t> text <c> Bonus <t> number <i> Return the name, location and district of all shops in descending order of number of products. <s> SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC </s>
--SEPARATOR--
employee <c> Age <t> number <c> Name <t> text <c> Employee_ID <t> number <c> City <t> text </t> evaluation <c> Employee_ID <t> text <c> Year_awarded <t> text <c> Bonus <t> number </t> shop <c> Name <t> text <c> District <t> text <c> Manager_name <t> text <c> Location <t> text <c> Shop_ID <t> number <c> Number_products <t> number </t> hiring <c> Start_from <t> text <c> Shop_ID <t> number <c> Is_full_time <t> others <c> Employee_ID <t> number <i> Return the name, location and district of all shops in descending order of number of products. <s> SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC </s>
--SEPARATOR--
employee <c> Employee_ID <t> number <c> Name <t> text <c> Age <t> number <c> City <t> text </t> shop <c> Shop_ID <t> number <c> Name <t> text <c> Location <t> text <c> District <t> text <c> Number_products <t> number <c> Manager_name <t> text </t> hiring <c> Shop_ID <t> number <c> Employee_ID <t> number <c> Start_from <t> text <c> Is_full_time <t> others </t> evaluation <c> Employee_ID <t> text <c> Year_awarded <t> text <c> Bonus <t> number <i> Sort all the shops by number products in descending order, and return the name, location and district of each shop. <s> SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC </s>
--SEPARATOR--
evaluation <c> Year_awarded <t> text <c> Bonus <t> number <c> Employee_ID <t> text </t> shop <c> Manager_name <t> text <c> Number_products <t> number <c> Name <t> text <c> Location <t> text <c> Shop_ID <t> number <c> District <t> text </t> hiring <c> Employee_ID <t> number <c> Is_full_time <t> others <c> Shop_ID <t> number <c> Start_from <t> text </t> employee <c> Employee_ID <t> number <c> Name <t> text <c> City <t> text <c> Age <t> number <i> Sort all the shops by number products in descending order, and return the name, location and district of each shop. <s> SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC </s>
--SEPARATOR--
employee <c> Employee_ID <t> number <c> Name <t> text <c> Age <t> number <c> City <t> text </t> shop <c> Shop_ID <t> number <c> Name <t> text <c> Location <t> text <c> District <t> text <c> Number_products <t> number <c> Manager_name <t> text </t> hiring <c> Shop_ID <t> number <c> Employee_ID <t> number <c> Start_from <t> text <c> Is_full_time <t> others </t> evaluation <c> Employee_ID <t> text <c> Year_awarded <t> text <c> Bonus <t> number <i> Find the names of stores whose number products is more than the average number of products. <s> SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop) </s>
--SEPARATOR--
hiring <c> Is_full_time <t> others <c> Start_from <t> text <c> Shop_ID <t> number <c> Employee_ID <t> number </t> employee <c> Name <t> text <c> Employee_ID <t> number <c> Age <t> number <c> City <t> text </t> evaluation <c> Year_awarded <t> text <c> Employee_ID <t> text <c> Bonus <t> number </t> shop <c> Manager_name <t> text <c> Number_products <t> number <c> Shop_ID <t> number <c> District <t> text <c> Name <t> text <c> Location <t> text <i> Find the names of stores whose number products is more than the average number of products. <s> SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop) </s>
--SEPARATOR--
employee <c> Employee_ID <t> number <c> Name <t> text <c> Age <t> number <c> City <t> text </t> shop <c> Shop_ID <t> number <c> Name <t> text <c> Location <t> text <c> District <t> text <c> Number_products <t> number <c> Manager_name <t> text </t> hiring <c> Shop_ID <t> number <c> Employee_ID <t> number <c> Start_from <t> text <c> Is_full_time <t> others </t> evaluation <c> Employee_ID <t> text <c> Year_awarded <t> text <c> Bonus <t> number <i> Which shops' number products is above the average? Give me the shop names. <s> SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop) </s>
--SEPARATOR--
shop <c> Number_products <t> number <c> Shop_ID <t> number <c> Manager_name <t> text <c> District <t> text <c> Location <t> text <c> Name <t> text </t> evaluation <c> Bonus <t> number <c> Employee_ID <t> text <c> Year_awarded <t> text </t> employee <c> Name <t> text <c> Employee_ID <t> number <c> City <t> text <c> Age <t> number </t> hiring <c> Start_from <t> text <c> Employee_ID <t> number <c> Shop_ID <t> number <c> Is_full_time <t> others <i> Which shops' number products is above the average? Give me the shop names. <s> SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop) </s>
--SEPARATOR--
employee <c> Employee_ID <t> number <c> Name <t> text <c> Age <t> number <c> City <t> text </t> shop <c> Shop_ID <t> number <c> Name <t> text <c> Location <t> text <c> District <t> text <c> Number_products <t> number <c> Manager_name <t> text </t> hiring <c> Shop_ID <t> number <c> Employee_ID <t> number <c> Start_from <t> text <c> Is_full_time <t> others </t> evaluation <c> Employee_ID <t> text <c> Year_awarded <t> text <c> Bonus <t> number <i> find the name of employee who was awarded the most times in the evaluation. <s> SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
evaluation <c> Employee_ID <t> text <c> Bonus <t> number <c> Year_awarded <t> text </t> hiring <c> Is_full_time <t> others <c> Shop_ID <t> number <c> Start_from <t> text <c> Employee_ID <t> number </t> employee <c> Age <t> number <c> Name <t> text <c> City <t> text <c> Employee_ID <t> number </t> shop <c> District <t> text <c> Number_products <t> number <c> Location <t> text <c> Name <t> text <c> Shop_ID <t> number <c> Manager_name <t> text <i> find the name of employee who was awarded the most times in the evaluation. <s> SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
employee <c> Employee_ID <t> number <c> Name <t> text <c> Age <t> number <c> City <t> text </t> shop <c> Shop_ID <t> number <c> Name <t> text <c> Location <t> text <c> District <t> text <c> Number_products <t> number <c> Manager_name <t> text </t> hiring <c> Shop_ID <t> number <c> Employee_ID <t> number <c> Start_from <t> text <c> Is_full_time <t> others </t> evaluation <c> Employee_ID <t> text <c> Year_awarded <t> text <c> Bonus <t> number <i> Which employee received the most awards in evaluations? Give me the employee name. <s> SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
evaluation <c> Bonus <t> number <c> Year_awarded <t> text <c> Employee_ID <t> text </t> hiring <c> Start_from <t> text <c> Employee_ID <t> number <c> Is_full_time <t> others <c> Shop_ID <t> number </t> employee <c> Name <t> text <c> Age <t> number <c> City <t> text <c> Employee_ID <t> number </t> shop <c> Number_products <t> number <c> Location <t> text <c> District <t> text <c> Name <t> text <c> Manager_name <t> text <c> Shop_ID <t> number <i> Which employee received the most awards in evaluations? Give me the employee name. <s> SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
employee <c> Employee_ID <t> number <c> Name <t> text <c> Age <t> number <c> City <t> text </t> shop <c> Shop_ID <t> number <c> Name <t> text <c> Location <t> text <c> District <t> text <c> Number_products <t> number <c> Manager_name <t> text </t> hiring <c> Shop_ID <t> number <c> Employee_ID <t> number <c> Start_from <t> text <c> Is_full_time <t> others </t> evaluation <c> Employee_ID <t> text <c> Year_awarded <t> text <c> Bonus <t> number <i> Find the name of the employee who got the highest one time bonus. <s> SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1 </s>
--SEPARATOR--
hiring <c> Start_from <t> text <c> Is_full_time <t> others <c> Employee_ID <t> number <c> Shop_ID <t> number </t> employee <c> Employee_ID <t> number <c> City <t> text <c> Age <t> number <c> Name <t> text </t> evaluation <c> Employee_ID <t> text <c> Bonus <t> number <c> Year_awarded <t> text </t> shop <c> Shop_ID <t> number <c> Manager_name <t> text <c> Name <t> text <c> Location <t> text <c> Number_products <t> number <c> District <t> text <i> Find the name of the employee who got the highest one time bonus. <s> SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1 </s>
--SEPARATOR--
employee <c> Employee_ID <t> number <c> Name <t> text <c> Age <t> number <c> City <t> text </t> shop <c> Shop_ID <t> number <c> Name <t> text <c> Location <t> text <c> District <t> text <c> Number_products <t> number <c> Manager_name <t> text </t> hiring <c> Shop_ID <t> number <c> Employee_ID <t> number <c> Start_from <t> text <c> Is_full_time <t> others </t> evaluation <c> Employee_ID <t> text <c> Year_awarded <t> text <c> Bonus <t> number <i> Which employee received the biggest bonus? Give me the employee name. <s> SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1 </s>
--SEPARATOR--
hiring <c> Start_from <t> text <c> Is_full_time <t> others <c> Shop_ID <t> number <c> Employee_ID <t> number </t> employee <c> Employee_ID <t> number <c> Age <t> number <c> City <t> text <c> Name <t> text </t> evaluation <c> Bonus <t> number <c> Year_awarded <t> text <c> Employee_ID <t> text </t> shop <c> Name <t> text <c> Shop_ID <t> number <c> Manager_name <t> text <c> Location <t> text <c> District <t> text <c> Number_products <t> number <i> Which employee received the biggest bonus? Give me the employee name. <s> SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1 </s>
--SEPARATOR--
employee <c> Employee_ID <t> number <c> Name <t> text <c> Age <t> number <c> City <t> text </t> shop <c> Shop_ID <t> number <c> Name <t> text <c> Location <t> text <c> District <t> text <c> Number_products <t> number <c> Manager_name <t> text </t> hiring <c> Shop_ID <t> number <c> Employee_ID <t> number <c> Start_from <t> text <c> Is_full_time <t> others </t> evaluation <c> Employee_ID <t> text <c> Year_awarded <t> text <c> Bonus <t> number <i> Find the names of employees who never won any award in the evaluation. <s> SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation) </s>
--SEPARATOR--
shop <c> Location <t> text <c> District <t> text <c> Shop_ID <t> number <c> Name <t> text <c> Number_products <t> number <c> Manager_name <t> text </t> evaluation <c> Employee_ID <t> text <c> Year_awarded <t> text <c> Bonus <t> number </t> hiring <c> Shop_ID <t> number <c> Is_full_time <t> others <c> Employee_ID <t> number <c> Start_from <t> text </t> employee <c> Name <t> text <c> Age <t> number <c> Employee_ID <t> number <c> City <t> text <i> Find the names of employees who never won any award in the evaluation. <s> SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation) </s>
--SEPARATOR--
employee <c> Employee_ID <t> number <c> Name <t> text <c> Age <t> number <c> City <t> text </t> shop <c> Shop_ID <t> number <c> Name <t> text <c> Location <t> text <c> District <t> text <c> Number_products <t> number <c> Manager_name <t> text </t> hiring <c> Shop_ID <t> number <c> Employee_ID <t> number <c> Start_from <t> text <c> Is_full_time <t> others </t> evaluation <c> Employee_ID <t> text <c> Year_awarded <t> text <c> Bonus <t> number <i> What are the names of the employees who never received any evaluation? <s> SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation) </s>
--SEPARATOR--
evaluation <c> Year_awarded <t> text <c> Employee_ID <t> text <c> Bonus <t> number </t> hiring <c> Is_full_time <t> others <c> Start_from <t> text <c> Shop_ID <t> number <c> Employee_ID <t> number </t> employee <c> Employee_ID <t> number <c> City <t> text <c> Name <t> text <c> Age <t> number </t> shop <c> Shop_ID <t> number <c> Location <t> text <c> Name <t> text <c> District <t> text <c> Number_products <t> number <c> Manager_name <t> text <i> What are the names of the employees who never received any evaluation? <s> SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation) </s>
--SEPARATOR--
employee <c> Employee_ID <t> number <c> Name <t> text <c> Age <t> number <c> City <t> text </t> shop <c> Shop_ID <t> number <c> Name <t> text <c> Location <t> text <c> District <t> text <c> Number_products <t> number <c> Manager_name <t> text </t> hiring <c> Shop_ID <t> number <c> Employee_ID <t> number <c> Start_from <t> text <c> Is_full_time <t> others </t> evaluation <c> Employee_ID <t> text <c> Year_awarded <t> text <c> Bonus <t> number <i> What is the name of the shop that is hiring the largest number of employees? <s> SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
shop <c> Number_products <t> number <c> Shop_ID <t> number <c> Name <t> text <c> Manager_name <t> text <c> Location <t> text <c> District <t> text </t> hiring <c> Employee_ID <t> number <c> Is_full_time <t> others <c> Start_from <t> text <c> Shop_ID <t> number </t> employee <c> Name <t> text <c> City <t> text <c> Age <t> number <c> Employee_ID <t> number </t> evaluation <c> Bonus <t> number <c> Year_awarded <t> text <c> Employee_ID <t> text <i> What is the name of the shop that is hiring the largest number of employees? <s> SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
employee <c> Employee_ID <t> number <c> Name <t> text <c> Age <t> number <c> City <t> text </t> shop <c> Shop_ID <t> number <c> Name <t> text <c> Location <t> text <c> District <t> text <c> Number_products <t> number <c> Manager_name <t> text </t> hiring <c> Shop_ID <t> number <c> Employee_ID <t> number <c> Start_from <t> text <c> Is_full_time <t> others </t> evaluation <c> Employee_ID <t> text <c> Year_awarded <t> text <c> Bonus <t> number <i> Which shop has the most employees? Give me the shop name. <s> SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
shop <c> Location <t> text <c> Number_products <t> number <c> District <t> text <c> Manager_name <t> text <c> Shop_ID <t> number <c> Name <t> text </t> employee <c> City <t> text <c> Age <t> number <c> Name <t> text <c> Employee_ID <t> number </t> hiring <c> Shop_ID <t> number <c> Is_full_time <t> others <c> Start_from <t> text <c> Employee_ID <t> number </t> evaluation <c> Year_awarded <t> text <c> Employee_ID <t> text <c> Bonus <t> number <i> Which shop has the most employees? Give me the shop name. <s> SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
employee <c> Employee_ID <t> number <c> Name <t> text <c> Age <t> number <c> City <t> text </t> shop <c> Shop_ID <t> number <c> Name <t> text <c> Location <t> text <c> District <t> text <c> Number_products <t> number <c> Manager_name <t> text </t> hiring <c> Shop_ID <t> number <c> Employee_ID <t> number <c> Start_from <t> text <c> Is_full_time <t> others </t> evaluation <c> Employee_ID <t> text <c> Year_awarded <t> text <c> Bonus <t> number <i> Find the name of the shops that do not hire any employee. <s> SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring) </s>
--SEPARATOR--
shop <c> Location <t> text <c> Name <t> text <c> Number_products <t> number <c> Manager_name <t> text <c> Shop_ID <t> number <c> District <t> text </t> hiring <c> Start_from <t> text <c> Is_full_time <t> others <c> Shop_ID <t> number <c> Employee_ID <t> number </t> evaluation <c> Employee_ID <t> text <c> Year_awarded <t> text <c> Bonus <t> number </t> employee <c> Name <t> text <c> Employee_ID <t> number <c> City <t> text <c> Age <t> number <i> Find the name of the shops that do not hire any employee. <s> SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring) </s>
--SEPARATOR--
employee <c> Employee_ID <t> number <c> Name <t> text <c> Age <t> number <c> City <t> text </t> shop <c> Shop_ID <t> number <c> Name <t> text <c> Location <t> text <c> District <t> text <c> Number_products <t> number <c> Manager_name <t> text </t> hiring <c> Shop_ID <t> number <c> Employee_ID <t> number <c> Start_from <t> text <c> Is_full_time <t> others </t> evaluation <c> Employee_ID <t> text <c> Year_awarded <t> text <c> Bonus <t> number <i> Which shops run with no employees? Find the shop names <s> SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring) </s>
--SEPARATOR--
employee <c> City <t> text <c> Age <t> number <c> Employee_ID <t> number <c> Name <t> text </t> shop <c> Manager_name <t> text <c> Location <t> text <c> Number_products <t> number <c> Name <t> text <c> District <t> text <c> Shop_ID <t> number </t> evaluation <c> Employee_ID <t> text <c> Year_awarded <t> text <c> Bonus <t> number </t> hiring <c> Shop_ID <t> number <c> Start_from <t> text <c> Employee_ID <t> number <c> Is_full_time <t> others <i> Which shops run with no employees? Find the shop names <s> SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring) </s>
--SEPARATOR--
employee <c> Employee_ID <t> number <c> Name <t> text <c> Age <t> number <c> City <t> text </t> shop <c> Shop_ID <t> number <c> Name <t> text <c> Location <t> text <c> District <t> text <c> Number_products <t> number <c> Manager_name <t> text </t> hiring <c> Shop_ID <t> number <c> Employee_ID <t> number <c> Start_from <t> text <c> Is_full_time <t> others </t> evaluation <c> Employee_ID <t> text <c> Year_awarded <t> text <c> Bonus <t> number <i> Find the number of employees hired in each shop; show the shop name as well. <s> SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name </s>
--SEPARATOR--
evaluation <c> Employee_ID <t> text <c> Year_awarded <t> text <c> Bonus <t> number </t> shop <c> Location <t> text <c> Name <t> text <c> Manager_name <t> text <c> District <t> text <c> Number_products <t> number <c> Shop_ID <t> number </t> employee <c> Age <t> number <c> Name <t> text <c> City <t> text <c> Employee_ID <t> number </t> hiring <c> Shop_ID <t> number <c> Is_full_time <t> others <c> Employee_ID <t> number <c> Start_from <t> text <i> Find the number of employees hired in each shop; show the shop name as well. <s> SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name </s>
--SEPARATOR--
employee <c> Employee_ID <t> number <c> Name <t> text <c> Age <t> number <c> City <t> text </t> shop <c> Shop_ID <t> number <c> Name <t> text <c> Location <t> text <c> District <t> text <c> Number_products <t> number <c> Manager_name <t> text </t> hiring <c> Shop_ID <t> number <c> Employee_ID <t> number <c> Start_from <t> text <c> Is_full_time <t> others </t> evaluation <c> Employee_ID <t> text <c> Year_awarded <t> text <c> Bonus <t> number <i> For each shop, return the number of employees working there and the name of the shop. <s> SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name </s>
--SEPARATOR--
hiring <c> Shop_ID <t> number <c> Employee_ID <t> number <c> Start_from <t> text <c> Is_full_time <t> others </t> employee <c> City <t> text <c> Name <t> text <c> Employee_ID <t> number <c> Age <t> number </t> shop <c> Name <t> text <c> Shop_ID <t> number <c> Manager_name <t> text <c> District <t> text <c> Number_products <t> number <c> Location <t> text </t> evaluation <c> Year_awarded <t> text <c> Bonus <t> number <c> Employee_ID <t> text <i> For each shop, return the number of employees working there and the name of the shop. <s> SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name </s>
--SEPARATOR--
employee <c> Employee_ID <t> number <c> Name <t> text <c> Age <t> number <c> City <t> text </t> shop <c> Shop_ID <t> number <c> Name <t> text <c> Location <t> text <c> District <t> text <c> Number_products <t> number <c> Manager_name <t> text </t> hiring <c> Shop_ID <t> number <c> Employee_ID <t> number <c> Start_from <t> text <c> Is_full_time <t> others </t> evaluation <c> Employee_ID <t> text <c> Year_awarded <t> text <c> Bonus <t> number <i> What is total bonus given in all evaluations? <s> SELECT sum(bonus) FROM evaluation </s>
--SEPARATOR--
evaluation <c> Employee_ID <t> text <c> Year_awarded <t> text <c> Bonus <t> number </t> employee <c> Employee_ID <t> number <c> Age <t> number <c> Name <t> text <c> City <t> text </t> hiring <c> Start_from <t> text <c> Employee_ID <t> number <c> Is_full_time <t> others <c> Shop_ID <t> number </t> shop <c> Number_products <t> number <c> Location <t> text <c> Manager_name <t> text <c> Name <t> text <c> Shop_ID <t> number <c> District <t> text <i> What is total bonus given in all evaluations? <s> SELECT sum(bonus) FROM evaluation </s>
--SEPARATOR--
employee <c> Employee_ID <t> number <c> Name <t> text <c> Age <t> number <c> City <t> text </t> shop <c> Shop_ID <t> number <c> Name <t> text <c> Location <t> text <c> District <t> text <c> Number_products <t> number <c> Manager_name <t> text </t> hiring <c> Shop_ID <t> number <c> Employee_ID <t> number <c> Start_from <t> text <c> Is_full_time <t> others </t> evaluation <c> Employee_ID <t> text <c> Year_awarded <t> text <c> Bonus <t> number <i> Find the total amount of bonus given in all the evaluations. <s> SELECT sum(bonus) FROM evaluation </s>
--SEPARATOR--
evaluation <c> Employee_ID <t> text <c> Year_awarded <t> text <c> Bonus <t> number </t> employee <c> Age <t> number <c> Employee_ID <t> number <c> Name <t> text <c> City <t> text </t> shop <c> Location <t> text <c> Manager_name <t> text <c> Name <t> text <c> Number_products <t> number <c> Shop_ID <t> number <c> District <t> text </t> hiring <c> Shop_ID <t> number <c> Start_from <t> text <c> Is_full_time <t> others <c> Employee_ID <t> number <i> Find the total amount of bonus given in all the evaluations. <s> SELECT sum(bonus) FROM evaluation </s>
--SEPARATOR--
employee <c> Employee_ID <t> number <c> Name <t> text <c> Age <t> number <c> City <t> text </t> shop <c> Shop_ID <t> number <c> Name <t> text <c> Location <t> text <c> District <t> text <c> Number_products <t> number <c> Manager_name <t> text </t> hiring <c> Shop_ID <t> number <c> Employee_ID <t> number <c> Start_from <t> text <c> Is_full_time <t> others </t> evaluation <c> Employee_ID <t> text <c> Year_awarded <t> text <c> Bonus <t> number <i> Give me all the information about hiring. <s> SELECT * FROM hiring </s>
--SEPARATOR--
shop <c> Number_products <t> number <c> Name <t> text <c> Shop_ID <t> number <c> Manager_name <t> text <c> District <t> text <c> Location <t> text </t> evaluation <c> Bonus <t> number <c> Employee_ID <t> text <c> Year_awarded <t> text </t> employee <c> City <t> text <c> Name <t> text <c> Employee_ID <t> number <c> Age <t> number </t> hiring <c> Is_full_time <t> others <c> Shop_ID <t> number <c> Start_from <t> text <c> Employee_ID <t> number <i> Give me all the information about hiring. <s> SELECT * FROM hiring </s>
--SEPARATOR--
employee <c> Employee_ID <t> number <c> Name <t> text <c> Age <t> number <c> City <t> text </t> shop <c> Shop_ID <t> number <c> Name <t> text <c> Location <t> text <c> District <t> text <c> Number_products <t> number <c> Manager_name <t> text </t> hiring <c> Shop_ID <t> number <c> Employee_ID <t> number <c> Start_from <t> text <c> Is_full_time <t> others </t> evaluation <c> Employee_ID <t> text <c> Year_awarded <t> text <c> Bonus <t> number <i> What is all the information about hiring? <s> SELECT * FROM hiring </s>
--SEPARATOR--
shop <c> District <t> text <c> Name <t> text <c> Number_products <t> number <c> Manager_name <t> text <c> Location <t> text <c> Shop_ID <t> number </t> employee <c> Name <t> text <c> Age <t> number <c> Employee_ID <t> number <c> City <t> text </t> hiring <c> Start_from <t> text <c> Is_full_time <t> others <c> Shop_ID <t> number <c> Employee_ID <t> number </t> evaluation <c> Bonus <t> number <c> Employee_ID <t> text <c> Year_awarded <t> text <i> What is all the information about hiring? <s> SELECT * FROM hiring </s>
--SEPARATOR--
employee <c> Employee_ID <t> number <c> Name <t> text <c> Age <t> number <c> City <t> text </t> shop <c> Shop_ID <t> number <c> Name <t> text <c> Location <t> text <c> District <t> text <c> Number_products <t> number <c> Manager_name <t> text </t> hiring <c> Shop_ID <t> number <c> Employee_ID <t> number <c> Start_from <t> text <c> Is_full_time <t> others </t> evaluation <c> Employee_ID <t> text <c> Year_awarded <t> text <c> Bonus <t> number <i> Which district has both stores with less than 3000 products and stores with more than 10000 products? <s> SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000 </s>
--SEPARATOR--
employee <c> City <t> text <c> Age <t> number <c> Employee_ID <t> number <c> Name <t> text </t> hiring <c> Shop_ID <t> number <c> Start_from <t> text <c> Is_full_time <t> others <c> Employee_ID <t> number </t> evaluation <c> Year_awarded <t> text <c> Employee_ID <t> text <c> Bonus <t> number </t> shop <c> Number_products <t> number <c> Name <t> text <c> Shop_ID <t> number <c> District <t> text <c> Manager_name <t> text <c> Location <t> text <i> Which district has both stores with less than 3000 products and stores with more than 10000 products? <s> SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000 </s>
--SEPARATOR--
employee <c> Employee_ID <t> number <c> Name <t> text <c> Age <t> number <c> City <t> text </t> shop <c> Shop_ID <t> number <c> Name <t> text <c> Location <t> text <c> District <t> text <c> Number_products <t> number <c> Manager_name <t> text </t> hiring <c> Shop_ID <t> number <c> Employee_ID <t> number <c> Start_from <t> text <c> Is_full_time <t> others </t> evaluation <c> Employee_ID <t> text <c> Year_awarded <t> text <c> Bonus <t> number <i> Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products. <s> SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000 </s>
--SEPARATOR--
evaluation <c> Bonus <t> number <c> Employee_ID <t> text <c> Year_awarded <t> text </t> shop <c> Location <t> text <c> District <t> text <c> Number_products <t> number <c> Manager_name <t> text <c> Shop_ID <t> number <c> Name <t> text </t> employee <c> City <t> text <c> Name <t> text <c> Age <t> number <c> Employee_ID <t> number </t> hiring <c> Shop_ID <t> number <c> Employee_ID <t> number <c> Start_from <t> text <c> Is_full_time <t> others <i> Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products. <s> SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000 </s>
--SEPARATOR--
employee <c> Employee_ID <t> number <c> Name <t> text <c> Age <t> number <c> City <t> text </t> shop <c> Shop_ID <t> number <c> Name <t> text <c> Location <t> text <c> District <t> text <c> Number_products <t> number <c> Manager_name <t> text </t> hiring <c> Shop_ID <t> number <c> Employee_ID <t> number <c> Start_from <t> text <c> Is_full_time <t> others </t> evaluation <c> Employee_ID <t> text <c> Year_awarded <t> text <c> Bonus <t> number <i> How many different store locations are there? <s> SELECT count(DISTINCT LOCATION) FROM shop </s>
--SEPARATOR--
evaluation <c> Bonus <t> number <c> Year_awarded <t> text <c> Employee_ID <t> text </t> shop <c> Name <t> text <c> Location <t> text <c> Manager_name <t> text <c> Number_products <t> number <c> Shop_ID <t> number <c> District <t> text </t> employee <c> City <t> text <c> Name <t> text <c> Employee_ID <t> number <c> Age <t> number </t> hiring <c> Shop_ID <t> number <c> Is_full_time <t> others <c> Employee_ID <t> number <c> Start_from <t> text <i> How many different store locations are there? <s> SELECT count(DISTINCT LOCATION) FROM shop </s>
--SEPARATOR--
employee <c> Employee_ID <t> number <c> Name <t> text <c> Age <t> number <c> City <t> text </t> shop <c> Shop_ID <t> number <c> Name <t> text <c> Location <t> text <c> District <t> text <c> Number_products <t> number <c> Manager_name <t> text </t> hiring <c> Shop_ID <t> number <c> Employee_ID <t> number <c> Start_from <t> text <c> Is_full_time <t> others </t> evaluation <c> Employee_ID <t> text <c> Year_awarded <t> text <c> Bonus <t> number <i> Count the number of distinct store locations. <s> SELECT count(DISTINCT LOCATION) FROM shop </s>
--SEPARATOR--
shop <c> Name <t> text <c> Number_products <t> number <c> Manager_name <t> text <c> Location <t> text <c> District <t> text <c> Shop_ID <t> number </t> employee <c> Employee_ID <t> number <c> Name <t> text <c> Age <t> number <c> City <t> text </t> hiring <c> Employee_ID <t> number <c> Start_from <t> text <c> Shop_ID <t> number <c> Is_full_time <t> others </t> evaluation <c> Employee_ID <t> text <c> Bonus <t> number <c> Year_awarded <t> text <i> Count the number of distinct store locations. <s> SELECT count(DISTINCT LOCATION) FROM shop </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> How many documents do we have? <s> SELECT count(*) FROM Documents </s>
--SEPARATOR--
Paragraphs <c> Paragraph_Text <t> text <c> Document_ID <t> number <c> Paragraph_ID <t> number <c> Other_Details <t> text </t> Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Date_Effective_From <t> time <c> Template_Details <t> text <c> Template_Type_Code <t> text <c> Date_Effective_To <t> time <c> Version_Number <t> number </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text <i> How many documents do we have? <s> SELECT count(*) FROM Documents </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> Count the number of documents. <s> SELECT count(*) FROM Documents </s>
--SEPARATOR--
Documents <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text <c> Template_ID <t> number <c> Document_ID <t> number </t> Paragraphs <c> Document_ID <t> number <c> Paragraph_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text </t> Templates <c> Date_Effective_To <t> time <c> Template_Details <t> text <c> Template_Type_Code <t> text <c> Template_ID <t> number <c> Date_Effective_From <t> time <c> Version_Number <t> number </t> Ref_Template_Types <c> Template_Type_Description <t> text <c> Template_Type_Code <t> text <i> Count the number of documents. <s> SELECT count(*) FROM Documents </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> List document IDs, document names, and document descriptions for all documents. <s> SELECT document_id ,  document_name ,  document_description FROM Documents </s>
--SEPARATOR--
Templates <c> Template_Details <t> text <c> Template_ID <t> number <c> Version_Number <t> number <c> Date_Effective_To <t> time <c> Date_Effective_From <t> time <c> Template_Type_Code <t> text </t> Documents <c> Other_Details <t> text <c> Document_Name <t> text <c> Document_Description <t> text <c> Document_ID <t> number <c> Template_ID <t> number </t> Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Paragraphs <c> Paragraph_Text <t> text <c> Other_Details <t> text <c> Paragraph_ID <t> number <c> Document_ID <t> number <i> List document IDs, document names, and document descriptions for all documents. <s> SELECT document_id ,  document_name ,  document_description FROM Documents </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> What are the ids, names, and descriptions for all documents? <s> SELECT document_id ,  document_name ,  document_description FROM Documents </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Description <t> text <c> Template_Type_Code <t> text </t> Templates <c> Date_Effective_To <t> time <c> Date_Effective_From <t> time <c> Template_Type_Code <t> text <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Details <t> text </t> Paragraphs <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <c> Paragraph_ID <t> number </t> Documents <c> Document_Description <t> text <c> Document_Name <t> text <c> Other_Details <t> text <c> Document_ID <t> number <c> Template_ID <t> number <i> What are the ids, names, and descriptions for all documents? <s> SELECT document_id ,  document_name ,  document_description FROM Documents </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> What is the document name and template id for document with description with the letter 'w' in it? <s> SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE "%w%" </s>
--SEPARATOR--
Templates <c> Template_Details <t> text <c> Template_ID <t> number <c> Template_Type_Code <t> text <c> Version_Number <t> number <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time </t> Paragraphs <c> Paragraph_Text <t> text <c> Document_ID <t> number <c> Other_Details <t> text <c> Paragraph_ID <t> number </t> Documents <c> Document_Name <t> text <c> Template_ID <t> number <c> Other_Details <t> text <c> Document_Description <t> text <c> Document_ID <t> number </t> Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text <i> What is the document name and template id for document with description with the letter 'w' in it? <s> SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE "%w%" </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> Return the names and template ids for documents that contain the letter w in their description. <s> SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE "%w%" </s>
--SEPARATOR--
Documents <c> Document_Name <t> text <c> Document_Description <t> text <c> Document_ID <t> number <c> Other_Details <t> text <c> Template_ID <t> number </t> Paragraphs <c> Document_ID <t> number <c> Paragraph_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text </t> Templates <c> Template_Type_Code <t> text <c> Template_ID <t> number <c> Version_Number <t> number <c> Date_Effective_From <t> time <c> Template_Details <t> text <c> Date_Effective_To <t> time </t> Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text <i> Return the names and template ids for documents that contain the letter w in their description. <s> SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE "%w%" </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> What is the document id, template id and description for document named "Robbin CV"? <s> SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  "Robbin CV" </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Date_Effective_From <t> time <c> Version_Number <t> number <c> Template_Details <t> text <c> Template_Type_Code <t> text <c> Template_ID <t> number <c> Date_Effective_To <t> time </t> Documents <c> Document_ID <t> number <c> Document_Description <t> text <c> Other_Details <t> text <c> Template_ID <t> number <c> Document_Name <t> text </t> Paragraphs <c> Other_Details <t> text <c> Paragraph_ID <t> number <c> Paragraph_Text <t> text <c> Document_ID <t> number <i> What is the document id, template id and description for document named "Robbin CV"? <s> SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  "Robbin CV" </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> Return the document id, template id, and description for the document with the name Robbin CV. <s> SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  "Robbin CV" </s>
--SEPARATOR--
Templates <c> Template_ID <t> number <c> Template_Type_Code <t> text <c> Date_Effective_To <t> time <c> Date_Effective_From <t> time <c> Version_Number <t> number <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Document_Description <t> text <c> Document_Name <t> text <c> Template_ID <t> number <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_Text <t> text <c> Other_Details <t> text <c> Document_ID <t> number <c> Paragraph_ID <t> number </t> Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text <i> Return the document id, template id, and description for the document with the name Robbin CV. <s> SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  "Robbin CV" </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> How many different templates do all document use? <s> SELECT count(DISTINCT template_id) FROM Documents </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Description <t> text <c> Template_Type_Code <t> text </t> Templates <c> Template_Details <t> text <c> Version_Number <t> number <c> Template_ID <t> number <c> Date_Effective_To <t> time <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time </t> Paragraphs <c> Other_Details <t> text <c> Paragraph_Text <t> text <c> Paragraph_ID <t> number <c> Document_ID <t> number </t> Documents <c> Other_Details <t> text <c> Document_Name <t> text <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Description <t> text <i> How many different templates do all document use? <s> SELECT count(DISTINCT template_id) FROM Documents </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> Count the number of different templates used for documents. <s> SELECT count(DISTINCT template_id) FROM Documents </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Description <t> text <c> Template_Type_Code <t> text </t> Templates <c> Template_ID <t> number <c> Date_Effective_To <t> time <c> Template_Type_Code <t> text <c> Version_Number <t> number <c> Date_Effective_From <t> time <c> Template_Details <t> text </t> Paragraphs <c> Other_Details <t> text <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Paragraph_ID <t> number </t> Documents <c> Template_ID <t> number <c> Document_ID <t> number <c> Other_Details <t> text <c> Document_Name <t> text <c> Document_Description <t> text <i> Count the number of different templates used for documents. <s> SELECT count(DISTINCT template_id) FROM Documents </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> How many documents are using the template with type code 'PPT'? <s> SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT' </s>
--SEPARATOR--
Templates <c> Template_Details <t> text <c> Template_ID <t> number <c> Template_Type_Code <t> text <c> Date_Effective_To <t> time <c> Date_Effective_From <t> time <c> Version_Number <t> number </t> Ref_Template_Types <c> Template_Type_Description <t> text <c> Template_Type_Code <t> text </t> Paragraphs <c> Document_ID <t> number <c> Paragraph_ID <t> number <c> Other_Details <t> text <c> Paragraph_Text <t> text </t> Documents <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text <c> Document_ID <t> number <i> How many documents are using the template with type code 'PPT'? <s> SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT' </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> Count the number of documents that use the PPT template type. <s> SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT' </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Description <t> text <c> Template_Type_Code <t> text </t> Paragraphs <c> Other_Details <t> text <c> Paragraph_ID <t> number <c> Paragraph_Text <t> text <c> Document_ID <t> number </t> Documents <c> Document_ID <t> number <c> Other_Details <t> text <c> Document_Name <t> text <c> Document_Description <t> text <c> Template_ID <t> number </t> Templates <c> Template_ID <t> number <c> Template_Type_Code <t> text <c> Date_Effective_To <t> time <c> Template_Details <t> text <c> Date_Effective_From <t> time <c> Version_Number <t> number <i> Count the number of documents that use the PPT template type. <s> SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT' </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> Show all template ids and number of documents using each template. <s> SELECT template_id ,  count(*) FROM Documents GROUP BY template_id </s>
--SEPARATOR--
Templates <c> Date_Effective_To <t> time <c> Template_ID <t> number <c> Date_Effective_From <t> time <c> Template_Type_Code <t> text <c> Version_Number <t> number <c> Template_Details <t> text </t> Paragraphs <c> Other_Details <t> text <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text </t> Documents <c> Document_Description <t> text <c> Other_Details <t> text <c> Document_ID <t> number <c> Document_Name <t> text <c> Template_ID <t> number </t> Ref_Template_Types <c> Template_Type_Description <t> text <c> Template_Type_Code <t> text <i> Show all template ids and number of documents using each template. <s> SELECT template_id ,  count(*) FROM Documents GROUP BY template_id </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> What are all different template ids used for documents, and how many times were each of them used? <s> SELECT template_id ,  count(*) FROM Documents GROUP BY template_id </s>
--SEPARATOR--
Templates <c> Date_Effective_To <t> time <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Template_ID <t> number <c> Template_Details <t> text <c> Version_Number <t> number </t> Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Documents <c> Document_ID <t> number <c> Document_Name <t> text <c> Template_ID <t> number <c> Other_Details <t> text <c> Document_Description <t> text </t> Paragraphs <c> Paragraph_Text <t> text <c> Document_ID <t> number <c> Other_Details <t> text <c> Paragraph_ID <t> number <i> What are all different template ids used for documents, and how many times were each of them used? <s> SELECT template_id ,  count(*) FROM Documents GROUP BY template_id </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> What is the id and type code for the template used by the most documents? <s> SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text </t> Documents <c> Document_ID <t> number <c> Document_Name <t> text <c> Template_ID <t> number <c> Document_Description <t> text <c> Other_Details <t> text </t> Templates <c> Version_Number <t> number <c> Date_Effective_To <t> time <c> Template_Type_Code <t> text <c> Template_ID <t> number <c> Date_Effective_From <t> time <c> Template_Details <t> text </t> Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text <i> What is the id and type code for the template used by the most documents? <s> SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> Return the id and type code of the template that is used for the greatest number of documents. <s> SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Paragraphs <c> Document_ID <t> number <c> Other_Details <t> text <c> Paragraph_Text <t> text <c> Paragraph_ID <t> number </t> Documents <c> Document_Name <t> text <c> Document_ID <t> number <c> Document_Description <t> text <c> Template_ID <t> number <c> Other_Details <t> text </t> Templates <c> Version_Number <t> number <c> Template_Details <t> text <c> Template_Type_Code <t> text <c> Template_ID <t> number <c> Date_Effective_To <t> time <c> Date_Effective_From <t> time </t> Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text <i> Return the id and type code of the template that is used for the greatest number of documents. <s> SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> Show ids for all templates that are used by more than one document. <s> SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1 </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Documents <c> Other_Details <t> text <c> Document_ID <t> number <c> Document_Description <t> text <c> Document_Name <t> text <c> Template_ID <t> number </t> Templates <c> Template_Details <t> text <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Template_ID <t> number <c> Date_Effective_To <t> time <c> Version_Number <t> number </t> Paragraphs <c> Paragraph_Text <t> text <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Other_Details <t> text <i> Show ids for all templates that are used by more than one document. <s> SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1 </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> What are the template ids of any templates used in more than a single document? <s> SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1 </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Description <t> text <c> Template_Type_Code <t> text </t> Documents <c> Document_Name <t> text <c> Other_Details <t> text <c> Document_Description <t> text <c> Template_ID <t> number <c> Document_ID <t> number </t> Templates <c> Template_Type_Code <t> text <c> Template_Details <t> text <c> Version_Number <t> number <c> Date_Effective_To <t> time <c> Date_Effective_From <t> time <c> Template_ID <t> number </t> Paragraphs <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Paragraph_ID <t> number <c> Other_Details <t> text <i> What are the template ids of any templates used in more than a single document? <s> SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1 </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> Show ids for all templates not used by any document. <s> SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents </s>
--SEPARATOR--
Templates <c> Template_Details <t> text <c> Template_ID <t> number <c> Template_Type_Code <t> text <c> Date_Effective_To <t> time <c> Version_Number <t> number <c> Date_Effective_From <t> time </t> Documents <c> Template_ID <t> number <c> Other_Details <t> text <c> Document_Description <t> text <c> Document_ID <t> number <c> Document_Name <t> text </t> Paragraphs <c> Other_Details <t> text <c> Paragraph_ID <t> number <c> Paragraph_Text <t> text <c> Document_ID <t> number </t> Ref_Template_Types <c> Template_Type_Description <t> text <c> Template_Type_Code <t> text <i> Show ids for all templates not used by any document. <s> SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> What are the ids for templates that are not used in any documents? <s> SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents </s>
--SEPARATOR--
Documents <c> Other_Details <t> text <c> Document_Description <t> text <c> Document_Name <t> text <c> Template_ID <t> number <c> Document_ID <t> number </t> Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <c> Document_ID <t> number </t> Templates <c> Version_Number <t> number <c> Date_Effective_To <t> time <c> Template_Details <t> text <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Template_ID <t> number <i> What are the ids for templates that are not used in any documents? <s> SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> How many templates do we have? <s> SELECT count(*) FROM Templates </s>
--SEPARATOR--
Documents <c> Template_ID <t> number <c> Document_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Templates <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Version_Number <t> number <c> Template_Details <t> text <c> Template_Type_Code <t> text <c> Template_ID <t> number </t> Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Paragraphs <c> Paragraph_Text <t> text <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Other_Details <t> text <i> How many templates do we have? <s> SELECT count(*) FROM Templates </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> Count the number of templates. <s> SELECT count(*) FROM Templates </s>
--SEPARATOR--
Templates <c> Date_Effective_From <t> time <c> Template_Details <t> text <c> Date_Effective_To <t> time <c> Version_Number <t> number <c> Template_ID <t> number <c> Template_Type_Code <t> text </t> Documents <c> Other_Details <t> text <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_ID <t> number <c> Document_Description <t> text </t> Ref_Template_Types <c> Template_Type_Description <t> text <c> Template_Type_Code <t> text </t> Paragraphs <c> Other_Details <t> text <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Paragraph_ID <t> number <i> Count the number of templates. <s> SELECT count(*) FROM Templates </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> Show template ids, version numbers, and template type codes for all templates. <s> SELECT template_id ,  version_number ,  template_type_code FROM Templates </s>
--SEPARATOR--
Paragraphs <c> Document_ID <t> number <c> Other_Details <t> text <c> Paragraph_ID <t> number <c> Paragraph_Text <t> text </t> Templates <c> Template_ID <t> number <c> Date_Effective_To <t> time <c> Template_Type_Code <t> text <c> Template_Details <t> text <c> Date_Effective_From <t> time <c> Version_Number <t> number </t> Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Documents <c> Document_ID <t> number <c> Document_Name <t> text <c> Other_Details <t> text <c> Document_Description <t> text <c> Template_ID <t> number <i> Show template ids, version numbers, and template type codes for all templates. <s> SELECT template_id ,  version_number ,  template_type_code FROM Templates </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> What are the ids, version numbers, and type codes for each template? <s> SELECT template_id ,  version_number ,  template_type_code FROM Templates </s>
--SEPARATOR--
Templates <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text <c> Template_Type_Code <t> text <c> Template_ID <t> number <c> Version_Number <t> number </t> Ref_Template_Types <c> Template_Type_Description <t> text <c> Template_Type_Code <t> text </t> Paragraphs <c> Document_ID <t> number <c> Other_Details <t> text <c> Paragraph_Text <t> text <c> Paragraph_ID <t> number </t> Documents <c> Other_Details <t> text <c> Document_Description <t> text <c> Document_ID <t> number <c> Document_Name <t> text <c> Template_ID <t> number <i> What are the ids, version numbers, and type codes for each template? <s> SELECT template_id ,  version_number ,  template_type_code FROM Templates </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> Show all distinct template type codes for all templates. <s> SELECT DISTINCT template_type_code FROM Templates </s>
--SEPARATOR--
Paragraphs <c> Paragraph_Text <t> text <c> Document_ID <t> number <c> Other_Details <t> text <c> Paragraph_ID <t> number </t> Templates <c> Date_Effective_From <t> time <c> Version_Number <t> number <c> Template_ID <t> number <c> Date_Effective_To <t> time <c> Template_Type_Code <t> text <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Document_Name <t> text <c> Other_Details <t> text <c> Template_ID <t> number <c> Document_Description <t> text </t> Ref_Template_Types <c> Template_Type_Description <t> text <c> Template_Type_Code <t> text <i> Show all distinct template type codes for all templates. <s> SELECT DISTINCT template_type_code FROM Templates </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> What are the different template type codes? <s> SELECT DISTINCT template_type_code FROM Templates </s>
--SEPARATOR--
Documents <c> Template_ID <t> number <c> Other_Details <t> text <c> Document_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text </t> Ref_Template_Types <c> Template_Type_Description <t> text <c> Template_Type_Code <t> text </t> Paragraphs <c> Paragraph_Text <t> text <c> Paragraph_ID <t> number <c> Other_Details <t> text <c> Document_ID <t> number </t> Templates <c> Date_Effective_From <t> time <c> Version_Number <t> number <c> Template_ID <t> number <c> Date_Effective_To <t> time <c> Template_Details <t> text <c> Template_Type_Code <t> text <i> What are the different template type codes? <s> SELECT DISTINCT template_type_code FROM Templates </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> What are the ids of templates with template type code PP or PPT? <s> SELECT template_id FROM Templates WHERE template_type_code  =  "PP" OR template_type_code  =  "PPT" </s>
--SEPARATOR--
Paragraphs <c> Paragraph_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <c> Document_ID <t> number </t> Documents <c> Document_Description <t> text <c> Template_ID <t> number <c> Document_ID <t> number <c> Other_Details <t> text <c> Document_Name <t> text </t> Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Date_Effective_To <t> time <c> Template_Type_Code <t> text <c> Template_ID <t> number <c> Template_Details <t> text <c> Version_Number <t> number <c> Date_Effective_From <t> time <i> What are the ids of templates with template type code PP or PPT? <s> SELECT template_id FROM Templates WHERE template_type_code  =  "PP" OR template_type_code  =  "PPT" </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> Return the ids of templates that have the code PP or PPT. <s> SELECT template_id FROM Templates WHERE template_type_code  =  "PP" OR template_type_code  =  "PPT" </s>
--SEPARATOR--
Documents <c> Document_Description <t> text <c> Document_ID <t> number <c> Other_Details <t> text <c> Template_ID <t> number <c> Document_Name <t> text </t> Paragraphs <c> Other_Details <t> text <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Paragraph_ID <t> number </t> Ref_Template_Types <c> Template_Type_Description <t> text <c> Template_Type_Code <t> text </t> Templates <c> Template_Details <t> text <c> Date_Effective_To <t> time <c> Template_ID <t> number <c> Version_Number <t> number <c> Date_Effective_From <t> time <c> Template_Type_Code <t> text <i> Return the ids of templates that have the code PP or PPT. <s> SELECT template_id FROM Templates WHERE template_type_code  =  "PP" OR template_type_code  =  "PPT" </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> How many templates have template type code CV? <s> SELECT count(*) FROM Templates WHERE template_type_code  =  "CV" </s>
--SEPARATOR--
Templates <c> Template_Details <t> text <c> Template_ID <t> number <c> Version_Number <t> number <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Type_Code <t> text </t> Paragraphs <c> Document_ID <t> number <c> Other_Details <t> text <c> Paragraph_Text <t> text <c> Paragraph_ID <t> number </t> Documents <c> Template_ID <t> number <c> Document_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Ref_Template_Types <c> Template_Type_Description <t> text <c> Template_Type_Code <t> text <i> How many templates have template type code CV? <s> SELECT count(*) FROM Templates WHERE template_type_code  =  "CV" </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> Count the number of templates of the type CV. <s> SELECT count(*) FROM Templates WHERE template_type_code  =  "CV" </s>
--SEPARATOR--
Templates <c> Date_Effective_To <t> time <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Details <t> text </t> Documents <c> Template_ID <t> number <c> Document_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Ref_Template_Types <c> Template_Type_Description <t> text <c> Template_Type_Code <t> text </t> Paragraphs <c> Other_Details <t> text <c> Paragraph_Text <t> text <c> Document_ID <t> number <c> Paragraph_ID <t> number <i> Count the number of templates of the type CV. <s> SELECT count(*) FROM Templates WHERE template_type_code  =  "CV" </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> What is the version number and template type code for the template with version number later than 5? <s> SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5 </s>
--SEPARATOR--
Documents <c> Document_ID <t> number <c> Document_Name <t> text <c> Template_ID <t> number <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <c> Paragraph_ID <t> number </t> Templates <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Template_ID <t> number <c> Template_Details <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time </t> Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text <i> What is the version number and template type code for the template with version number later than 5? <s> SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5 </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> Return the version numbers and template type codes of templates with a version number greater than 5. <s> SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5 </s>
--SEPARATOR--
Documents <c> Template_ID <t> number <c> Document_ID <t> number <c> Document_Name <t> text <c> Other_Details <t> text <c> Document_Description <t> text </t> Templates <c> Date_Effective_From <t> time <c> Version_Number <t> number <c> Template_Details <t> text <c> Date_Effective_To <t> time <c> Template_Type_Code <t> text <c> Template_ID <t> number </t> Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Paragraphs <c> Document_ID <t> number <c> Other_Details <t> text <c> Paragraph_Text <t> text <c> Paragraph_ID <t> number <i> Return the version numbers and template type codes of templates with a version number greater than 5. <s> SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5 </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> Show all template type codes and number of templates for each. <s> SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code </s>
--SEPARATOR--
Paragraphs <c> Other_Details <t> text <c> Paragraph_Text <t> text <c> Paragraph_ID <t> number <c> Document_ID <t> number </t> Documents <c> Template_ID <t> number <c> Document_Name <t> text <c> Other_Details <t> text <c> Document_Description <t> text <c> Document_ID <t> number </t> Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Date_Effective_To <t> time <c> Template_ID <t> number <c> Version_Number <t> number <c> Date_Effective_From <t> time <c> Template_Details <t> text <c> Template_Type_Code <t> text <i> Show all template type codes and number of templates for each. <s> SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> What are the different template type codes, and how many templates correspond to each? <s> SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Description <t> text <c> Template_Type_Code <t> text </t> Documents <c> Document_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Template_ID <t> number <c> Other_Details <t> text </t> Templates <c> Date_Effective_To <t> time <c> Template_ID <t> number <c> Version_Number <t> number <c> Date_Effective_From <t> time <c> Template_Type_Code <t> text <c> Template_Details <t> text </t> Paragraphs <c> Document_ID <t> number <c> Other_Details <t> text <c> Paragraph_ID <t> number <c> Paragraph_Text <t> text <i> What are the different template type codes, and how many templates correspond to each? <s> SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> Which template type code has most number of templates? <s> SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Templates <c> Version_Number <t> number <c> Template_Details <t> text <c> Template_ID <t> number <c> Template_Type_Code <t> text <c> Date_Effective_To <t> time <c> Date_Effective_From <t> time </t> Documents <c> Other_Details <t> text <c> Document_Name <t> text <c> Document_Description <t> text <c> Template_ID <t> number <c> Document_ID <t> number </t> Paragraphs <c> Paragraph_ID <t> number <c> Other_Details <t> text <c> Paragraph_Text <t> text <c> Document_ID <t> number </t> Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text <i> Which template type code has most number of templates? <s> SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> Return the type code of the template type that the most templates belong to. <s> SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Version_Number <t> number <c> Date_Effective_From <t> time <c> Template_Details <t> text <c> Date_Effective_To <t> time <c> Template_ID <t> number <c> Template_Type_Code <t> text </t> Paragraphs <c> Other_Details <t> text <c> Paragraph_Text <t> text <c> Paragraph_ID <t> number <c> Document_ID <t> number </t> Documents <c> Document_Description <t> text <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_ID <t> number <c> Other_Details <t> text <i> Return the type code of the template type that the most templates belong to. <s> SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> Show all template type codes with less than three templates. <s> SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3 </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Template_Details <t> text <c> Version_Number <t> number <c> Date_Effective_To <t> time <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time </t> Paragraphs <c> Document_ID <t> number <c> Paragraph_ID <t> number <c> Other_Details <t> text <c> Paragraph_Text <t> text </t> Documents <c> Document_Name <t> text <c> Template_ID <t> number <c> Document_ID <t> number <c> Other_Details <t> text <c> Document_Description <t> text <i> Show all template type codes with less than three templates. <s> SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3 </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> What are the codes of template types that have fewer than 3 templates? <s> SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3 </s>
--SEPARATOR--
Documents <c> Template_ID <t> number <c> Document_Name <t> text <c> Other_Details <t> text <c> Document_Description <t> text <c> Document_ID <t> number </t> Ref_Template_Types <c> Template_Type_Description <t> text <c> Template_Type_Code <t> text </t> Paragraphs <c> Paragraph_Text <t> text <c> Document_ID <t> number <c> Paragraph_ID <t> number <c> Other_Details <t> text </t> Templates <c> Template_ID <t> number <c> Date_Effective_From <t> time <c> Template_Details <t> text <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_To <t> time <i> What are the codes of template types that have fewer than 3 templates? <s> SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3 </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> What the smallest version number and its template type code? <s> SELECT min(Version_Number) ,  template_type_code FROM Templates </s>
--SEPARATOR--
Paragraphs <c> Other_Details <t> text <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text </t> Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Documents <c> Document_ID <t> number <c> Document_Name <t> text <c> Other_Details <t> text <c> Document_Description <t> text <c> Template_ID <t> number </t> Templates <c> Template_Type_Code <t> text <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Details <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <i> What the smallest version number and its template type code? <s> SELECT min(Version_Number) ,  template_type_code FROM Templates </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> Return the lowest version number, along with its corresponding template type code. <s> SELECT min(Version_Number) ,  template_type_code FROM Templates </s>
--SEPARATOR--
Templates <c> Template_Details <t> text <c> Template_ID <t> number <c> Date_Effective_To <t> time <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time </t> Documents <c> Other_Details <t> text <c> Document_Description <t> text <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text </t> Ref_Template_Types <c> Template_Type_Description <t> text <c> Template_Type_Code <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> Return the lowest version number, along with its corresponding template type code. <s> SELECT min(Version_Number) ,  template_type_code FROM Templates </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> What is the template type code of the template used by document with the name "Data base"? <s> SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  "Data base" </s>
--SEPARATOR--
Templates <c> Template_ID <t> number <c> Template_Details <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Version_Number <t> number <c> Template_Type_Code <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Other_Details <t> text <c> Paragraph_Text <t> text <c> Document_ID <t> number </t> Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Documents <c> Document_Name <t> text <c> Template_ID <t> number <c> Document_ID <t> number <c> Document_Description <t> text <c> Other_Details <t> text <i> What is the template type code of the template used by document with the name "Data base"? <s> SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  "Data base" </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> Return the template type code of the template that is used by a document named Data base. <s> SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  "Data base" </s>
--SEPARATOR--
Paragraphs <c> Paragraph_Text <t> text <c> Other_Details <t> text <c> Document_ID <t> number <c> Paragraph_ID <t> number </t> Templates <c> Template_ID <t> number <c> Template_Type_Code <t> text <c> Date_Effective_To <t> time <c> Template_Details <t> text <c> Date_Effective_From <t> time <c> Version_Number <t> number </t> Documents <c> Document_ID <t> number <c> Other_Details <t> text <c> Document_Description <t> text <c> Template_ID <t> number <c> Document_Name <t> text </t> Ref_Template_Types <c> Template_Type_Description <t> text <c> Template_Type_Code <t> text <i> Return the template type code of the template that is used by a document named Data base. <s> SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  "Data base" </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> Show all document names using templates with template type code BK. <s> SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  "BK" </s>
--SEPARATOR--
Documents <c> Document_ID <t> number <c> Document_Description <t> text <c> Document_Name <t> text <c> Template_ID <t> number <c> Other_Details <t> text </t> Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Date_Effective_To <t> time <c> Template_Type_Code <t> text <c> Template_ID <t> number <c> Date_Effective_From <t> time <c> Template_Details <t> text <c> Version_Number <t> number </t> Paragraphs <c> Paragraph_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <c> Document_ID <t> number <i> Show all document names using templates with template type code BK. <s> SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  "BK" </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> What are the names of documents that use templates with the code BK? <s> SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  "BK" </s>
--SEPARATOR--
Documents <c> Document_ID <t> number <c> Document_Description <t> text <c> Document_Name <t> text <c> Template_ID <t> number <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Other_Details <t> text <c> Paragraph_Text <t> text </t> Ref_Template_Types <c> Template_Type_Description <t> text <c> Template_Type_Code <t> text </t> Templates <c> Date_Effective_To <t> time <c> Template_Details <t> text <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Version_Number <t> number <c> Template_ID <t> number <i> What are the names of documents that use templates with the code BK? <s> SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  "BK" </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> Show all template type codes and the number of documents using each type. <s> SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code </s>
--SEPARATOR--
Paragraphs <c> Paragraph_Text <t> text <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Other_Details <t> text </t> Documents <c> Template_ID <t> number <c> Other_Details <t> text <c> Document_Name <t> text <c> Document_Description <t> text <c> Document_ID <t> number </t> Ref_Template_Types <c> Template_Type_Description <t> text <c> Template_Type_Code <t> text </t> Templates <c> Template_Type_Code <t> text <c> Version_Number <t> number <c> Template_Details <t> text <c> Template_ID <t> number <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <i> Show all template type codes and the number of documents using each type. <s> SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> What are the different template type codes, and how many documents use each type? <s> SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_Type_Code <t> text <c> Date_Effective_To <t> time <c> Date_Effective_From <t> time <c> Template_Details <t> text <c> Template_ID <t> number <c> Version_Number <t> number </t> Paragraphs <c> Paragraph_Text <t> text <c> Other_Details <t> text <c> Document_ID <t> number <c> Paragraph_ID <t> number </t> Documents <c> Template_ID <t> number <c> Document_Description <t> text <c> Document_ID <t> number <c> Other_Details <t> text <c> Document_Name <t> text <i> What are the different template type codes, and how many documents use each type? <s> SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> Which template type code is used by most number of documents? <s> SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Paragraphs <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Paragraph_ID <t> number <c> Other_Details <t> text </t> Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_Details <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Version_Number <t> number <c> Template_ID <t> number <c> Template_Type_Code <t> text </t> Documents <c> Other_Details <t> text <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_ID <t> number <c> Document_Description <t> text <i> Which template type code is used by most number of documents? <s> SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> Return the code of the template type that is most commonly used in documents. <s> SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Paragraphs <c> Paragraph_Text <t> text <c> Other_Details <t> text <c> Paragraph_ID <t> number <c> Document_ID <t> number </t> Templates <c> Template_Type_Code <t> text <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Details <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time </t> Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Documents <c> Document_ID <t> number <c> Other_Details <t> text <c> Document_Description <t> text <c> Template_ID <t> number <c> Document_Name <t> text <i> Return the code of the template type that is most commonly used in documents. <s> SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> Show all template type codes that are not used by any document. <s> SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id </s>
--SEPARATOR--
Documents <c> Document_Description <t> text <c> Document_ID <t> number <c> Other_Details <t> text <c> Document_Name <t> text <c> Template_ID <t> number </t> Templates <c> Template_ID <t> number <c> Date_Effective_To <t> time <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Version_Number <t> number <c> Template_Details <t> text </t> Paragraphs <c> Paragraph_Text <t> text <c> Other_Details <t> text <c> Paragraph_ID <t> number <c> Document_ID <t> number </t> Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text <i> Show all template type codes that are not used by any document. <s> SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> What are the codes of template types that are not used for any document? <s> SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id </s>
--SEPARATOR--
Templates <c> Date_Effective_To <t> time <c> Template_ID <t> number <c> Template_Type_Code <t> text <c> Version_Number <t> number <c> Template_Details <t> text <c> Date_Effective_From <t> time </t> Documents <c> Template_ID <t> number <c> Other_Details <t> text <c> Document_Description <t> text <c> Document_Name <t> text <c> Document_ID <t> number </t> Paragraphs <c> Other_Details <t> text <c> Paragraph_ID <t> number <c> Paragraph_Text <t> text <c> Document_ID <t> number </t> Ref_Template_Types <c> Template_Type_Description <t> text <c> Template_Type_Code <t> text <i> What are the codes of template types that are not used for any document? <s> SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> Show all template type codes and descriptions. <s> SELECT template_type_code ,  template_type_description FROM Ref_template_types </s>
--SEPARATOR--
Documents <c> Document_Description <t> text <c> Document_Name <t> text <c> Document_ID <t> number <c> Other_Details <t> text <c> Template_ID <t> number </t> Paragraphs <c> Other_Details <t> text <c> Paragraph_ID <t> number <c> Paragraph_Text <t> text <c> Document_ID <t> number </t> Templates <c> Template_ID <t> number <c> Date_Effective_To <t> time <c> Template_Details <t> text <c> Version_Number <t> number <c> Date_Effective_From <t> time <c> Template_Type_Code <t> text </t> Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text <i> Show all template type codes and descriptions. <s> SELECT template_type_code ,  template_type_description FROM Ref_template_types </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> What are the type codes and descriptions for all template types? <s> SELECT template_type_code ,  template_type_description FROM Ref_template_types </s>
--SEPARATOR--
Templates <c> Version_Number <t> number <c> Template_Details <t> text <c> Date_Effective_To <t> time <c> Date_Effective_From <t> time <c> Template_ID <t> number <c> Template_Type_Code <t> text </t> Ref_Template_Types <c> Template_Type_Description <t> text <c> Template_Type_Code <t> text </t> Documents <c> Document_Name <t> text <c> Other_Details <t> text <c> Document_ID <t> number <c> Document_Description <t> text <c> Template_ID <t> number </t> Paragraphs <c> Paragraph_Text <t> text <c> Other_Details <t> text <c> Document_ID <t> number <c> Paragraph_ID <t> number <i> What are the type codes and descriptions for all template types? <s> SELECT template_type_code ,  template_type_description FROM Ref_template_types </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> What is the template type descriptions for template type code "AD". <s> SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  "AD" </s>
--SEPARATOR--
Documents <c> Template_ID <t> number <c> Document_ID <t> number <c> Document_Description <t> text <c> Document_Name <t> text <c> Other_Details <t> text </t> Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Paragraphs <c> Document_ID <t> number <c> Other_Details <t> text <c> Paragraph_ID <t> number <c> Paragraph_Text <t> text </t> Templates <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Template_ID <t> number <i> What is the template type descriptions for template type code "AD". <s> SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  "AD" </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> Return the template type description of the template type with the code AD. <s> SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  "AD" </s>
--SEPARATOR--
Templates <c> Template_Details <t> text <c> Date_Effective_To <t> time <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Template_ID <t> number <c> Date_Effective_From <t> time </t> Ref_Template_Types <c> Template_Type_Description <t> text <c> Template_Type_Code <t> text </t> Paragraphs <c> Paragraph_Text <t> text <c> Other_Details <t> text <c> Document_ID <t> number <c> Paragraph_ID <t> number </t> Documents <c> Other_Details <t> text <c> Template_ID <t> number <c> Document_Description <t> text <c> Document_Name <t> text <c> Document_ID <t> number <i> Return the template type description of the template type with the code AD. <s> SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  "AD" </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> What is the template type code for template type description "Book". <s> SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  "Book" </s>
--SEPARATOR--
Documents <c> Document_ID <t> number <c> Document_Description <t> text <c> Template_ID <t> number <c> Document_Name <t> text <c> Other_Details <t> text </t> Ref_Template_Types <c> Template_Type_Description <t> text <c> Template_Type_Code <t> text </t> Paragraphs <c> Document_ID <t> number <c> Paragraph_ID <t> number <c> Other_Details <t> text <c> Paragraph_Text <t> text </t> Templates <c> Date_Effective_From <t> time <c> Template_Details <t> text <c> Template_ID <t> number <c> Date_Effective_To <t> time <c> Version_Number <t> number <c> Template_Type_Code <t> text <i> What is the template type code for template type description "Book". <s> SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  "Book" </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> Return the type code of the template type with the description "Book". <s> SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  "Book" </s>
--SEPARATOR--
Documents <c> Template_ID <t> number <c> Document_Description <t> text <c> Other_Details <t> text <c> Document_Name <t> text <c> Document_ID <t> number </t> Paragraphs <c> Paragraph_Text <t> text <c> Paragraph_ID <t> number <c> Other_Details <t> text <c> Document_ID <t> number </t> Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_To <t> time <c> Template_ID <t> number <c> Template_Details <t> text <c> Date_Effective_From <t> time <i> Return the type code of the template type with the description "Book". <s> SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  "Book" </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> What are the distinct template type descriptions for the templates ever used by any document? <s> SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID </s>
--SEPARATOR--
Paragraphs <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <c> Paragraph_ID <t> number </t> Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Date_Effective_To <t> time <c> Date_Effective_From <t> time <c> Template_ID <t> number <c> Template_Details <t> text <c> Template_Type_Code <t> text <c> Version_Number <t> number </t> Documents <c> Other_Details <t> text <c> Document_Description <t> text <c> Document_Name <t> text <c> Document_ID <t> number <c> Template_ID <t> number <i> What are the distinct template type descriptions for the templates ever used by any document? <s> SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> Return the different descriptions for templates that have been used in a document. <s> SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID </s>
--SEPARATOR--
Templates <c> Template_Details <t> text <c> Version_Number <t> number <c> Date_Effective_From <t> time <c> Template_ID <t> number <c> Template_Type_Code <t> text <c> Date_Effective_To <t> time </t> Documents <c> Document_Description <t> text <c> Template_ID <t> number <c> Document_ID <t> number <c> Other_Details <t> text <c> Document_Name <t> text </t> Paragraphs <c> Paragraph_Text <t> text <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Other_Details <t> text </t> Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text <i> Return the different descriptions for templates that have been used in a document. <s> SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> What are the template ids with template type description "Presentation". <s> SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  "Presentation" </s>
--SEPARATOR--
Paragraphs <c> Paragraph_Text <t> text <c> Document_ID <t> number <c> Paragraph_ID <t> number <c> Other_Details <t> text </t> Documents <c> Template_ID <t> number <c> Document_ID <t> number <c> Document_Description <t> text <c> Other_Details <t> text <c> Document_Name <t> text </t> Templates <c> Date_Effective_From <t> time <c> Template_ID <t> number <c> Template_Type_Code <t> text <c> Date_Effective_To <t> time <c> Template_Details <t> text <c> Version_Number <t> number </t> Ref_Template_Types <c> Template_Type_Description <t> text <c> Template_Type_Code <t> text <i> What are the template ids with template type description "Presentation". <s> SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  "Presentation" </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> Return the ids corresponding to templates with the description 'Presentation'. <s> SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  "Presentation" </s>
--SEPARATOR--
Documents <c> Template_ID <t> number <c> Document_ID <t> number <c> Other_Details <t> text <c> Document_Description <t> text <c> Document_Name <t> text </t> Paragraphs <c> Paragraph_Text <t> text <c> Paragraph_ID <t> number <c> Other_Details <t> text <c> Document_ID <t> number </t> Ref_Template_Types <c> Template_Type_Description <t> text <c> Template_Type_Code <t> text </t> Templates <c> Template_ID <t> number <c> Date_Effective_From <t> time <c> Template_Details <t> text <c> Date_Effective_To <t> time <c> Version_Number <t> number <c> Template_Type_Code <t> text <i> Return the ids corresponding to templates with the description 'Presentation'. <s> SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  "Presentation" </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> How many paragraphs in total? <s> SELECT count(*) FROM Paragraphs </s>
--SEPARATOR--
Templates <c> Template_Details <t> text <c> Version_Number <t> number <c> Template_ID <t> number <c> Template_Type_Code <t> text <c> Date_Effective_To <t> time <c> Date_Effective_From <t> time </t> Documents <c> Document_Description <t> text <c> Other_Details <t> text <c> Template_ID <t> number <c> Document_ID <t> number <c> Document_Name <t> text </t> Paragraphs <c> Paragraph_Text <t> text <c> Other_Details <t> text <c> Paragraph_ID <t> number <c> Document_ID <t> number </t> Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text <i> How many paragraphs in total? <s> SELECT count(*) FROM Paragraphs </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> Count the number of paragraphs. <s> SELECT count(*) FROM Paragraphs </s>
--SEPARATOR--
Documents <c> Other_Details <t> text <c> Document_Description <t> text <c> Document_Name <t> text <c> Document_ID <t> number <c> Template_ID <t> number </t> Templates <c> Template_Details <t> text <c> Date_Effective_To <t> time <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time </t> Paragraphs <c> Document_ID <t> number <c> Other_Details <t> text <c> Paragraph_ID <t> number <c> Paragraph_Text <t> text </t> Ref_Template_Types <c> Template_Type_Description <t> text <c> Template_Type_Code <t> text <i> Count the number of paragraphs. <s> SELECT count(*) FROM Paragraphs </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> How many paragraphs for the document with name 'Summer Show'? <s> SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show' </s>
--SEPARATOR--
Paragraphs <c> Other_Details <t> text <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text </t> Ref_Template_Types <c> Template_Type_Description <t> text <c> Template_Type_Code <t> text </t> Documents <c> Template_ID <t> number <c> Document_ID <t> number <c> Document_Description <t> text <c> Other_Details <t> text <c> Document_Name <t> text </t> Templates <c> Template_Details <t> text <c> Date_Effective_To <t> time <c> Date_Effective_From <t> time <c> Version_Number <t> number <c> Template_ID <t> number <c> Template_Type_Code <t> text <i> How many paragraphs for the document with name 'Summer Show'? <s> SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show' </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> Count the number of paragraphs in the document named 'Summer Show'. <s> SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show' </s>
--SEPARATOR--
Paragraphs <c> Other_Details <t> text <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Paragraph_ID <t> number </t> Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Documents <c> Document_Description <t> text <c> Document_Name <t> text <c> Template_ID <t> number <c> Document_ID <t> number <c> Other_Details <t> text </t> Templates <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Version_Number <t> number <c> Template_Details <t> text <c> Template_ID <t> number <i> Count the number of paragraphs in the document named 'Summer Show'. <s> SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show' </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> Show paragraph details for paragraph with text 'Korea ' . <s> select other_details from paragraphs where paragraph_text like 'korea' </s>
--SEPARATOR--
Documents <c> Document_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Template_ID <t> number <c> Other_Details <t> text </t> Ref_Template_Types <c> Template_Type_Description <t> text <c> Template_Type_Code <t> text </t> Paragraphs <c> Other_Details <t> text <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text </t> Templates <c> Date_Effective_From <t> time <c> Template_Details <t> text <c> Template_Type_Code <t> text <c> Version_Number <t> number <c> Date_Effective_To <t> time <c> Template_ID <t> number <i> Show paragraph details for paragraph with text 'Korea ' . <s> select other_details from paragraphs where paragraph_text like 'korea' </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> What are the details for the paragraph that includes the text 'Korea ' ? <s> select other_details from paragraphs where paragraph_text like 'korea' </s>
--SEPARATOR--
Paragraphs <c> Paragraph_Text <t> text <c> Document_ID <t> number <c> Other_Details <t> text <c> Paragraph_ID <t> number </t> Templates <c> Template_Details <t> text <c> Date_Effective_To <t> time <c> Date_Effective_From <t> time <c> Version_Number <t> number <c> Template_ID <t> number <c> Template_Type_Code <t> text </t> Documents <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text <c> Document_ID <t> number </t> Ref_Template_Types <c> Template_Type_Description <t> text <c> Template_Type_Code <t> text <i> What are the details for the paragraph that includes the text 'Korea ' ? <s> select other_details from paragraphs where paragraph_text like 'korea' </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> Show all paragraph ids and texts for the document with name 'Welcome to NY'. <s> SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY' </s>
--SEPARATOR--
Documents <c> Document_Description <t> text <c> Document_Name <t> text <c> Template_ID <t> number <c> Other_Details <t> text <c> Document_ID <t> number </t> Templates <c> Template_Details <t> text <c> Version_Number <t> number <c> Template_ID <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time </t> Ref_Template_Types <c> Template_Type_Description <t> text <c> Template_Type_Code <t> text </t> Paragraphs <c> Paragraph_Text <t> text <c> Document_ID <t> number <c> Paragraph_ID <t> number <c> Other_Details <t> text <i> Show all paragraph ids and texts for the document with name 'Welcome to NY'. <s> SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY' </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> What are the ids and texts of paragraphs in the document titled 'Welcome to NY'? <s> SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY' </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_Details <t> text <c> Date_Effective_From <t> time <c> Template_ID <t> number <c> Date_Effective_To <t> time <c> Version_Number <t> number <c> Template_Type_Code <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Paragraph_Text <t> text <c> Document_ID <t> number <c> Other_Details <t> text </t> Documents <c> Document_Name <t> text <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Description <t> text <c> Other_Details <t> text <i> What are the ids and texts of paragraphs in the document titled 'Welcome to NY'? <s> SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY' </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> Show all paragraph texts for the document "Customer reviews". <s> SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  "Customer reviews" </s>
--SEPARATOR--
Paragraphs <c> Other_Details <t> text <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Paragraph_ID <t> number </t> Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Documents <c> Document_Name <t> text <c> Document_Description <t> text <c> Template_ID <t> number <c> Document_ID <t> number <c> Other_Details <t> text </t> Templates <c> Template_Details <t> text <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_To <t> time <c> Date_Effective_From <t> time <i> Show all paragraph texts for the document "Customer reviews". <s> SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  "Customer reviews" </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> What are the paragraph texts for the document with the name 'Customer reviews'? <s> SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  "Customer reviews" </s>
--SEPARATOR--
Templates <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Template_ID <t> number <c> Date_Effective_To <t> time <c> Date_Effective_From <t> time <c> Template_Details <t> text </t> Ref_Template_Types <c> Template_Type_Description <t> text <c> Template_Type_Code <t> text </t> Paragraphs <c> Document_ID <t> number <c> Paragraph_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text </t> Documents <c> Other_Details <t> text <c> Template_ID <t> number <c> Document_Description <t> text <c> Document_ID <t> number <c> Document_Name <t> text <i> What are the paragraph texts for the document with the name 'Customer reviews'? <s> SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  "Customer reviews" </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> Show all document ids and the number of paragraphs in each document. Order by document id. <s> SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id </s>
--SEPARATOR--
Templates <c> Template_Details <t> text <c> Template_Type_Code <t> text <c> Template_ID <t> number <c> Date_Effective_From <t> time <c> Version_Number <t> number <c> Date_Effective_To <t> time </t> Documents <c> Document_Description <t> text <c> Document_Name <t> text <c> Template_ID <t> number <c> Document_ID <t> number <c> Other_Details <t> text </t> Paragraphs <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <c> Paragraph_ID <t> number </t> Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text <i> Show all document ids and the number of paragraphs in each document. Order by document id. <s> SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> Return the different document ids along with the number of paragraphs corresponding to each, ordered by id. <s> SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id </s>
--SEPARATOR--
Documents <c> Document_Description <t> text <c> Document_Name <t> text <c> Document_ID <t> number <c> Other_Details <t> text <c> Template_ID <t> number </t> Ref_Template_Types <c> Template_Type_Description <t> text <c> Template_Type_Code <t> text </t> Templates <c> Date_Effective_To <t> time <c> Template_Type_Code <t> text <c> Template_Details <t> text <c> Version_Number <t> number <c> Template_ID <t> number <c> Date_Effective_From <t> time </t> Paragraphs <c> Other_Details <t> text <c> Document_ID <t> number <c> Paragraph_ID <t> number <c> Paragraph_Text <t> text <i> Return the different document ids along with the number of paragraphs corresponding to each, ordered by id. <s> SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> Show all document ids, names and the number of paragraphs in each document. <s> SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id </s>
--SEPARATOR--
Documents <c> Template_ID <t> number <c> Document_Name <t> text <c> Other_Details <t> text <c> Document_Description <t> text <c> Document_ID <t> number </t> Paragraphs <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <c> Paragraph_ID <t> number </t> Ref_Template_Types <c> Template_Type_Description <t> text <c> Template_Type_Code <t> text </t> Templates <c> Date_Effective_To <t> time <c> Version_Number <t> number <c> Template_Details <t> text <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Template_ID <t> number <i> Show all document ids, names and the number of paragraphs in each document. <s> SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> What are the ids and names of each document, as well as the number of paragraphs in each? <s> SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id </s>
--SEPARATOR--
Paragraphs <c> Document_ID <t> number <c> Paragraph_ID <t> number <c> Other_Details <t> text <c> Paragraph_Text <t> text </t> Documents <c> Document_ID <t> number <c> Document_Description <t> text <c> Document_Name <t> text <c> Template_ID <t> number <c> Other_Details <t> text </t> Templates <c> Template_ID <t> number <c> Template_Details <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Type_Code <t> text <c> Version_Number <t> number </t> Ref_Template_Types <c> Template_Type_Description <t> text <c> Template_Type_Code <t> text <i> What are the ids and names of each document, as well as the number of paragraphs in each? <s> SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> List all document ids with at least two paragraphs. <s> SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2 </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Description <t> text <c> Template_Type_Code <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Other_Details <t> text <c> Paragraph_Text <t> text <c> Document_ID <t> number </t> Templates <c> Date_Effective_To <t> time <c> Date_Effective_From <t> time <c> Template_Type_Code <t> text <c> Version_Number <t> number <c> Template_Details <t> text <c> Template_ID <t> number </t> Documents <c> Document_Name <t> text <c> Template_ID <t> number <c> Document_Description <t> text <c> Document_ID <t> number <c> Other_Details <t> text <i> List all document ids with at least two paragraphs. <s> SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2 </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> What are the ids of documents that have 2 or more paragraphs? <s> SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2 </s>
--SEPARATOR--
Paragraphs <c> Document_ID <t> number <c> Other_Details <t> text <c> Paragraph_Text <t> text <c> Paragraph_ID <t> number </t> Documents <c> Other_Details <t> text <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_ID <t> number <c> Document_Description <t> text </t> Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Version_Number <t> number <c> Date_Effective_From <t> time <c> Template_Type_Code <t> text <c> Date_Effective_To <t> time <c> Template_Details <t> text <c> Template_ID <t> number <i> What are the ids of documents that have 2 or more paragraphs? <s> SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2 </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> What is the document id and name with greatest number of paragraphs? <s> SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Description <t> text <c> Template_Type_Code <t> text </t> Documents <c> Document_Description <t> text <c> Template_ID <t> number <c> Document_ID <t> number <c> Document_Name <t> text <c> Other_Details <t> text </t> Templates <c> Template_Details <t> text <c> Date_Effective_To <t> time <c> Template_Type_Code <t> text <c> Version_Number <t> number <c> Date_Effective_From <t> time <c> Template_ID <t> number </t> Paragraphs <c> Document_ID <t> number <c> Paragraph_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> What is the document id and name with greatest number of paragraphs? <s> SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> Return the id and name of the document with the most paragraphs. <s> SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Templates <c> Template_Type_Code <t> text <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Details <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time </t> Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Paragraphs <c> Paragraph_Text <t> text <c> Document_ID <t> number <c> Other_Details <t> text <c> Paragraph_ID <t> number </t> Documents <c> Document_ID <t> number <c> Other_Details <t> text <c> Template_ID <t> number <c> Document_Description <t> text <c> Document_Name <t> text <i> Return the id and name of the document with the most paragraphs. <s> SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> What is the document id with least number of paragraphs? <s> SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1 </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Documents <c> Template_ID <t> number <c> Document_Description <t> text <c> Document_ID <t> number <c> Other_Details <t> text <c> Document_Name <t> text </t> Templates <c> Version_Number <t> number <c> Template_ID <t> number <c> Date_Effective_From <t> time <c> Template_Type_Code <t> text <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Paragraphs <c> Paragraph_Text <t> text <c> Document_ID <t> number <c> Other_Details <t> text <c> Paragraph_ID <t> number <i> What is the document id with least number of paragraphs? <s> SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1 </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> Return the id of the document with the fewest paragraphs. <s> SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1 </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Description <t> text <c> Template_Type_Code <t> text </t> Templates <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Template_ID <t> number <c> Date_Effective_To <t> time <c> Version_Number <t> number <c> Template_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text </t> Documents <c> Document_Description <t> text <c> Other_Details <t> text <c> Document_Name <t> text <c> Document_ID <t> number <c> Template_ID <t> number <i> Return the id of the document with the fewest paragraphs. <s> SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1 </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> What is the document id with 1 to 2 paragraphs? <s> SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2 </s>
--SEPARATOR--
Templates <c> Date_Effective_To <t> time <c> Template_ID <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Version_Number <t> number <c> Template_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Other_Details <t> text <c> Paragraph_Text <t> text <c> Document_ID <t> number </t> Documents <c> Other_Details <t> text <c> Template_ID <t> number <c> Document_Description <t> text <c> Document_Name <t> text <c> Document_ID <t> number </t> Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text <i> What is the document id with 1 to 2 paragraphs? <s> SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2 </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> Give the ids of documents that have between one and two paragraphs. <s> SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2 </s>
--SEPARATOR--
Paragraphs <c> Document_ID <t> number <c> Paragraph_ID <t> number <c> Other_Details <t> text <c> Paragraph_Text <t> text </t> Templates <c> Date_Effective_From <t> time <c> Template_ID <t> number <c> Template_Details <t> text <c> Template_Type_Code <t> text <c> Date_Effective_To <t> time <c> Version_Number <t> number </t> Documents <c> Other_Details <t> text <c> Document_Name <t> text <c> Template_ID <t> number <c> Document_ID <t> number <c> Document_Description <t> text </t> Ref_Template_Types <c> Template_Type_Description <t> text <c> Template_Type_Code <t> text <i> Give the ids of documents that have between one and two paragraphs. <s> SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2 </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> Show the document id with paragraph text 'Brazil' and 'Ireland'. <s> SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland' </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Documents <c> Template_ID <t> number <c> Other_Details <t> text <c> Document_Name <t> text <c> Document_ID <t> number <c> Document_Description <t> text </t> Templates <c> Date_Effective_From <t> time <c> Template_Details <t> text <c> Template_Type_Code <t> text <c> Template_ID <t> number <c> Version_Number <t> number <c> Date_Effective_To <t> time </t> Paragraphs <c> Paragraph_Text <t> text <c> Document_ID <t> number <c> Paragraph_ID <t> number <c> Other_Details <t> text <i> Show the document id with paragraph text 'Brazil' and 'Ireland'. <s> SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland' </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Template_ID <t> number <c> Version_Number <t> number <c> Template_Type_Code <t> text <c> Date_Effective_From <t> time <c> Date_Effective_To <t> time <c> Template_Details <t> text </t> Documents <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Name <t> text <c> Document_Description <t> text <c> Other_Details <t> text </t> Paragraphs <c> Paragraph_ID <t> number <c> Document_ID <t> number <c> Paragraph_Text <t> text <c> Other_Details <t> text <i> What are the ids of documents that contain the paragraph text 'Brazil' and 'Ireland'? <s> SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland' </s>
--SEPARATOR--
Ref_Template_Types <c> Template_Type_Code <t> text <c> Template_Type_Description <t> text </t> Templates <c> Version_Number <t> number <c> Date_Effective_From <t> time <c> Template_Details <t> text <c> Date_Effective_To <t> time <c> Template_ID <t> number <c> Template_Type_Code <t> text </t> Paragraphs <c> Paragraph_Text <t> text <c> Other_Details <t> text <c> Paragraph_ID <t> number <c> Document_ID <t> number </t> Documents <c> Document_Name <t> text <c> Other_Details <t> text <c> Document_ID <t> number <c> Template_ID <t> number <c> Document_Description <t> text <i> What are the ids of documents that contain the paragraph text 'Brazil' and 'Ireland'? <s> SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland' </s>
--SEPARATOR--
course <c> Course_ID <t> number <c> Staring_Date <t> text <c> Course <t> text </t> teacher <c> Teacher_ID <t> number <c> Name <t> text <c> Age <t> text <c> Hometown <t> text </t> course_arrange <c> Course_ID <t> number <c> Teacher_ID <t> number <c> Grade <t> number <i> How many teachers are there? <s> SELECT count(*) FROM teacher </s>
--SEPARATOR--
course <c> Course_ID <t> number <c> Course <t> text <c> Staring_Date <t> text </t> teacher <c> Name <t> text <c> Age <t> text <c> Hometown <t> text <c> Teacher_ID <t> number </t> course_arrange <c> Course_ID <t> number <c> Grade <t> number <c> Teacher_ID <t> number <i> How many teachers are there? <s> SELECT count(*) FROM teacher </s>
--SEPARATOR--
course <c> Course_ID <t> number <c> Staring_Date <t> text <c> Course <t> text </t> teacher <c> Teacher_ID <t> number <c> Name <t> text <c> Age <t> text <c> Hometown <t> text </t> course_arrange <c> Course_ID <t> number <c> Teacher_ID <t> number <c> Grade <t> number <i> What is the total count of teachers? <s> SELECT count(*) FROM teacher </s>
--SEPARATOR--
course_arrange <c> Course_ID <t> number <c> Grade <t> number <c> Teacher_ID <t> number </t> course <c> Staring_Date <t> text <c> Course_ID <t> number <c> Course <t> text </t> teacher <c> Age <t> text <c> Name <t> text <c> Teacher_ID <t> number <c> Hometown <t> text <i> What is the total count of teachers? <s> SELECT count(*) FROM teacher </s>
--SEPARATOR--
course <c> Course_ID <t> number <c> Staring_Date <t> text <c> Course <t> text </t> teacher <c> Teacher_ID <t> number <c> Name <t> text <c> Age <t> text <c> Hometown <t> text </t> course_arrange <c> Course_ID <t> number <c> Teacher_ID <t> number <c> Grade <t> number <i> List the names of teachers in ascending order of age. <s> SELECT Name FROM teacher ORDER BY Age ASC </s>
--SEPARATOR--
course <c> Staring_Date <t> text <c> Course_ID <t> number <c> Course <t> text </t> course_arrange <c> Course_ID <t> number <c> Teacher_ID <t> number <c> Grade <t> number </t> teacher <c> Teacher_ID <t> number <c> Name <t> text <c> Hometown <t> text <c> Age <t> text <i> List the names of teachers in ascending order of age. <s> SELECT Name FROM teacher ORDER BY Age ASC </s>
--SEPARATOR--
course <c> Course_ID <t> number <c> Staring_Date <t> text <c> Course <t> text </t> teacher <c> Teacher_ID <t> number <c> Name <t> text <c> Age <t> text <c> Hometown <t> text </t> course_arrange <c> Course_ID <t> number <c> Teacher_ID <t> number <c> Grade <t> number <i> What are the names of the teachers ordered by ascending age? <s> SELECT Name FROM teacher ORDER BY Age ASC </s>
--SEPARATOR--
course <c> Course_ID <t> number <c> Course <t> text <c> Staring_Date <t> text </t> course_arrange <c> Course_ID <t> number <c> Grade <t> number <c> Teacher_ID <t> number </t> teacher <c> Age <t> text <c> Name <t> text <c> Teacher_ID <t> number <c> Hometown <t> text <i> What are the names of the teachers ordered by ascending age? <s> SELECT Name FROM teacher ORDER BY Age ASC </s>
--SEPARATOR--
course <c> Course_ID <t> number <c> Staring_Date <t> text <c> Course <t> text </t> teacher <c> Teacher_ID <t> number <c> Name <t> text <c> Age <t> text <c> Hometown <t> text </t> course_arrange <c> Course_ID <t> number <c> Teacher_ID <t> number <c> Grade <t> number <i> What are the age and hometown of teachers? <s> SELECT Age ,  Hometown FROM teacher </s>
--SEPARATOR--
course_arrange <c> Grade <t> number <c> Course_ID <t> number <c> Teacher_ID <t> number </t> course <c> Course_ID <t> number <c> Staring_Date <t> text <c> Course <t> text </t> teacher <c> Teacher_ID <t> number <c> Age <t> text <c> Hometown <t> text <c> Name <t> text <i> What are the age and hometown of teachers? <s> SELECT Age ,  Hometown FROM teacher </s>
--SEPARATOR--
course <c> Course_ID <t> number <c> Staring_Date <t> text <c> Course <t> text </t> teacher <c> Teacher_ID <t> number <c> Name <t> text <c> Age <t> text <c> Hometown <t> text </t> course_arrange <c> Course_ID <t> number <c> Teacher_ID <t> number <c> Grade <t> number <i> What is the age and hometown of every teacher? <s> SELECT Age ,  Hometown FROM teacher </s>
--SEPARATOR--
teacher <c> Age <t> text <c> Name <t> text <c> Teacher_ID <t> number <c> Hometown <t> text </t> course_arrange <c> Teacher_ID <t> number <c> Course_ID <t> number <c> Grade <t> number </t> course <c> Course_ID <t> number <c> Staring_Date <t> text <c> Course <t> text <i> What is the age and hometown of every teacher? <s> SELECT Age ,  Hometown FROM teacher </s>
--SEPARATOR--
course <c> Course_ID <t> number <c> Staring_Date <t> text <c> Course <t> text </t> teacher <c> Teacher_ID <t> number <c> Name <t> text <c> Age <t> text <c> Hometown <t> text </t> course_arrange <c> Course_ID <t> number <c> Teacher_ID <t> number <c> Grade <t> number <i> List the name of teachers whose hometown is not `` Little Lever Urban District '' . <s> select name from teacher where hometown != "little lever urban district" </s>
--SEPARATOR--
teacher <c> Age <t> text <c> Name <t> text <c> Teacher_ID <t> number <c> Hometown <t> text </t> course_arrange <c> Grade <t> number <c> Course_ID <t> number <c> Teacher_ID <t> number </t> course <c> Course_ID <t> number <c> Staring_Date <t> text <c> Course <t> text <i> List the name of teachers whose hometown is not `` Little Lever Urban District '' . <s> select name from teacher where hometown != "little lever urban district" </s>
--SEPARATOR--
course <c> Course_ID <t> number <c> Staring_Date <t> text <c> Course <t> text </t> teacher <c> Teacher_ID <t> number <c> Name <t> text <c> Age <t> text <c> Hometown <t> text </t> course_arrange <c> Course_ID <t> number <c> Teacher_ID <t> number <c> Grade <t> number <i> What are the names of the teachers whose hometown is not `` Little Lever Urban District '' ? <s> select name from teacher where hometown != "little lever urban district" </s>
--SEPARATOR--
course_arrange <c> Course_ID <t> number <c> Teacher_ID <t> number <c> Grade <t> number </t> teacher <c> Teacher_ID <t> number <c> Name <t> text <c> Hometown <t> text <c> Age <t> text </t> course <c> Staring_Date <t> text <c> Course <t> text <c> Course_ID <t> number <i> What are the names of the teachers whose hometown is not `` Little Lever Urban District '' ? <s> select name from teacher where hometown != "little lever urban district" </s>
--SEPARATOR--
course <c> Course_ID <t> number <c> Staring_Date <t> text <c> Course <t> text </t> teacher <c> Teacher_ID <t> number <c> Name <t> text <c> Age <t> text <c> Hometown <t> text </t> course_arrange <c> Course_ID <t> number <c> Teacher_ID <t> number <c> Grade <t> number <i> Show the name of teachers aged either 32 or 33? <s> SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33 </s>
--SEPARATOR--
teacher <c> Hometown <t> text <c> Age <t> text <c> Name <t> text <c> Teacher_ID <t> number </t> course_arrange <c> Teacher_ID <t> number <c> Course_ID <t> number <c> Grade <t> number </t> course <c> Course <t> text <c> Course_ID <t> number <c> Staring_Date <t> text <i> Show the name of teachers aged either 32 or 33? <s> SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33 </s>
--SEPARATOR--
course <c> Course_ID <t> number <c> Staring_Date <t> text <c> Course <t> text </t> teacher <c> Teacher_ID <t> number <c> Name <t> text <c> Age <t> text <c> Hometown <t> text </t> course_arrange <c> Course_ID <t> number <c> Teacher_ID <t> number <c> Grade <t> number <i> What are the names of the teachers who are aged either 32 or 33? <s> SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33 </s>
--SEPARATOR--
teacher <c> Age <t> text <c> Teacher_ID <t> number <c> Hometown <t> text <c> Name <t> text </t> course_arrange <c> Grade <t> number <c> Course_ID <t> number <c> Teacher_ID <t> number </t> course <c> Course <t> text <c> Staring_Date <t> text <c> Course_ID <t> number <i> What are the names of the teachers who are aged either 32 or 33? <s> SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33 </s>
--SEPARATOR--
course <c> Course_ID <t> number <c> Staring_Date <t> text <c> Course <t> text </t> teacher <c> Teacher_ID <t> number <c> Name <t> text <c> Age <t> text <c> Hometown <t> text </t> course_arrange <c> Course_ID <t> number <c> Teacher_ID <t> number <c> Grade <t> number <i> What is the hometown of the youngest teacher? <s> SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1 </s>
--SEPARATOR--
course_arrange <c> Course_ID <t> number <c> Grade <t> number <c> Teacher_ID <t> number </t> course <c> Staring_Date <t> text <c> Course <t> text <c> Course_ID <t> number </t> teacher <c> Hometown <t> text <c> Age <t> text <c> Name <t> text <c> Teacher_ID <t> number <i> What is the hometown of the youngest teacher? <s> SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1 </s>
--SEPARATOR--
course <c> Course_ID <t> number <c> Staring_Date <t> text <c> Course <t> text </t> teacher <c> Teacher_ID <t> number <c> Name <t> text <c> Age <t> text <c> Hometown <t> text </t> course_arrange <c> Course_ID <t> number <c> Teacher_ID <t> number <c> Grade <t> number <i> Where is the youngest teacher from? <s> SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1 </s>
--SEPARATOR--
course <c> Staring_Date <t> text <c> Course_ID <t> number <c> Course <t> text </t> teacher <c> Name <t> text <c> Hometown <t> text <c> Age <t> text <c> Teacher_ID <t> number </t> course_arrange <c> Teacher_ID <t> number <c> Grade <t> number <c> Course_ID <t> number <i> Where is the youngest teacher from? <s> SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1 </s>
--SEPARATOR--
course <c> Course_ID <t> number <c> Staring_Date <t> text <c> Course <t> text </t> teacher <c> Teacher_ID <t> number <c> Name <t> text <c> Age <t> text <c> Hometown <t> text </t> course_arrange <c> Course_ID <t> number <c> Teacher_ID <t> number <c> Grade <t> number <i> Show different hometown of teachers and the number of teachers from each hometown. <s> SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown </s>
--SEPARATOR--
course_arrange <c> Grade <t> number <c> Course_ID <t> number <c> Teacher_ID <t> number </t> teacher <c> Teacher_ID <t> number <c> Hometown <t> text <c> Name <t> text <c> Age <t> text </t> course <c> Course_ID <t> number <c> Course <t> text <c> Staring_Date <t> text <i> Show different hometown of teachers and the number of teachers from each hometown. <s> SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown </s>
--SEPARATOR--
course <c> Course_ID <t> number <c> Staring_Date <t> text <c> Course <t> text </t> teacher <c> Teacher_ID <t> number <c> Name <t> text <c> Age <t> text <c> Hometown <t> text </t> course_arrange <c> Course_ID <t> number <c> Teacher_ID <t> number <c> Grade <t> number <i> For each hometown, how many teachers are there? <s> SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown </s>
--SEPARATOR--
teacher <c> Age <t> text <c> Hometown <t> text <c> Name <t> text <c> Teacher_ID <t> number </t> course_arrange <c> Course_ID <t> number <c> Teacher_ID <t> number <c> Grade <t> number </t> course <c> Course <t> text <c> Course_ID <t> number <c> Staring_Date <t> text <i> For each hometown, how many teachers are there? <s> SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown </s>
--SEPARATOR--
course <c> Course_ID <t> number <c> Staring_Date <t> text <c> Course <t> text </t> teacher <c> Teacher_ID <t> number <c> Name <t> text <c> Age <t> text <c> Hometown <t> text </t> course_arrange <c> Course_ID <t> number <c> Teacher_ID <t> number <c> Grade <t> number <i> List the most common hometown of teachers. <s> SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1 </s>
--SEPARATOR--
course <c> Course_ID <t> number <c> Course <t> text <c> Staring_Date <t> text </t> course_arrange <c> Course_ID <t> number <c> Grade <t> number <c> Teacher_ID <t> number </t> teacher <c> Name <t> text <c> Age <t> text <c> Hometown <t> text <c> Teacher_ID <t> number <i> List the most common hometown of teachers. <s> SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1 </s>
--SEPARATOR--
course <c> Course_ID <t> number <c> Staring_Date <t> text <c> Course <t> text </t> teacher <c> Teacher_ID <t> number <c> Name <t> text <c> Age <t> text <c> Hometown <t> text </t> course_arrange <c> Course_ID <t> number <c> Teacher_ID <t> number <c> Grade <t> number <i> What is the most commmon hometowns for teachers? <s> SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1 </s>
--SEPARATOR--
teacher <c> Teacher_ID <t> number <c> Age <t> text <c> Name <t> text <c> Hometown <t> text </t> course_arrange <c> Course_ID <t> number <c> Teacher_ID <t> number <c> Grade <t> number </t> course <c> Course <t> text <c> Staring_Date <t> text <c> Course_ID <t> number <i> What is the most commmon hometowns for teachers? <s> SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1 </s>
--SEPARATOR--
course <c> Course_ID <t> number <c> Staring_Date <t> text <c> Course <t> text </t> teacher <c> Teacher_ID <t> number <c> Name <t> text <c> Age <t> text <c> Hometown <t> text </t> course_arrange <c> Course_ID <t> number <c> Teacher_ID <t> number <c> Grade <t> number <i> Show the hometowns shared by at least two teachers. <s> SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2 </s>
--SEPARATOR--
teacher <c> Teacher_ID <t> number <c> Name <t> text <c> Hometown <t> text <c> Age <t> text </t> course <c> Course <t> text <c> Course_ID <t> number <c> Staring_Date <t> text </t> course_arrange <c> Course_ID <t> number <c> Grade <t> number <c> Teacher_ID <t> number <i> Show the hometowns shared by at least two teachers. <s> SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2 </s>
--SEPARATOR--
course <c> Course_ID <t> number <c> Staring_Date <t> text <c> Course <t> text </t> teacher <c> Teacher_ID <t> number <c> Name <t> text <c> Age <t> text <c> Hometown <t> text </t> course_arrange <c> Course_ID <t> number <c> Teacher_ID <t> number <c> Grade <t> number <i> What are the towns from which at least two teachers come from? <s> SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2 </s>
--SEPARATOR--
course_arrange <c> Grade <t> number <c> Course_ID <t> number <c> Teacher_ID <t> number </t> course <c> Course <t> text <c> Staring_Date <t> text <c> Course_ID <t> number </t> teacher <c> Name <t> text <c> Teacher_ID <t> number <c> Hometown <t> text <c> Age <t> text <i> What are the towns from which at least two teachers come from? <s> SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2 </s>
--SEPARATOR--
course <c> Course_ID <t> number <c> Staring_Date <t> text <c> Course <t> text </t> teacher <c> Teacher_ID <t> number <c> Name <t> text <c> Age <t> text <c> Hometown <t> text </t> course_arrange <c> Course_ID <t> number <c> Teacher_ID <t> number <c> Grade <t> number <i> Show names of teachers and the courses they are arranged to teach. <s> SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID </s>
--SEPARATOR--
teacher <c> Name <t> text <c> Age <t> text <c> Hometown <t> text <c> Teacher_ID <t> number </t> course_arrange <c> Teacher_ID <t> number <c> Course_ID <t> number <c> Grade <t> number </t> course <c> Course <t> text <c> Course_ID <t> number <c> Staring_Date <t> text <i> Show names of teachers and the courses they are arranged to teach. <s> SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID </s>
--SEPARATOR--
course <c> Course_ID <t> number <c> Staring_Date <t> text <c> Course <t> text </t> teacher <c> Teacher_ID <t> number <c> Name <t> text <c> Age <t> text <c> Hometown <t> text </t> course_arrange <c> Course_ID <t> number <c> Teacher_ID <t> number <c> Grade <t> number <i> What is the name of each teacher and what course they teach? <s> SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID </s>
--SEPARATOR--
course <c> Staring_Date <t> text <c> Course_ID <t> number <c> Course <t> text </t> teacher <c> Age <t> text <c> Hometown <t> text <c> Name <t> text <c> Teacher_ID <t> number </t> course_arrange <c> Course_ID <t> number <c> Teacher_ID <t> number <c> Grade <t> number <i> What is the name of each teacher and what course they teach? <s> SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID </s>
--SEPARATOR--
course <c> Course_ID <t> number <c> Staring_Date <t> text <c> Course <t> text </t> teacher <c> Teacher_ID <t> number <c> Name <t> text <c> Age <t> text <c> Hometown <t> text </t> course_arrange <c> Course_ID <t> number <c> Teacher_ID <t> number <c> Grade <t> number <i> Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name. <s> SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name </s>
--SEPARATOR--
teacher <c> Name <t> text <c> Hometown <t> text <c> Age <t> text <c> Teacher_ID <t> number </t> course_arrange <c> Teacher_ID <t> number <c> Grade <t> number <c> Course_ID <t> number </t> course <c> Course <t> text <c> Staring_Date <t> text <c> Course_ID <t> number <i> Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name. <s> SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name </s>
--SEPARATOR--
course <c> Course_ID <t> number <c> Staring_Date <t> text <c> Course <t> text </t> teacher <c> Teacher_ID <t> number <c> Name <t> text <c> Age <t> text <c> Hometown <t> text </t> course_arrange <c> Course_ID <t> number <c> Teacher_ID <t> number <c> Grade <t> number <i> What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher? <s> SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name </s>
--SEPARATOR--
course_arrange <c> Teacher_ID <t> number <c> Grade <t> number <c> Course_ID <t> number </t> teacher <c> Hometown <t> text <c> Age <t> text <c> Name <t> text <c> Teacher_ID <t> number </t> course <c> Staring_Date <t> text <c> Course_ID <t> number <c> Course <t> text <i> What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher? <s> SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name </s>
--SEPARATOR--
course <c> Course_ID <t> number <c> Staring_Date <t> text <c> Course <t> text </t> teacher <c> Teacher_ID <t> number <c> Name <t> text <c> Age <t> text <c> Hometown <t> text </t> course_arrange <c> Course_ID <t> number <c> Teacher_ID <t> number <c> Grade <t> number <i> Show the name of the teacher for the math course. <s> SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  "Math" </s>
--SEPARATOR--
course <c> Staring_Date <t> text <c> Course_ID <t> number <c> Course <t> text </t> course_arrange <c> Grade <t> number <c> Course_ID <t> number <c> Teacher_ID <t> number </t> teacher <c> Name <t> text <c> Age <t> text <c> Teacher_ID <t> number <c> Hometown <t> text <i> Show the name of the teacher for the math course. <s> SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  "Math" </s>
--SEPARATOR--
course <c> Course_ID <t> number <c> Staring_Date <t> text <c> Course <t> text </t> teacher <c> Teacher_ID <t> number <c> Name <t> text <c> Age <t> text <c> Hometown <t> text </t> course_arrange <c> Course_ID <t> number <c> Teacher_ID <t> number <c> Grade <t> number <i> What are the names of the people who teach math courses? <s> SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  "Math" </s>
--SEPARATOR--
course <c> Course <t> text <c> Course_ID <t> number <c> Staring_Date <t> text </t> course_arrange <c> Teacher_ID <t> number <c> Course_ID <t> number <c> Grade <t> number </t> teacher <c> Name <t> text <c> Age <t> text <c> Hometown <t> text <c> Teacher_ID <t> number <i> What are the names of the people who teach math courses? <s> SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  "Math" </s>
--SEPARATOR--
course <c> Course_ID <t> number <c> Staring_Date <t> text <c> Course <t> text </t> teacher <c> Teacher_ID <t> number <c> Name <t> text <c> Age <t> text <c> Hometown <t> text </t> course_arrange <c> Course_ID <t> number <c> Teacher_ID <t> number <c> Grade <t> number <i> Show names of teachers and the number of courses they teach. <s> SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name </s>
--SEPARATOR--
teacher <c> Name <t> text <c> Age <t> text <c> Teacher_ID <t> number <c> Hometown <t> text </t> course_arrange <c> Teacher_ID <t> number <c> Grade <t> number <c> Course_ID <t> number </t> course <c> Course_ID <t> number <c> Course <t> text <c> Staring_Date <t> text <i> Show names of teachers and the number of courses they teach. <s> SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name </s>
--SEPARATOR--
course <c> Course_ID <t> number <c> Staring_Date <t> text <c> Course <t> text </t> teacher <c> Teacher_ID <t> number <c> Name <t> text <c> Age <t> text <c> Hometown <t> text </t> course_arrange <c> Course_ID <t> number <c> Teacher_ID <t> number <c> Grade <t> number <i> What are the names of the teachers and how many courses do they teach? <s> SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name </s>
--SEPARATOR--
course_arrange <c> Course_ID <t> number <c> Teacher_ID <t> number <c> Grade <t> number </t> course <c> Staring_Date <t> text <c> Course <t> text <c> Course_ID <t> number </t> teacher <c> Teacher_ID <t> number <c> Name <t> text <c> Age <t> text <c> Hometown <t> text <i> What are the names of the teachers and how many courses do they teach? <s> SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name </s>
--SEPARATOR--
course <c> Course_ID <t> number <c> Staring_Date <t> text <c> Course <t> text </t> teacher <c> Teacher_ID <t> number <c> Name <t> text <c> Age <t> text <c> Hometown <t> text </t> course_arrange <c> Course_ID <t> number <c> Teacher_ID <t> number <c> Grade <t> number <i> Show names of teachers that teach at least two courses. <s> SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2 </s>
--SEPARATOR--
course_arrange <c> Grade <t> number <c> Teacher_ID <t> number <c> Course_ID <t> number </t> course <c> Course_ID <t> number <c> Course <t> text <c> Staring_Date <t> text </t> teacher <c> Age <t> text <c> Hometown <t> text <c> Name <t> text <c> Teacher_ID <t> number <i> Show names of teachers that teach at least two courses. <s> SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2 </s>
--SEPARATOR--
course <c> Course_ID <t> number <c> Staring_Date <t> text <c> Course <t> text </t> teacher <c> Teacher_ID <t> number <c> Name <t> text <c> Age <t> text <c> Hometown <t> text </t> course_arrange <c> Course_ID <t> number <c> Teacher_ID <t> number <c> Grade <t> number <i> What are the names of the teachers who teach at least two courses? <s> SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2 </s>
--SEPARATOR--
course_arrange <c> Course_ID <t> number <c> Teacher_ID <t> number <c> Grade <t> number </t> teacher <c> Teacher_ID <t> number <c> Hometown <t> text <c> Name <t> text <c> Age <t> text </t> course <c> Course <t> text <c> Staring_Date <t> text <c> Course_ID <t> number <i> What are the names of the teachers who teach at least two courses? <s> SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2 </s>
--SEPARATOR--
course <c> Course_ID <t> number <c> Staring_Date <t> text <c> Course <t> text </t> teacher <c> Teacher_ID <t> number <c> Name <t> text <c> Age <t> text <c> Hometown <t> text </t> course_arrange <c> Course_ID <t> number <c> Teacher_ID <t> number <c> Grade <t> number <i> List the names of teachers who have not been arranged to teach courses. <s> SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange) </s>
--SEPARATOR--
teacher <c> Teacher_ID <t> number <c> Hometown <t> text <c> Name <t> text <c> Age <t> text </t> course_arrange <c> Course_ID <t> number <c> Teacher_ID <t> number <c> Grade <t> number </t> course <c> Staring_Date <t> text <c> Course_ID <t> number <c> Course <t> text <i> List the names of teachers who have not been arranged to teach courses. <s> SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange) </s>
--SEPARATOR--
course <c> Course_ID <t> number <c> Staring_Date <t> text <c> Course <t> text </t> teacher <c> Teacher_ID <t> number <c> Name <t> text <c> Age <t> text <c> Hometown <t> text </t> course_arrange <c> Course_ID <t> number <c> Teacher_ID <t> number <c> Grade <t> number <i> What are the names of the teachers whose courses have not been arranged? <s> SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange) </s>
--SEPARATOR--
course_arrange <c> Course_ID <t> number <c> Teacher_ID <t> number <c> Grade <t> number </t> course <c> Course_ID <t> number <c> Course <t> text <c> Staring_Date <t> text </t> teacher <c> Age <t> text <c> Teacher_ID <t> number <c> Hometown <t> text <c> Name <t> text <i> What are the names of the teachers whose courses have not been arranged? <s> SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange) </s>
--SEPARATOR--
museum <c> Museum_ID <t> number <c> Name <t> text <c> Num_of_Staff <t> number <c> Open_Year <t> text </t> visitor <c> ID <t> number <c> Name <t> text <c> Level_of_membership <t> number <c> Age <t> number </t> visit <c> Museum_ID <t> number <c> visitor_ID <t> text <c> Num_of_Ticket <t> number <c> Total_spent <t> number <i> How many visitors below age 30 are there? <s> SELECT count(*) FROM visitor WHERE age  <  30 </s>
--SEPARATOR--
visit <c> Total_spent <t> number <c> Num_of_Ticket <t> number <c> visitor_ID <t> text <c> Museum_ID <t> number </t> museum <c> Museum_ID <t> number <c> Open_Year <t> text <c> Num_of_Staff <t> number <c> Name <t> text </t> visitor <c> Name <t> text <c> Age <t> number <c> Level_of_membership <t> number <c> ID <t> number <i> How many visitors below age 30 are there? <s> SELECT count(*) FROM visitor WHERE age  <  30 </s>
--SEPARATOR--
museum <c> Museum_ID <t> number <c> Name <t> text <c> Num_of_Staff <t> number <c> Open_Year <t> text </t> visitor <c> ID <t> number <c> Name <t> text <c> Level_of_membership <t> number <c> Age <t> number </t> visit <c> Museum_ID <t> number <c> visitor_ID <t> text <c> Num_of_Ticket <t> number <c> Total_spent <t> number <i> Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low. <s> SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC </s>
--SEPARATOR--
visit <c> visitor_ID <t> text <c> Total_spent <t> number <c> Museum_ID <t> number <c> Num_of_Ticket <t> number </t> museum <c> Open_Year <t> text <c> Name <t> text <c> Num_of_Staff <t> number <c> Museum_ID <t> number </t> visitor <c> ID <t> number <c> Name <t> text <c> Level_of_membership <t> number <c> Age <t> number <i> Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low. <s> SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC </s>
--SEPARATOR--
museum <c> Museum_ID <t> number <c> Name <t> text <c> Num_of_Staff <t> number <c> Open_Year <t> text </t> visitor <c> ID <t> number <c> Name <t> text <c> Level_of_membership <t> number <c> Age <t> number </t> visit <c> Museum_ID <t> number <c> visitor_ID <t> text <c> Num_of_Ticket <t> number <c> Total_spent <t> number <i> What is the average age of the visitors whose membership level is not higher than 4? <s> SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4 </s>
--SEPARATOR--
visitor <c> Level_of_membership <t> number <c> Name <t> text <c> Age <t> number <c> ID <t> number </t> visit <c> Num_of_Ticket <t> number <c> visitor_ID <t> text <c> Total_spent <t> number <c> Museum_ID <t> number </t> museum <c> Open_Year <t> text <c> Name <t> text <c> Museum_ID <t> number <c> Num_of_Staff <t> number <i> What is the average age of the visitors whose membership level is not higher than 4? <s> SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4 </s>
--SEPARATOR--
museum <c> Museum_ID <t> number <c> Name <t> text <c> Num_of_Staff <t> number <c> Open_Year <t> text </t> visitor <c> ID <t> number <c> Name <t> text <c> Level_of_membership <t> number <c> Age <t> number </t> visit <c> Museum_ID <t> number <c> visitor_ID <t> text <c> Num_of_Ticket <t> number <c> Total_spent <t> number <i> Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young. <s> SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC </s>
--SEPARATOR--
museum <c> Name <t> text <c> Num_of_Staff <t> number <c> Museum_ID <t> number <c> Open_Year <t> text </t> visitor <c> Age <t> number <c> Name <t> text <c> Level_of_membership <t> number <c> ID <t> number </t> visit <c> Museum_ID <t> number <c> Total_spent <t> number <c> Num_of_Ticket <t> number <c> visitor_ID <t> text <i> Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young. <s> SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC </s>
--SEPARATOR--
museum <c> Museum_ID <t> number <c> Name <t> text <c> Num_of_Staff <t> number <c> Open_Year <t> text </t> visitor <c> ID <t> number <c> Name <t> text <c> Level_of_membership <t> number <c> Age <t> number </t> visit <c> Museum_ID <t> number <c> visitor_ID <t> text <c> Num_of_Ticket <t> number <c> Total_spent <t> number <i> Find the id and name of the museum that has the most staff members? <s> SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1 </s>
--SEPARATOR--
visit <c> visitor_ID <t> text <c> Total_spent <t> number <c> Num_of_Ticket <t> number <c> Museum_ID <t> number </t> museum <c> Museum_ID <t> number <c> Num_of_Staff <t> number <c> Open_Year <t> text <c> Name <t> text </t> visitor <c> ID <t> number <c> Name <t> text <c> Age <t> number <c> Level_of_membership <t> number <i> Find the id and name of the museum that has the most staff members? <s> SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1 </s>
--SEPARATOR--
museum <c> Museum_ID <t> number <c> Name <t> text <c> Num_of_Staff <t> number <c> Open_Year <t> text </t> visitor <c> ID <t> number <c> Name <t> text <c> Level_of_membership <t> number <c> Age <t> number </t> visit <c> Museum_ID <t> number <c> visitor_ID <t> text <c> Num_of_Ticket <t> number <c> Total_spent <t> number <i> Find the average number of staff working for the museums that were open before 2009. <s> SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009 </s>
--SEPARATOR--
visit <c> Total_spent <t> number <c> Num_of_Ticket <t> number <c> Museum_ID <t> number <c> visitor_ID <t> text </t> visitor <c> Age <t> number <c> ID <t> number <c> Level_of_membership <t> number <c> Name <t> text </t> museum <c> Museum_ID <t> number <c> Num_of_Staff <t> number <c> Open_Year <t> text <c> Name <t> text <i> Find the average number of staff working for the museums that were open before 2009. <s> SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009 </s>
--SEPARATOR--
museum <c> Museum_ID <t> number <c> Name <t> text <c> Num_of_Staff <t> number <c> Open_Year <t> text </t> visitor <c> ID <t> number <c> Name <t> text <c> Level_of_membership <t> number <c> Age <t> number </t> visit <c> Museum_ID <t> number <c> visitor_ID <t> text <c> Num_of_Ticket <t> number <c> Total_spent <t> number <i> What are the opening year and staff number of the museum named Plaza Museum? <s> SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum' </s>
--SEPARATOR--
visitor <c> Level_of_membership <t> number <c> Name <t> text <c> ID <t> number <c> Age <t> number </t> visit <c> visitor_ID <t> text <c> Total_spent <t> number <c> Num_of_Ticket <t> number <c> Museum_ID <t> number </t> museum <c> Name <t> text <c> Open_Year <t> text <c> Num_of_Staff <t> number <c> Museum_ID <t> number <i> What are the opening year and staff number of the museum named Plaza Museum? <s> SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum' </s>
--SEPARATOR--
museum <c> Museum_ID <t> number <c> Name <t> text <c> Num_of_Staff <t> number <c> Open_Year <t> text </t> visitor <c> ID <t> number <c> Name <t> text <c> Level_of_membership <t> number <c> Age <t> number </t> visit <c> Museum_ID <t> number <c> visitor_ID <t> text <c> Num_of_Ticket <t> number <c> Total_spent <t> number <i> find the names of museums which have more staff than the minimum staff number of all museums opened after 2010. <s> SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010) </s>
--SEPARATOR--
museum <c> Museum_ID <t> number <c> Name <t> text <c> Open_Year <t> text <c> Num_of_Staff <t> number </t> visitor <c> ID <t> number <c> Name <t> text <c> Age <t> number <c> Level_of_membership <t> number </t> visit <c> Museum_ID <t> number <c> visitor_ID <t> text <c> Num_of_Ticket <t> number <c> Total_spent <t> number <i> find the names of museums which have more staff than the minimum staff number of all museums opened after 2010. <s> SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010) </s>
--SEPARATOR--
museum <c> Museum_ID <t> number <c> Name <t> text <c> Num_of_Staff <t> number <c> Open_Year <t> text </t> visitor <c> ID <t> number <c> Name <t> text <c> Level_of_membership <t> number <c> Age <t> number </t> visit <c> Museum_ID <t> number <c> visitor_ID <t> text <c> Num_of_Ticket <t> number <c> Total_spent <t> number <i> find the id, name and age for visitors who visited some museums more than once. <s> SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1 </s>
--SEPARATOR--
visit <c> Total_spent <t> number <c> Num_of_Ticket <t> number <c> Museum_ID <t> number <c> visitor_ID <t> text </t> visitor <c> ID <t> number <c> Level_of_membership <t> number <c> Name <t> text <c> Age <t> number </t> museum <c> Name <t> text <c> Num_of_Staff <t> number <c> Open_Year <t> text <c> Museum_ID <t> number <i> find the id, name and age for visitors who visited some museums more than once. <s> SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1 </s>
--SEPARATOR--
museum <c> Museum_ID <t> number <c> Name <t> text <c> Num_of_Staff <t> number <c> Open_Year <t> text </t> visitor <c> ID <t> number <c> Name <t> text <c> Level_of_membership <t> number <c> Age <t> number </t> visit <c> Museum_ID <t> number <c> visitor_ID <t> text <c> Num_of_Ticket <t> number <c> Total_spent <t> number <i> What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets? <s> SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1 </s>
--SEPARATOR--
museum <c> Museum_ID <t> number <c> Open_Year <t> text <c> Name <t> text <c> Num_of_Staff <t> number </t> visit <c> Total_spent <t> number <c> Num_of_Ticket <t> number <c> visitor_ID <t> text <c> Museum_ID <t> number </t> visitor <c> ID <t> number <c> Level_of_membership <t> number <c> Name <t> text <c> Age <t> number <i> What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets? <s> SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1 </s>
--SEPARATOR--
museum <c> Museum_ID <t> number <c> Name <t> text <c> Num_of_Staff <t> number <c> Open_Year <t> text </t> visitor <c> ID <t> number <c> Name <t> text <c> Level_of_membership <t> number <c> Age <t> number </t> visit <c> Museum_ID <t> number <c> visitor_ID <t> text <c> Num_of_Ticket <t> number <c> Total_spent <t> number <i> What are the id and name of the museum visited most times? <s> SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
visit <c> Total_spent <t> number <c> Museum_ID <t> number <c> visitor_ID <t> text <c> Num_of_Ticket <t> number </t> museum <c> Num_of_Staff <t> number <c> Museum_ID <t> number <c> Open_Year <t> text <c> Name <t> text </t> visitor <c> Level_of_membership <t> number <c> Age <t> number <c> Name <t> text <c> ID <t> number <i> What are the id and name of the museum visited most times? <s> SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
museum <c> Museum_ID <t> number <c> Name <t> text <c> Num_of_Staff <t> number <c> Open_Year <t> text </t> visitor <c> ID <t> number <c> Name <t> text <c> Level_of_membership <t> number <c> Age <t> number </t> visit <c> Museum_ID <t> number <c> visitor_ID <t> text <c> Num_of_Ticket <t> number <c> Total_spent <t> number <i> What is the name of the museum that had no visitor yet? <s> SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit) </s>
--SEPARATOR--
visit <c> Total_spent <t> number <c> Num_of_Ticket <t> number <c> Museum_ID <t> number <c> visitor_ID <t> text </t> visitor <c> Name <t> text <c> Level_of_membership <t> number <c> Age <t> number <c> ID <t> number </t> museum <c> Num_of_Staff <t> number <c> Open_Year <t> text <c> Name <t> text <c> Museum_ID <t> number <i> What is the name of the museum that had no visitor yet? <s> SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit) </s>
--SEPARATOR--
museum <c> Museum_ID <t> number <c> Name <t> text <c> Num_of_Staff <t> number <c> Open_Year <t> text </t> visitor <c> ID <t> number <c> Name <t> text <c> Level_of_membership <t> number <c> Age <t> number </t> visit <c> Museum_ID <t> number <c> visitor_ID <t> text <c> Num_of_Ticket <t> number <c> Total_spent <t> number <i> Find the name and age of the visitor who bought the most tickets at once. <s> SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1 </s>
--SEPARATOR--
museum <c> Num_of_Staff <t> number <c> Name <t> text <c> Open_Year <t> text <c> Museum_ID <t> number </t> visit <c> Num_of_Ticket <t> number <c> visitor_ID <t> text <c> Total_spent <t> number <c> Museum_ID <t> number </t> visitor <c> Age <t> number <c> Name <t> text <c> Level_of_membership <t> number <c> ID <t> number <i> Find the name and age of the visitor who bought the most tickets at once. <s> SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1 </s>
--SEPARATOR--
museum <c> Museum_ID <t> number <c> Name <t> text <c> Num_of_Staff <t> number <c> Open_Year <t> text </t> visitor <c> ID <t> number <c> Name <t> text <c> Level_of_membership <t> number <c> Age <t> number </t> visit <c> Museum_ID <t> number <c> visitor_ID <t> text <c> Num_of_Ticket <t> number <c> Total_spent <t> number <i> What are the average and maximum number of tickets bought in all visits? <s> SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit </s>
--SEPARATOR--
visitor <c> Level_of_membership <t> number <c> ID <t> number <c> Age <t> number <c> Name <t> text </t> visit <c> Total_spent <t> number <c> Museum_ID <t> number <c> visitor_ID <t> text <c> Num_of_Ticket <t> number </t> museum <c> Num_of_Staff <t> number <c> Open_Year <t> text <c> Museum_ID <t> number <c> Name <t> text <i> What are the average and maximum number of tickets bought in all visits? <s> SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit </s>
--SEPARATOR--
museum <c> Museum_ID <t> number <c> Name <t> text <c> Num_of_Staff <t> number <c> Open_Year <t> text </t> visitor <c> ID <t> number <c> Name <t> text <c> Level_of_membership <t> number <c> Age <t> number </t> visit <c> Museum_ID <t> number <c> visitor_ID <t> text <c> Num_of_Ticket <t> number <c> Total_spent <t> number <i> What is the total ticket expense of the visitors whose membership level is 1? <s> SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1 </s>
--SEPARATOR--
visitor <c> Name <t> text <c> Level_of_membership <t> number <c> Age <t> number <c> ID <t> number </t> museum <c> Num_of_Staff <t> number <c> Name <t> text <c> Open_Year <t> text <c> Museum_ID <t> number </t> visit <c> visitor_ID <t> text <c> Num_of_Ticket <t> number <c> Museum_ID <t> number <c> Total_spent <t> number <i> What is the total ticket expense of the visitors whose membership level is 1? <s> SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1 </s>
--SEPARATOR--
museum <c> Museum_ID <t> number <c> Name <t> text <c> Num_of_Staff <t> number <c> Open_Year <t> text </t> visitor <c> ID <t> number <c> Name <t> text <c> Level_of_membership <t> number <c> Age <t> number </t> visit <c> Museum_ID <t> number <c> visitor_ID <t> text <c> Num_of_Ticket <t> number <c> Total_spent <t> number <i> What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011? <s> SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011 </s>
--SEPARATOR--
visit <c> Museum_ID <t> number <c> Total_spent <t> number <c> Num_of_Ticket <t> number <c> visitor_ID <t> text </t> visitor <c> Name <t> text <c> ID <t> number <c> Age <t> number <c> Level_of_membership <t> number </t> museum <c> Open_Year <t> text <c> Museum_ID <t> number <c> Name <t> text <c> Num_of_Staff <t> number <i> What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011? <s> SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011 </s>
--SEPARATOR--
museum <c> Museum_ID <t> number <c> Name <t> text <c> Num_of_Staff <t> number <c> Open_Year <t> text </t> visitor <c> ID <t> number <c> Name <t> text <c> Level_of_membership <t> number <c> Age <t> number </t> visit <c> Museum_ID <t> number <c> visitor_ID <t> text <c> Num_of_Ticket <t> number <c> Total_spent <t> number <i> Find the number of visitors who did not visit any museum opened after 2010. <s> SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010) </s>
--SEPARATOR--
visit <c> Museum_ID <t> number <c> Total_spent <t> number <c> visitor_ID <t> text <c> Num_of_Ticket <t> number </t> museum <c> Num_of_Staff <t> number <c> Open_Year <t> text <c> Museum_ID <t> number <c> Name <t> text </t> visitor <c> ID <t> number <c> Level_of_membership <t> number <c> Name <t> text <c> Age <t> number <i> Find the number of visitors who did not visit any museum opened after 2010. <s> SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010) </s>
--SEPARATOR--
museum <c> Museum_ID <t> number <c> Name <t> text <c> Num_of_Staff <t> number <c> Open_Year <t> text </t> visitor <c> ID <t> number <c> Name <t> text <c> Level_of_membership <t> number <c> Age <t> number </t> visit <c> Museum_ID <t> number <c> visitor_ID <t> text <c> Num_of_Ticket <t> number <c> Total_spent <t> number <i> How many museums were opened after 2013 or before 2008? <s> SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008 </s>
--SEPARATOR--
visit <c> Total_spent <t> number <c> Museum_ID <t> number <c> visitor_ID <t> text <c> Num_of_Ticket <t> number </t> museum <c> Name <t> text <c> Num_of_Staff <t> number <c> Open_Year <t> text <c> Museum_ID <t> number </t> visitor <c> Level_of_membership <t> number <c> Name <t> text <c> Age <t> number <c> ID <t> number <i> How many museums were opened after 2013 or before 2008? <s> SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008 </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> Find the total number of players. <s> SELECT count(*) FROM players </s>
--SEPARATOR--
rankings <c> tours <t> number <c> ranking <t> number <c> ranking_date <t> time <c> ranking_points <t> number <c> player_id <t> number </t> players <c> player_id <t> number <c> last_name <t> text <c> country_code <t> text <c> hand <t> text <c> birth_date <t> time <c> first_name <t> text </t> matches <c> tourney_level <t> text <c> match_num <t> number <c> winner_ioc <t> text <c> loser_hand <t> text <c> surface <t> text <c> winner_ht <t> number <c> winner_rank <t> number <c> loser_seed <t> number <c> score <t> text <c> winner_age <t> number <c> winner_seed <t> number <c> minutes <t> number <c> tourney_date <t> time <c> loser_rank <t> number <c> year <t> number <c> loser_name <t> text <c> winner_hand <t> text <c> winner_rank_points <t> number <c> draw_size <t> number <c> loser_id <t> number <c> best_of <t> number <c> loser_age <t> number <c> loser_ht <t> number <c> loser_entry <t> text <c> loser_rank_points <t> number <c> tourney_name <t> text <c> winner_entry <t> text <c> winner_name <t> text <c> winner_id <t> number <c> tourney_id <t> text <c> loser_ioc <t> text <c> round <t> text <i> Find the total number of players. <s> SELECT count(*) FROM players </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> How many players are there? <s> SELECT count(*) FROM players </s>
--SEPARATOR--
rankings <c> player_id <t> number <c> ranking_date <t> time <c> ranking <t> number <c> ranking_points <t> number <c> tours <t> number </t> players <c> hand <t> text <c> country_code <t> text <c> first_name <t> text <c> player_id <t> number <c> last_name <t> text <c> birth_date <t> time </t> matches <c> winner_entry <t> text <c> minutes <t> number <c> round <t> text <c> loser_hand <t> text <c> loser_ioc <t> text <c> loser_id <t> number <c> winner_rank_points <t> number <c> tourney_level <t> text <c> winner_age <t> number <c> winner_rank <t> number <c> score <t> text <c> winner_ioc <t> text <c> year <t> number <c> winner_hand <t> text <c> tourney_id <t> text <c> best_of <t> number <c> loser_name <t> text <c> match_num <t> number <c> surface <t> text <c> loser_ht <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_rank <t> number <c> winner_id <t> number <c> tourney_date <t> time <c> winner_seed <t> number <c> draw_size <t> number <c> tourney_name <t> text <c> winner_name <t> text <c> loser_rank_points <t> number <c> loser_seed <t> number <c> winner_ht <t> number <i> How many players are there? <s> SELECT count(*) FROM players </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> Find the total number of matches. <s> SELECT count(*) FROM matches </s>
--SEPARATOR--
rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number </t> players <c> hand <t> text <c> first_name <t> text <c> birth_date <t> time <c> country_code <t> text <c> last_name <t> text <c> player_id <t> number </t> matches <c> winner_seed <t> number <c> tourney_date <t> time <c> loser_age <t> number <c> loser_id <t> number <c> tourney_id <t> text <c> winner_rank <t> number <c> winner_entry <t> text <c> loser_entry <t> text <c> year <t> number <c> loser_hand <t> text <c> loser_rank <t> number <c> winner_hand <t> text <c> score <t> text <c> winner_age <t> number <c> winner_rank_points <t> number <c> loser_ht <t> number <c> tourney_name <t> text <c> minutes <t> number <c> loser_ioc <t> text <c> best_of <t> number <c> tourney_level <t> text <c> winner_name <t> text <c> match_num <t> number <c> winner_ioc <t> text <c> loser_rank_points <t> number <c> loser_name <t> text <c> surface <t> text <c> winner_ht <t> number <c> round <t> text <c> loser_seed <t> number <c> draw_size <t> number <c> winner_id <t> number <i> Find the total number of matches. <s> SELECT count(*) FROM matches </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> Count the number of matches. <s> SELECT count(*) FROM matches </s>
--SEPARATOR--
rankings <c> ranking_date <t> time <c> player_id <t> number <c> ranking <t> number <c> ranking_points <t> number <c> tours <t> number </t> players <c> birth_date <t> time <c> last_name <t> text <c> first_name <t> text <c> hand <t> text <c> country_code <t> text <c> player_id <t> number </t> matches <c> draw_size <t> number <c> surface <t> text <c> winner_hand <t> text <c> winner_id <t> number <c> tourney_level <t> text <c> loser_entry <t> text <c> winner_ht <t> number <c> winner_seed <t> number <c> winner_age <t> number <c> loser_ht <t> number <c> winner_name <t> text <c> tourney_id <t> text <c> loser_hand <t> text <c> winner_rank <t> number <c> round <t> text <c> tourney_name <t> text <c> loser_seed <t> number <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> winner_rank_points <t> number <c> best_of <t> number <c> loser_age <t> number <c> tourney_date <t> time <c> year <t> number <c> winner_entry <t> text <c> match_num <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> winner_ioc <t> text <c> minutes <t> number <c> score <t> text <i> Count the number of matches. <s> SELECT count(*) FROM matches </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> List the first name and birth date of all players from the country with code USA. <s> SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA' </s>
--SEPARATOR--
matches <c> loser_age <t> number <c> minutes <t> number <c> loser_entry <t> text <c> draw_size <t> number <c> loser_ht <t> number <c> winner_rank <t> number <c> surface <t> text <c> score <t> text <c> best_of <t> number <c> winner_id <t> number <c> year <t> number <c> loser_rank_points <t> number <c> match_num <t> number <c> winner_hand <t> text <c> tourney_id <t> text <c> round <t> text <c> loser_ioc <t> text <c> tourney_name <t> text <c> tourney_date <t> time <c> loser_hand <t> text <c> loser_name <t> text <c> winner_rank_points <t> number <c> winner_ioc <t> text <c> loser_rank <t> number <c> loser_id <t> number <c> winner_seed <t> number <c> winner_entry <t> text <c> winner_ht <t> number <c> loser_seed <t> number <c> winner_name <t> text <c> tourney_level <t> text <c> winner_age <t> number </t> rankings <c> tours <t> number <c> player_id <t> number <c> ranking_points <t> number <c> ranking <t> number <c> ranking_date <t> time </t> players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> birth_date <t> time <c> country_code <t> text <c> hand <t> text <i> List the first name and birth date of all players from the country with code USA. <s> SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA' </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> What are the first names and birth dates of players from the USA? <s> SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA' </s>
--SEPARATOR--
rankings <c> ranking <t> number <c> ranking_points <t> number <c> ranking_date <t> time <c> player_id <t> number <c> tours <t> number </t> players <c> birth_date <t> time <c> player_id <t> number <c> country_code <t> text <c> hand <t> text <c> first_name <t> text <c> last_name <t> text </t> matches <c> tourney_name <t> text <c> tourney_level <t> text <c> tourney_date <t> time <c> winner_hand <t> text <c> surface <t> text <c> draw_size <t> number <c> loser_name <t> text <c> year <t> number <c> loser_ioc <t> text <c> winner_name <t> text <c> tourney_id <t> text <c> loser_seed <t> number <c> loser_age <t> number <c> winner_age <t> number <c> winner_seed <t> number <c> best_of <t> number <c> loser_entry <t> text <c> winner_rank_points <t> number <c> loser_rank <t> number <c> winner_ioc <t> text <c> winner_entry <t> text <c> round <t> text <c> loser_id <t> number <c> winner_ht <t> number <c> loser_ht <t> number <c> match_num <t> number <c> winner_rank <t> number <c> winner_id <t> number <c> loser_rank_points <t> number <c> minutes <t> number <c> score <t> text <c> loser_hand <t> text <i> What are the first names and birth dates of players from the USA? <s> SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA' </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> Find the average age of losers and winners of all matches. <s> SELECT avg(loser_age) ,  avg(winner_age) FROM matches </s>
--SEPARATOR--
rankings <c> ranking <t> number <c> player_id <t> number <c> ranking_date <t> time <c> ranking_points <t> number <c> tours <t> number </t> matches <c> score <t> text <c> winner_seed <t> number <c> winner_rank_points <t> number <c> draw_size <t> number <c> loser_entry <t> text <c> minutes <t> number <c> winner_name <t> text <c> winner_rank <t> number <c> loser_rank_points <t> number <c> loser_id <t> number <c> tourney_level <t> text <c> loser_seed <t> number <c> winner_hand <t> text <c> winner_id <t> number <c> round <t> text <c> tourney_id <t> text <c> best_of <t> number <c> match_num <t> number <c> year <t> number <c> winner_ioc <t> text <c> winner_ht <t> number <c> winner_entry <t> text <c> loser_age <t> number <c> winner_age <t> number <c> loser_ioc <t> text <c> tourney_date <t> time <c> surface <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_hand <t> text <c> loser_ht <t> number <c> tourney_name <t> text </t> players <c> last_name <t> text <c> country_code <t> text <c> player_id <t> number <c> first_name <t> text <c> birth_date <t> time <c> hand <t> text <i> Find the average age of losers and winners of all matches. <s> SELECT avg(loser_age) ,  avg(winner_age) FROM matches </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> What are the average ages of losers and winners across matches? <s> SELECT avg(loser_age) ,  avg(winner_age) FROM matches </s>
--SEPARATOR--
players <c> hand <t> text <c> country_code <t> text <c> player_id <t> number <c> last_name <t> text <c> birth_date <t> time <c> first_name <t> text </t> matches <c> match_num <t> number <c> loser_name <t> text <c> tourney_date <t> time <c> loser_ht <t> number <c> minutes <t> number <c> tourney_name <t> text <c> winner_hand <t> text <c> surface <t> text <c> winner_ht <t> number <c> tourney_level <t> text <c> score <t> text <c> winner_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_seed <t> number <c> winner_id <t> number <c> winner_name <t> text <c> loser_ioc <t> text <c> winner_rank_points <t> number <c> loser_id <t> number <c> loser_rank_points <t> number <c> winner_ioc <t> text <c> draw_size <t> number <c> tourney_id <t> text <c> best_of <t> number <c> year <t> number <c> winner_entry <t> text <c> loser_age <t> number <c> round <t> text <c> winner_seed <t> number <c> loser_rank <t> number <c> winner_rank <t> number </t> rankings <c> ranking <t> number <c> tours <t> number <c> ranking_date <t> time <c> ranking_points <t> number <c> player_id <t> number <i> What are the average ages of losers and winners across matches? <s> SELECT avg(loser_age) ,  avg(winner_age) FROM matches </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> Find the average rank of winners in all matches. <s> SELECT avg(winner_rank) FROM matches </s>
--SEPARATOR--
matches <c> loser_rank_points <t> number <c> loser_seed <t> number <c> loser_age <t> number <c> winner_name <t> text <c> year <t> number <c> loser_id <t> number <c> loser_entry <t> text <c> winner_seed <t> number <c> winner_rank <t> number <c> match_num <t> number <c> surface <t> text <c> winner_ht <t> number <c> loser_ht <t> number <c> score <t> text <c> winner_age <t> number <c> tourney_level <t> text <c> winner_entry <t> text <c> winner_id <t> number <c> winner_ioc <t> text <c> loser_rank <t> number <c> tourney_id <t> text <c> winner_rank_points <t> number <c> tourney_name <t> text <c> loser_name <t> text <c> best_of <t> number <c> winner_hand <t> text <c> tourney_date <t> time <c> minutes <t> number <c> draw_size <t> number <c> loser_hand <t> text <c> round <t> text <c> loser_ioc <t> text </t> rankings <c> ranking_points <t> number <c> tours <t> number <c> player_id <t> number <c> ranking_date <t> time <c> ranking <t> number </t> players <c> birth_date <t> time <c> country_code <t> text <c> last_name <t> text <c> first_name <t> text <c> hand <t> text <c> player_id <t> number <i> Find the average rank of winners in all matches. <s> SELECT avg(winner_rank) FROM matches </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> What is the average rank for winners in all matches? <s> SELECT avg(winner_rank) FROM matches </s>
--SEPARATOR--
rankings <c> ranking_points <t> number <c> player_id <t> number <c> ranking <t> number <c> ranking_date <t> time <c> tours <t> number </t> players <c> first_name <t> text <c> last_name <t> text <c> country_code <t> text <c> player_id <t> number <c> birth_date <t> time <c> hand <t> text </t> matches <c> round <t> text <c> winner_rank <t> number <c> winner_ioc <t> text <c> winner_hand <t> text <c> loser_name <t> text <c> loser_ioc <t> text <c> loser_hand <t> text <c> tourney_name <t> text <c> winner_name <t> text <c> score <t> text <c> loser_id <t> number <c> loser_seed <t> number <c> match_num <t> number <c> loser_rank_points <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_rank <t> number <c> year <t> number <c> surface <t> text <c> winner_seed <t> number <c> tourney_date <t> time <c> best_of <t> number <c> tourney_id <t> text <c> winner_rank_points <t> number <c> loser_ht <t> number <c> draw_size <t> number <c> minutes <t> number <c> winner_id <t> number <c> winner_ht <t> number <c> tourney_level <t> text <c> winner_age <t> number <c> winner_entry <t> text <i> What is the average rank for winners in all matches? <s> SELECT avg(winner_rank) FROM matches </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> Find the highest rank of losers in all matches. <s> SELECT min(loser_rank) FROM matches </s>
--SEPARATOR--
rankings <c> tours <t> number <c> ranking_date <t> time <c> ranking <t> number <c> ranking_points <t> number <c> player_id <t> number </t> matches <c> winner_id <t> number <c> score <t> text <c> minutes <t> number <c> winner_hand <t> text <c> match_num <t> number <c> loser_ioc <t> text <c> loser_rank_points <t> number <c> loser_hand <t> text <c> winner_age <t> number <c> winner_name <t> text <c> winner_ht <t> number <c> loser_entry <t> text <c> winner_ioc <t> text <c> winner_rank_points <t> number <c> winner_entry <t> text <c> round <t> text <c> surface <t> text <c> loser_age <t> number <c> winner_rank <t> number <c> year <t> number <c> best_of <t> number <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_seed <t> number <c> loser_id <t> number <c> loser_seed <t> number <c> loser_rank <t> number <c> draw_size <t> number <c> tourney_date <t> time <c> loser_name <t> text <c> loser_ht <t> number </t> players <c> first_name <t> text <c> player_id <t> number <c> hand <t> text <c> country_code <t> text <c> last_name <t> text <c> birth_date <t> time <i> Find the highest rank of losers in all matches. <s> SELECT min(loser_rank) FROM matches </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> What is the best rank of losers across all matches? <s> SELECT min(loser_rank) FROM matches </s>
--SEPARATOR--
rankings <c> ranking_date <t> time <c> tours <t> number <c> ranking <t> number <c> ranking_points <t> number <c> player_id <t> number </t> matches <c> loser_ht <t> number <c> loser_age <t> number <c> winner_id <t> number <c> winner_seed <t> number <c> loser_entry <t> text <c> winner_hand <t> text <c> year <t> number <c> best_of <t> number <c> winner_entry <t> text <c> loser_ioc <t> text <c> tourney_level <t> text <c> loser_name <t> text <c> surface <t> text <c> round <t> text <c> loser_id <t> number <c> tourney_date <t> time <c> loser_seed <t> number <c> score <t> text <c> match_num <t> number <c> loser_rank_points <t> number <c> tourney_id <t> text <c> winner_rank <t> number <c> winner_ioc <t> text <c> winner_age <t> number <c> winner_name <t> text <c> loser_hand <t> text <c> winner_ht <t> number <c> draw_size <t> number <c> tourney_name <t> text <c> winner_rank_points <t> number <c> loser_rank <t> number <c> minutes <t> number </t> players <c> player_id <t> number <c> first_name <t> text <c> country_code <t> text <c> last_name <t> text <c> birth_date <t> time <c> hand <t> text <i> What is the best rank of losers across all matches? <s> SELECT min(loser_rank) FROM matches </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> find the number of distinct country codes of all players. <s> SELECT count(DISTINCT country_code) FROM players </s>
--SEPARATOR--
players <c> birth_date <t> time <c> first_name <t> text <c> hand <t> text <c> last_name <t> text <c> country_code <t> text <c> player_id <t> number </t> rankings <c> tours <t> number <c> ranking_date <t> time <c> ranking <t> number <c> ranking_points <t> number <c> player_id <t> number </t> matches <c> minutes <t> number <c> loser_entry <t> text <c> loser_rank <t> number <c> winner_age <t> number <c> round <t> text <c> winner_ht <t> number <c> tourney_date <t> time <c> tourney_id <t> text <c> winner_rank_points <t> number <c> loser_id <t> number <c> surface <t> text <c> loser_ht <t> number <c> loser_name <t> text <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ioc <t> text <c> draw_size <t> number <c> loser_age <t> number <c> loser_rank_points <t> number <c> winner_name <t> text <c> tourney_level <t> text <c> winner_id <t> number <c> year <t> number <c> best_of <t> number <c> loser_ioc <t> text <c> score <t> text <c> winner_rank <t> number <c> winner_seed <t> number <c> match_num <t> number <c> loser_hand <t> text <c> tourney_name <t> text <c> loser_seed <t> number <i> find the number of distinct country codes of all players. <s> SELECT count(DISTINCT country_code) FROM players </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> How many distinct countries do players come from? <s> SELECT count(DISTINCT country_code) FROM players </s>
--SEPARATOR--
rankings <c> player_id <t> number <c> ranking_date <t> time <c> tours <t> number <c> ranking <t> number <c> ranking_points <t> number </t> matches <c> winner_rank <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_rank_points <t> number <c> score <t> text <c> tourney_name <t> text <c> winner_rank_points <t> number <c> tourney_level <t> text <c> minutes <t> number <c> loser_rank <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> winner_entry <t> text <c> winner_seed <t> number <c> best_of <t> number <c> tourney_id <t> text <c> tourney_date <t> time <c> winner_ioc <t> text <c> surface <t> text <c> winner_age <t> number <c> match_num <t> number <c> winner_hand <t> text <c> year <t> number <c> winner_name <t> text <c> round <t> text <c> loser_hand <t> text <c> winner_ht <t> number <c> loser_seed <t> number <c> winner_id <t> number <c> loser_id <t> number <c> loser_ht <t> number <c> loser_entry <t> text </t> players <c> hand <t> text <c> first_name <t> text <c> birth_date <t> time <c> player_id <t> number <c> country_code <t> text <c> last_name <t> text <i> How many distinct countries do players come from? <s> SELECT count(DISTINCT country_code) FROM players </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> Find the number of distinct name of losers. <s> SELECT count(DISTINCT loser_name) FROM matches </s>
--SEPARATOR--
players <c> country_code <t> text <c> first_name <t> text <c> last_name <t> text <c> birth_date <t> time <c> player_id <t> number <c> hand <t> text </t> rankings <c> ranking_points <t> number <c> ranking_date <t> time <c> tours <t> number <c> player_id <t> number <c> ranking <t> number </t> matches <c> winner_ioc <t> text <c> winner_id <t> number <c> loser_rank_points <t> number <c> loser_age <t> number <c> loser_ht <t> number <c> winner_entry <t> text <c> winner_ht <t> number <c> draw_size <t> number <c> loser_entry <t> text <c> winner_seed <t> number <c> best_of <t> number <c> loser_hand <t> text <c> loser_seed <t> number <c> winner_rank_points <t> number <c> loser_ioc <t> text <c> score <t> text <c> minutes <t> number <c> winner_age <t> number <c> loser_id <t> number <c> tourney_name <t> text <c> tourney_date <t> time <c> winner_name <t> text <c> match_num <t> number <c> round <t> text <c> winner_hand <t> text <c> loser_name <t> text <c> tourney_level <t> text <c> year <t> number <c> tourney_id <t> text <c> surface <t> text <c> winner_rank <t> number <c> loser_rank <t> number <i> Find the number of distinct name of losers. <s> SELECT count(DISTINCT loser_name) FROM matches </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> How many different loser names are there? <s> SELECT count(DISTINCT loser_name) FROM matches </s>
--SEPARATOR--
matches <c> loser_name <t> text <c> tourney_name <t> text <c> tourney_level <t> text <c> loser_hand <t> text <c> draw_size <t> number <c> winner_rank_points <t> number <c> tourney_id <t> text <c> winner_age <t> number <c> surface <t> text <c> winner_seed <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> match_num <t> number <c> winner_ioc <t> text <c> best_of <t> number <c> winner_entry <t> text <c> loser_seed <t> number <c> winner_id <t> number <c> winner_rank <t> number <c> year <t> number <c> loser_rank_points <t> number <c> loser_ioc <t> text <c> winner_ht <t> number <c> minutes <t> number <c> loser_id <t> number <c> round <t> text <c> winner_name <t> text <c> loser_ht <t> number <c> loser_rank <t> number <c> score <t> text <c> tourney_date <t> time <c> winner_hand <t> text </t> rankings <c> ranking_date <t> time <c> tours <t> number <c> ranking <t> number <c> ranking_points <t> number <c> player_id <t> number </t> players <c> birth_date <t> time <c> last_name <t> text <c> country_code <t> text <c> hand <t> text <c> first_name <t> text <c> player_id <t> number <i> How many different loser names are there? <s> SELECT count(DISTINCT loser_name) FROM matches </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> Find the name of tourney that has more than 10 matches. <s> SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10 </s>
--SEPARATOR--
matches <c> minutes <t> number <c> round <t> text <c> loser_id <t> number <c> loser_age <t> number <c> winner_ioc <t> text <c> match_num <t> number <c> loser_rank_points <t> number <c> loser_ht <t> number <c> draw_size <t> number <c> tourney_date <t> time <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> loser_ioc <t> text <c> tourney_id <t> text <c> loser_seed <t> number <c> loser_hand <t> text <c> winner_name <t> text <c> best_of <t> number <c> winner_rank <t> number <c> loser_name <t> text <c> surface <t> text <c> score <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_seed <t> number <c> year <t> number <c> winner_id <t> number <c> loser_entry <t> text <c> winner_rank_points <t> number <c> loser_rank <t> number </t> rankings <c> ranking_points <t> number <c> ranking <t> number <c> tours <t> number <c> player_id <t> number <c> ranking_date <t> time </t> players <c> birth_date <t> time <c> hand <t> text <c> first_name <t> text <c> country_code <t> text <c> player_id <t> number <c> last_name <t> text <i> Find the name of tourney that has more than 10 matches. <s> SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10 </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> What are the names of tournaments that have more than 10 matches? <s> SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10 </s>
--SEPARATOR--
matches <c> loser_name <t> text <c> score <t> text <c> winner_hand <t> text <c> loser_hand <t> text <c> tourney_date <t> time <c> loser_age <t> number <c> loser_rank_points <t> number <c> winner_rank_points <t> number <c> winner_rank <t> number <c> surface <t> text <c> tourney_id <t> text <c> winner_name <t> text <c> winner_age <t> number <c> draw_size <t> number <c> match_num <t> number <c> loser_id <t> number <c> tourney_name <t> text <c> winner_seed <t> number <c> winner_entry <t> text <c> round <t> text <c> best_of <t> number <c> tourney_level <t> text <c> loser_ioc <t> text <c> loser_rank <t> number <c> year <t> number <c> minutes <t> number <c> loser_seed <t> number <c> loser_entry <t> text <c> winner_id <t> number <c> winner_ioc <t> text <c> loser_ht <t> number <c> winner_ht <t> number </t> players <c> hand <t> text <c> player_id <t> number <c> birth_date <t> time <c> last_name <t> text <c> first_name <t> text <c> country_code <t> text </t> rankings <c> tours <t> number <c> player_id <t> number <c> ranking_date <t> time <c> ranking_points <t> number <c> ranking <t> number <i> What are the names of tournaments that have more than 10 matches? <s> SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10 </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> List the names of all winners who played in both 2013 and 2016. <s> SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016 </s>
--SEPARATOR--
matches <c> round <t> text <c> best_of <t> number <c> tourney_name <t> text <c> winner_rank_points <t> number <c> loser_seed <t> number <c> score <t> text <c> winner_age <t> number <c> minutes <t> number <c> winner_entry <t> text <c> winner_ht <t> number <c> loser_entry <t> text <c> winner_ioc <t> text <c> loser_rank <t> number <c> tourney_level <t> text <c> loser_id <t> number <c> tourney_date <t> time <c> winner_id <t> number <c> loser_hand <t> text <c> year <t> number <c> winner_rank <t> number <c> loser_age <t> number <c> winner_hand <t> text <c> loser_ioc <t> text <c> surface <t> text <c> tourney_id <t> text <c> winner_seed <t> number <c> loser_rank_points <t> number <c> match_num <t> number <c> draw_size <t> number <c> loser_ht <t> number <c> loser_name <t> text <c> winner_name <t> text </t> players <c> player_id <t> number <c> last_name <t> text <c> country_code <t> text <c> birth_date <t> time <c> hand <t> text <c> first_name <t> text </t> rankings <c> ranking_points <t> number <c> tours <t> number <c> ranking <t> number <c> ranking_date <t> time <c> player_id <t> number <i> List the names of all winners who played in both 2013 and 2016. <s> SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016 </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> What are the names of players who won in both 2013 and 2016? <s> SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016 </s>
--SEPARATOR--
players <c> first_name <t> text <c> last_name <t> text <c> birth_date <t> time <c> country_code <t> text <c> player_id <t> number <c> hand <t> text </t> rankings <c> ranking_points <t> number <c> player_id <t> number <c> ranking <t> number <c> tours <t> number <c> ranking_date <t> time </t> matches <c> tourney_id <t> text <c> loser_hand <t> text <c> loser_name <t> text <c> winner_seed <t> number <c> loser_ht <t> number <c> winner_entry <t> text <c> winner_age <t> number <c> loser_rank <t> number <c> surface <t> text <c> winner_rank_points <t> number <c> tourney_level <t> text <c> round <t> text <c> loser_age <t> number <c> loser_rank_points <t> number <c> minutes <t> number <c> tourney_name <t> text <c> winner_ioc <t> text <c> tourney_date <t> time <c> winner_ht <t> number <c> draw_size <t> number <c> loser_ioc <t> text <c> year <t> number <c> winner_name <t> text <c> match_num <t> number <c> winner_id <t> number <c> score <t> text <c> loser_id <t> number <c> winner_rank <t> number <c> best_of <t> number <c> loser_entry <t> text <c> loser_seed <t> number <c> winner_hand <t> text <i> What are the names of players who won in both 2013 and 2016? <s> SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016 </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> List the number of all matches who played in years of 2013 or 2016. <s> SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016 </s>
--SEPARATOR--
rankings <c> tours <t> number <c> ranking_date <t> time <c> ranking_points <t> number <c> player_id <t> number <c> ranking <t> number </t> matches <c> winner_name <t> text <c> loser_entry <t> text <c> winner_hand <t> text <c> best_of <t> number <c> loser_id <t> number <c> tourney_date <t> time <c> tourney_id <t> text <c> round <t> text <c> tourney_level <t> text <c> minutes <t> number <c> winner_rank_points <t> number <c> loser_name <t> text <c> loser_age <t> number <c> score <t> text <c> winner_ioc <t> text <c> winner_ht <t> number <c> winner_rank <t> number <c> winner_id <t> number <c> match_num <t> number <c> loser_rank <t> number <c> surface <t> text <c> winner_age <t> number <c> tourney_name <t> text <c> loser_ioc <t> text <c> winner_entry <t> text <c> year <t> number <c> loser_ht <t> number <c> loser_hand <t> text <c> loser_seed <t> number <c> loser_rank_points <t> number <c> winner_seed <t> number <c> draw_size <t> number </t> players <c> player_id <t> number <c> birth_date <t> time <c> first_name <t> text <c> hand <t> text <c> country_code <t> text <c> last_name <t> text <i> List the number of all matches who played in years of 2013 or 2016. <s> SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016 </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> How many matches were played in 2013 or 2016? <s> SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016 </s>
--SEPARATOR--
matches <c> tourney_id <t> text <c> loser_name <t> text <c> winner_id <t> number <c> loser_seed <t> number <c> tourney_name <t> text <c> winner_entry <t> text <c> winner_ioc <t> text <c> draw_size <t> number <c> winner_name <t> text <c> loser_hand <t> text <c> tourney_level <t> text <c> loser_rank <t> number <c> loser_ht <t> number <c> winner_ht <t> number <c> loser_rank_points <t> number <c> score <t> text <c> surface <t> text <c> winner_rank_points <t> number <c> loser_entry <t> text <c> tourney_date <t> time <c> year <t> number <c> match_num <t> number <c> loser_id <t> number <c> winner_hand <t> text <c> winner_age <t> number <c> loser_ioc <t> text <c> minutes <t> number <c> winner_rank <t> number <c> loser_age <t> number <c> winner_seed <t> number <c> best_of <t> number <c> round <t> text </t> players <c> first_name <t> text <c> country_code <t> text <c> hand <t> text <c> player_id <t> number <c> birth_date <t> time <c> last_name <t> text </t> rankings <c> player_id <t> number <c> tours <t> number <c> ranking_date <t> time <c> ranking <t> number <c> ranking_points <t> number <i> How many matches were played in 2013 or 2016? <s> SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016 </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> What are the country code and first name of the players who won in both tourney WTA Championships and Australian Open? <s> SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open' </s>
--SEPARATOR--
matches <c> winner_hand <t> text <c> winner_id <t> number <c> draw_size <t> number <c> winner_ioc <t> text <c> round <t> text <c> tourney_id <t> text <c> tourney_name <t> text <c> surface <t> text <c> loser_seed <t> number <c> tourney_level <t> text <c> loser_rank_points <t> number <c> loser_name <t> text <c> loser_age <t> number <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> winner_seed <t> number <c> loser_rank <t> number <c> winner_rank <t> number <c> winner_rank_points <t> number <c> year <t> number <c> match_num <t> number <c> tourney_date <t> time <c> winner_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> best_of <t> number <c> score <t> text <c> winner_name <t> text <c> winner_entry <t> text <c> winner_ht <t> number <c> minutes <t> number </t> players <c> country_code <t> text <c> player_id <t> number <c> first_name <t> text <c> birth_date <t> time <c> hand <t> text <c> last_name <t> text </t> rankings <c> ranking_points <t> number <c> ranking <t> number <c> ranking_date <t> time <c> player_id <t> number <c> tours <t> number <i> What are the country code and first name of the players who won in both tourney WTA Championships and Australian Open? <s> SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open' </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> What are the first names and country codes for players who won both the WTA Championships and the Australian Open? <s> SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open' </s>
--SEPARATOR--
players <c> birth_date <t> time <c> country_code <t> text <c> hand <t> text <c> player_id <t> number <c> last_name <t> text <c> first_name <t> text </t> rankings <c> ranking_points <t> number <c> ranking <t> number <c> tours <t> number <c> ranking_date <t> time <c> player_id <t> number </t> matches <c> loser_id <t> number <c> match_num <t> number <c> surface <t> text <c> winner_ioc <t> text <c> winner_age <t> number <c> winner_rank_points <t> number <c> round <t> text <c> loser_seed <t> number <c> tourney_name <t> text <c> loser_age <t> number <c> winner_name <t> text <c> tourney_level <t> text <c> winner_entry <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> minutes <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> winner_id <t> number <c> winner_rank <t> number <c> tourney_date <t> time <c> year <t> number <c> tourney_id <t> text <c> draw_size <t> number <c> best_of <t> number <c> loser_ioc <t> text <c> score <t> text <c> loser_rank_points <t> number <c> winner_ht <t> number <c> winner_seed <t> number <c> loser_ht <t> number <c> winner_hand <t> text <i> What are the first names and country codes for players who won both the WTA Championships and the Australian Open? <s> SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open' </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> Find the first name and country code of the oldest player. <s> SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1 </s>
--SEPARATOR--
rankings <c> player_id <t> number <c> ranking_date <t> time <c> ranking_points <t> number <c> ranking <t> number <c> tours <t> number </t> players <c> birth_date <t> time <c> first_name <t> text <c> player_id <t> number <c> hand <t> text <c> last_name <t> text <c> country_code <t> text </t> matches <c> loser_rank <t> number <c> winner_name <t> text <c> loser_name <t> text <c> loser_ioc <t> text <c> year <t> number <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_entry <t> text <c> round <t> text <c> winner_hand <t> text <c> winner_age <t> number <c> minutes <t> number <c> tourney_id <t> text <c> best_of <t> number <c> loser_id <t> number <c> loser_seed <t> number <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> match_num <t> number <c> tourney_level <t> text <c> tourney_name <t> text <c> loser_hand <t> text <c> draw_size <t> number <c> tourney_date <t> time <c> loser_age <t> number <c> loser_entry <t> text <c> surface <t> text <c> loser_ht <t> number <c> winner_seed <t> number <c> score <t> text <c> loser_rank_points <t> number <i> Find the first name and country code of the oldest player. <s> SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1 </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> What is the first name and country code of the oldest player? <s> SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1 </s>
--SEPARATOR--
matches <c> match_num <t> number <c> year <t> number <c> winner_age <t> number <c> draw_size <t> number <c> loser_age <t> number <c> surface <t> text <c> loser_seed <t> number <c> loser_rank_points <t> number <c> winner_seed <t> number <c> loser_ioc <t> text <c> winner_ht <t> number <c> winner_name <t> text <c> winner_id <t> number <c> winner_hand <t> text <c> winner_rank_points <t> number <c> tourney_name <t> text <c> winner_ioc <t> text <c> winner_entry <t> text <c> loser_ht <t> number <c> loser_name <t> text <c> score <t> text <c> loser_hand <t> text <c> loser_entry <t> text <c> winner_rank <t> number <c> tourney_level <t> text <c> best_of <t> number <c> tourney_date <t> time <c> tourney_id <t> text <c> loser_id <t> number <c> round <t> text <c> loser_rank <t> number <c> minutes <t> number </t> rankings <c> ranking <t> number <c> tours <t> number <c> ranking_points <t> number <c> player_id <t> number <c> ranking_date <t> time </t> players <c> hand <t> text <c> birth_date <t> time <c> last_name <t> text <c> player_id <t> number <c> first_name <t> text <c> country_code <t> text <i> What is the first name and country code of the oldest player? <s> SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1 </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> List the first and last name of all players in the order of birth date. <s> SELECT first_name ,  last_name FROM players ORDER BY birth_date </s>
--SEPARATOR--
matches <c> winner_ht <t> number <c> loser_rank <t> number <c> minutes <t> number <c> loser_age <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> winner_id <t> number <c> round <t> text <c> winner_hand <t> text <c> best_of <t> number <c> loser_ioc <t> text <c> loser_entry <t> text <c> winner_name <t> text <c> tourney_id <t> text <c> loser_seed <t> number <c> winner_ioc <t> text <c> tourney_name <t> text <c> tourney_level <t> text <c> score <t> text <c> match_num <t> number <c> winner_entry <t> text <c> loser_ht <t> number <c> year <t> number <c> tourney_date <t> time <c> winner_age <t> number <c> draw_size <t> number <c> loser_id <t> number <c> surface <t> text <c> loser_rank_points <t> number <c> loser_hand <t> text <c> winner_rank <t> number <c> loser_name <t> text </t> players <c> last_name <t> text <c> hand <t> text <c> country_code <t> text <c> first_name <t> text <c> player_id <t> number <c> birth_date <t> time </t> rankings <c> ranking_points <t> number <c> ranking_date <t> time <c> tours <t> number <c> player_id <t> number <c> ranking <t> number <i> List the first and last name of all players in the order of birth date. <s> SELECT first_name ,  last_name FROM players ORDER BY birth_date </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> What are the full names of all players, sorted by birth date? <s> SELECT first_name ,  last_name FROM players ORDER BY birth_date </s>
--SEPARATOR--
matches <c> winner_ioc <t> text <c> winner_id <t> number <c> tourney_date <t> time <c> surface <t> text <c> match_num <t> number <c> loser_id <t> number <c> winner_seed <t> number <c> loser_rank_points <t> number <c> score <t> text <c> round <t> text <c> winner_name <t> text <c> tourney_name <t> text <c> loser_hand <t> text <c> winner_hand <t> text <c> tourney_level <t> text <c> winner_rank_points <t> number <c> year <t> number <c> loser_ioc <t> text <c> minutes <t> number <c> winner_entry <t> text <c> loser_age <t> number <c> loser_entry <t> text <c> loser_rank <t> number <c> draw_size <t> number <c> winner_rank <t> number <c> loser_name <t> text <c> best_of <t> number <c> winner_ht <t> number <c> tourney_id <t> text <c> loser_ht <t> number <c> winner_age <t> number <c> loser_seed <t> number </t> rankings <c> ranking <t> number <c> ranking_date <t> time <c> tours <t> number <c> ranking_points <t> number <c> player_id <t> number </t> players <c> player_id <t> number <c> country_code <t> text <c> hand <t> text <c> birth_date <t> time <c> last_name <t> text <c> first_name <t> text <i> What are the full names of all players, sorted by birth date? <s> SELECT first_name ,  last_name FROM players ORDER BY birth_date </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> List the first and last name of all players who are left / L hand in the order of birth date. <s> SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date </s>
--SEPARATOR--
rankings <c> ranking <t> number <c> ranking_date <t> time <c> player_id <t> number <c> tours <t> number <c> ranking_points <t> number </t> players <c> birth_date <t> time <c> country_code <t> text <c> player_id <t> number <c> last_name <t> text <c> first_name <t> text <c> hand <t> text </t> matches <c> tourney_level <t> text <c> tourney_id <t> text <c> winner_rank <t> number <c> tourney_name <t> text <c> match_num <t> number <c> loser_seed <t> number <c> loser_rank <t> number <c> tourney_date <t> time <c> winner_hand <t> text <c> winner_age <t> number <c> loser_hand <t> text <c> minutes <t> number <c> round <t> text <c> winner_entry <t> text <c> winner_rank_points <t> number <c> winner_id <t> number <c> loser_entry <t> text <c> surface <t> text <c> loser_age <t> number <c> loser_ht <t> number <c> winner_ht <t> number <c> loser_ioc <t> text <c> best_of <t> number <c> winner_seed <t> number <c> loser_rank_points <t> number <c> winner_name <t> text <c> winner_ioc <t> text <c> loser_id <t> number <c> loser_name <t> text <c> score <t> text <c> draw_size <t> number <c> year <t> number <i> List the first and last name of all players who are left / L hand in the order of birth date. <s> SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> What are the full names of all left handed players, in order of birth date? <s> SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date </s>
--SEPARATOR--
players <c> first_name <t> text <c> last_name <t> text <c> player_id <t> number <c> birth_date <t> time <c> country_code <t> text <c> hand <t> text </t> rankings <c> ranking_date <t> time <c> tours <t> number <c> ranking_points <t> number <c> player_id <t> number <c> ranking <t> number </t> matches <c> tourney_id <t> text <c> winner_entry <t> text <c> minutes <t> number <c> surface <t> text <c> draw_size <t> number <c> loser_ht <t> number <c> loser_entry <t> text <c> winner_hand <t> text <c> loser_rank <t> number <c> winner_name <t> text <c> round <t> text <c> loser_name <t> text <c> loser_rank_points <t> number <c> winner_id <t> number <c> match_num <t> number <c> winner_rank_points <t> number <c> loser_hand <t> text <c> winner_seed <t> number <c> winner_ioc <t> text <c> tourney_date <t> time <c> loser_id <t> number <c> score <t> text <c> winner_rank <t> number <c> loser_seed <t> number <c> winner_age <t> number <c> loser_ioc <t> text <c> winner_ht <t> number <c> tourney_name <t> text <c> loser_age <t> number <c> year <t> number <c> tourney_level <t> text <c> best_of <t> number <i> What are the full names of all left handed players, in order of birth date? <s> SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> Find the first name and country code of the player who did the most number of tours. <s> SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1 </s>
--SEPARATOR--
rankings <c> player_id <t> number <c> ranking <t> number <c> ranking_points <t> number <c> tours <t> number <c> ranking_date <t> time </t> players <c> player_id <t> number <c> first_name <t> text <c> country_code <t> text <c> hand <t> text <c> birth_date <t> time <c> last_name <t> text </t> matches <c> loser_ht <t> number <c> winner_rank <t> number <c> minutes <t> number <c> tourney_date <t> time <c> loser_rank <t> number <c> score <t> text <c> winner_ht <t> number <c> loser_hand <t> text <c> surface <t> text <c> match_num <t> number <c> loser_seed <t> number <c> loser_name <t> text <c> year <t> number <c> loser_rank_points <t> number <c> tourney_name <t> text <c> winner_id <t> number <c> loser_id <t> number <c> winner_hand <t> text <c> loser_ioc <t> text <c> winner_age <t> number <c> tourney_id <t> text <c> tourney_level <t> text <c> winner_entry <t> text <c> winner_seed <t> number <c> loser_age <t> number <c> winner_rank_points <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> loser_entry <t> text <c> best_of <t> number <c> draw_size <t> number <c> round <t> text <i> Find the first name and country code of the player who did the most number of tours. <s> SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1 </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> What is the first name and country code of the player with the most tours? <s> SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1 </s>
--SEPARATOR--
rankings <c> ranking <t> number <c> tours <t> number <c> player_id <t> number <c> ranking_points <t> number <c> ranking_date <t> time </t> matches <c> loser_hand <t> text <c> loser_age <t> number <c> winner_entry <t> text <c> winner_age <t> number <c> round <t> text <c> tourney_name <t> text <c> loser_id <t> number <c> loser_rank_points <t> number <c> tourney_id <t> text <c> winner_rank <t> number <c> best_of <t> number <c> loser_name <t> text <c> loser_ioc <t> text <c> winner_id <t> number <c> winner_name <t> text <c> loser_entry <t> text <c> winner_ht <t> number <c> minutes <t> number <c> winner_hand <t> text <c> year <t> number <c> loser_seed <t> number <c> surface <t> text <c> tourney_level <t> text <c> winner_rank_points <t> number <c> match_num <t> number <c> draw_size <t> number <c> tourney_date <t> time <c> loser_ht <t> number <c> winner_ioc <t> text <c> winner_seed <t> number <c> loser_rank <t> number <c> score <t> text </t> players <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> player_id <t> number <c> country_code <t> text <c> first_name <t> text <i> What is the first name and country code of the player with the most tours? <s> SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1 </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> Find the year that has the most number of matches. <s> SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
matches <c> loser_age <t> number <c> surface <t> text <c> winner_rank <t> number <c> year <t> number <c> loser_ioc <t> text <c> best_of <t> number <c> loser_ht <t> number <c> winner_rank_points <t> number <c> winner_name <t> text <c> winner_ioc <t> text <c> loser_seed <t> number <c> winner_seed <t> number <c> winner_id <t> number <c> winner_entry <t> text <c> loser_entry <t> text <c> tourney_id <t> text <c> loser_rank <t> number <c> loser_id <t> number <c> match_num <t> number <c> draw_size <t> number <c> tourney_date <t> time <c> loser_rank_points <t> number <c> minutes <t> number <c> winner_ht <t> number <c> score <t> text <c> round <t> text <c> loser_hand <t> text <c> tourney_name <t> text <c> loser_name <t> text <c> tourney_level <t> text <c> winner_age <t> number <c> winner_hand <t> text </t> players <c> hand <t> text <c> player_id <t> number <c> country_code <t> text <c> first_name <t> text <c> last_name <t> text <c> birth_date <t> time </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> tours <t> number <c> player_id <t> number <c> ranking_points <t> number <i> Find the year that has the most number of matches. <s> SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> Which year had the most matches? <s> SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
rankings <c> player_id <t> number <c> tours <t> number <c> ranking_date <t> time <c> ranking <t> number <c> ranking_points <t> number </t> players <c> hand <t> text <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> country_code <t> text <c> birth_date <t> time </t> matches <c> winner_entry <t> text <c> winner_ioc <t> text <c> loser_hand <t> text <c> tourney_name <t> text <c> best_of <t> number <c> tourney_id <t> text <c> surface <t> text <c> draw_size <t> number <c> loser_age <t> number <c> match_num <t> number <c> loser_entry <t> text <c> loser_name <t> text <c> tourney_date <t> time <c> winner_age <t> number <c> loser_rank <t> number <c> round <t> text <c> loser_ht <t> number <c> loser_ioc <t> text <c> winner_id <t> number <c> minutes <t> number <c> score <t> text <c> winner_hand <t> text <c> winner_name <t> text <c> winner_ht <t> number <c> winner_rank_points <t> number <c> year <t> number <c> winner_rank <t> number <c> loser_seed <t> number <c> loser_id <t> number <c> winner_seed <t> number <c> loser_rank_points <t> number <c> tourney_level <t> text <i> Which year had the most matches? <s> SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> Find the name and rank points of the winner who won the most times. <s> SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
matches <c> winner_name <t> text <c> loser_rank_points <t> number <c> winner_entry <t> text <c> minutes <t> number <c> winner_id <t> number <c> loser_rank <t> number <c> year <t> number <c> loser_ht <t> number <c> loser_seed <t> number <c> match_num <t> number <c> winner_rank_points <t> number <c> winner_ht <t> number <c> loser_id <t> number <c> tourney_name <t> text <c> loser_ioc <t> text <c> winner_age <t> number <c> tourney_id <t> text <c> loser_entry <t> text <c> loser_name <t> text <c> tourney_level <t> text <c> winner_rank <t> number <c> winner_ioc <t> text <c> score <t> text <c> draw_size <t> number <c> round <t> text <c> best_of <t> number <c> tourney_date <t> time <c> winner_hand <t> text <c> loser_hand <t> text <c> loser_age <t> number <c> winner_seed <t> number <c> surface <t> text </t> rankings <c> ranking_points <t> number <c> ranking_date <t> time <c> tours <t> number <c> ranking <t> number <c> player_id <t> number </t> players <c> player_id <t> number <c> country_code <t> text <c> birth_date <t> time <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <i> Find the name and rank points of the winner who won the most times. <s> SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> What is the name of the winner who has won the most matches, and how many rank points does this player have? <s> SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
matches <c> minutes <t> number <c> winner_entry <t> text <c> loser_entry <t> text <c> loser_id <t> number <c> tourney_name <t> text <c> winner_seed <t> number <c> tourney_level <t> text <c> best_of <t> number <c> winner_ioc <t> text <c> tourney_date <t> time <c> match_num <t> number <c> loser_ioc <t> text <c> round <t> text <c> loser_hand <t> text <c> winner_age <t> number <c> winner_id <t> number <c> tourney_id <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> loser_rank <t> number <c> loser_name <t> text <c> winner_name <t> text <c> winner_ht <t> number <c> year <t> number <c> loser_ht <t> number <c> winner_hand <t> text <c> loser_age <t> number <c> score <t> text <c> draw_size <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> surface <t> text </t> rankings <c> tours <t> number <c> ranking_points <t> number <c> player_id <t> number <c> ranking <t> number <c> ranking_date <t> time </t> players <c> player_id <t> number <c> birth_date <t> time <c> last_name <t> text <c> country_code <t> text <c> first_name <t> text <c> hand <t> text <i> What is the name of the winner who has won the most matches, and how many rank points does this player have? <s> SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> Find the name of the winner who has the highest rank points and participated in the Australian Open tourney. <s> SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1 </s>
--SEPARATOR--
rankings <c> player_id <t> number <c> ranking_date <t> time <c> ranking <t> number <c> ranking_points <t> number <c> tours <t> number </t> matches <c> tourney_id <t> text <c> winner_rank_points <t> number <c> draw_size <t> number <c> winner_ioc <t> text <c> winner_age <t> number <c> loser_hand <t> text <c> winner_name <t> text <c> loser_name <t> text <c> tourney_level <t> text <c> surface <t> text <c> best_of <t> number <c> score <t> text <c> loser_ioc <t> text <c> winner_hand <t> text <c> loser_rank_points <t> number <c> match_num <t> number <c> year <t> number <c> loser_id <t> number <c> loser_ht <t> number <c> winner_entry <t> text <c> tourney_name <t> text <c> winner_seed <t> number <c> minutes <t> number <c> winner_id <t> number <c> round <t> text <c> winner_ht <t> number <c> loser_entry <t> text <c> winner_rank <t> number <c> loser_age <t> number <c> tourney_date <t> time <c> loser_rank <t> number <c> loser_seed <t> number </t> players <c> last_name <t> text <c> country_code <t> text <c> first_name <t> text <c> hand <t> text <c> birth_date <t> time <c> player_id <t> number <i> Find the name of the winner who has the highest rank points and participated in the Australian Open tourney. <s> SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1 </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> What is the name of the winner with the most rank points who participated in the Australian Open tournament? <s> SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1 </s>
--SEPARATOR--
rankings <c> ranking_points <t> number <c> player_id <t> number <c> tours <t> number <c> ranking_date <t> time <c> ranking <t> number </t> players <c> hand <t> text <c> birth_date <t> time <c> player_id <t> number <c> first_name <t> text <c> country_code <t> text <c> last_name <t> text </t> matches <c> winner_name <t> text <c> loser_rank <t> number <c> tourney_name <t> text <c> tourney_level <t> text <c> loser_entry <t> text <c> loser_age <t> number <c> year <t> number <c> surface <t> text <c> match_num <t> number <c> draw_size <t> number <c> loser_name <t> text <c> winner_rank <t> number <c> loser_rank_points <t> number <c> winner_id <t> number <c> loser_seed <t> number <c> loser_ht <t> number <c> round <t> text <c> tourney_date <t> time <c> loser_id <t> number <c> winner_ht <t> number <c> winner_seed <t> number <c> winner_age <t> number <c> score <t> text <c> winner_rank_points <t> number <c> loser_ioc <t> text <c> tourney_id <t> text <c> loser_hand <t> text <c> minutes <t> number <c> winner_hand <t> text <c> winner_entry <t> text <c> best_of <t> number <c> winner_ioc <t> text <i> What is the name of the winner with the most rank points who participated in the Australian Open tournament? <s> SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1 </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> find the names of loser and winner who played in the match with greatest number of minutes. <s> SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1 </s>
--SEPARATOR--
matches <c> loser_hand <t> text <c> tourney_id <t> text <c> surface <t> text <c> winner_age <t> number <c> loser_seed <t> number <c> winner_id <t> number <c> draw_size <t> number <c> winner_name <t> text <c> loser_ioc <t> text <c> winner_rank <t> number <c> loser_age <t> number <c> best_of <t> number <c> year <t> number <c> winner_ioc <t> text <c> loser_entry <t> text <c> loser_rank_points <t> number <c> loser_id <t> number <c> loser_rank <t> number <c> tourney_date <t> time <c> loser_name <t> text <c> match_num <t> number <c> tourney_level <t> text <c> winner_entry <t> text <c> tourney_name <t> text <c> loser_ht <t> number <c> winner_seed <t> number <c> score <t> text <c> minutes <t> number <c> round <t> text <c> winner_rank_points <t> number <c> winner_ht <t> number <c> winner_hand <t> text </t> players <c> birth_date <t> time <c> player_id <t> number <c> country_code <t> text <c> hand <t> text <c> last_name <t> text <c> first_name <t> text </t> rankings <c> ranking <t> number <c> ranking_points <t> number <c> ranking_date <t> time <c> tours <t> number <c> player_id <t> number <i> find the names of loser and winner who played in the match with greatest number of minutes. <s> SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1 </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> What are the names of the winner and loser who played in the longest match? <s> SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1 </s>
--SEPARATOR--
players <c> country_code <t> text <c> hand <t> text <c> last_name <t> text <c> birth_date <t> time <c> first_name <t> text <c> player_id <t> number </t> rankings <c> ranking_points <t> number <c> tours <t> number <c> ranking <t> number <c> ranking_date <t> time <c> player_id <t> number </t> matches <c> winner_entry <t> text <c> winner_ht <t> number <c> loser_seed <t> number <c> tourney_name <t> text <c> tourney_date <t> time <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_name <t> text <c> best_of <t> number <c> loser_age <t> number <c> winner_ioc <t> text <c> surface <t> text <c> winner_rank <t> number <c> loser_entry <t> text <c> draw_size <t> number <c> loser_ioc <t> text <c> loser_hand <t> text <c> winner_rank_points <t> number <c> minutes <t> number <c> winner_seed <t> number <c> tourney_level <t> text <c> score <t> text <c> winner_hand <t> text <c> winner_age <t> number <c> year <t> number <c> loser_id <t> number <c> match_num <t> number <c> round <t> text <c> tourney_id <t> text <c> winner_id <t> number <c> winner_name <t> text <c> loser_ht <t> number <i> What are the names of the winner and loser who played in the longest match? <s> SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1 </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> Find the average ranking for each player and their first name. <s> SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name </s>
--SEPARATOR--
matches <c> winner_id <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> loser_id <t> number <c> winner_age <t> number <c> match_num <t> number <c> loser_ht <t> number <c> loser_entry <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> score <t> text <c> winner_name <t> text <c> surface <t> text <c> winner_ioc <t> text <c> winner_entry <t> text <c> loser_name <t> text <c> winner_rank <t> number <c> draw_size <t> number <c> loser_hand <t> text <c> loser_ioc <t> text <c> year <t> number <c> loser_rank <t> number <c> loser_age <t> number <c> tourney_date <t> time <c> best_of <t> number <c> minutes <t> number <c> winner_hand <t> text <c> loser_seed <t> number <c> round <t> text <c> tourney_id <t> text <c> winner_ht <t> number <c> loser_rank_points <t> number </t> rankings <c> ranking <t> number <c> tours <t> number <c> ranking_date <t> time <c> player_id <t> number <c> ranking_points <t> number </t> players <c> country_code <t> text <c> last_name <t> text <c> birth_date <t> time <c> first_name <t> text <c> hand <t> text <c> player_id <t> number <i> Find the average ranking for each player and their first name. <s> SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> What are the first names of all players, and their average rankings? <s> SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name </s>
--SEPARATOR--
matches <c> winner_rank <t> number <c> score <t> text <c> tourney_id <t> text <c> round <t> text <c> winner_age <t> number <c> year <t> number <c> loser_rank_points <t> number <c> loser_ht <t> number <c> winner_hand <t> text <c> loser_ioc <t> text <c> loser_seed <t> number <c> winner_name <t> text <c> loser_entry <t> text <c> loser_name <t> text <c> surface <t> text <c> winner_seed <t> number <c> match_num <t> number <c> loser_hand <t> text <c> tourney_date <t> time <c> winner_ht <t> number <c> tourney_name <t> text <c> winner_rank_points <t> number <c> best_of <t> number <c> minutes <t> number <c> winner_entry <t> text <c> winner_ioc <t> text <c> loser_rank <t> number <c> winner_id <t> number <c> loser_id <t> number <c> tourney_level <t> text <c> loser_age <t> number <c> draw_size <t> number </t> players <c> country_code <t> text <c> last_name <t> text <c> first_name <t> text <c> birth_date <t> time <c> hand <t> text <c> player_id <t> number </t> rankings <c> ranking_points <t> number <c> player_id <t> number <c> ranking_date <t> time <c> tours <t> number <c> ranking <t> number <i> What are the first names of all players, and their average rankings? <s> SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> Find the total ranking points for each player and their first name. <s> SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name </s>
--SEPARATOR--
rankings <c> player_id <t> number <c> ranking <t> number <c> tours <t> number <c> ranking_points <t> number <c> ranking_date <t> time </t> matches <c> tourney_level <t> text <c> loser_seed <t> number <c> winner_seed <t> number <c> winner_age <t> number <c> year <t> number <c> best_of <t> number <c> tourney_date <t> time <c> winner_ht <t> number <c> tourney_name <t> text <c> loser_rank_points <t> number <c> round <t> text <c> winner_rank <t> number <c> loser_name <t> text <c> winner_rank_points <t> number <c> score <t> text <c> loser_ioc <t> text <c> tourney_id <t> text <c> winner_ioc <t> text <c> draw_size <t> number <c> loser_rank <t> number <c> loser_entry <t> text <c> surface <t> text <c> winner_id <t> number <c> loser_age <t> number <c> winner_name <t> text <c> loser_id <t> number <c> winner_hand <t> text <c> winner_entry <t> text <c> minutes <t> number <c> loser_ht <t> number <c> loser_hand <t> text <c> match_num <t> number </t> players <c> player_id <t> number <c> hand <t> text <c> first_name <t> text <c> last_name <t> text <c> country_code <t> text <c> birth_date <t> time <i> Find the total ranking points for each player and their first name. <s> SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> What are the first names of all players, and their total ranking points? <s> SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name </s>
--SEPARATOR--
rankings <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <c> ranking_date <t> time </t> players <c> last_name <t> text <c> birth_date <t> time <c> player_id <t> number <c> country_code <t> text <c> first_name <t> text <c> hand <t> text </t> matches <c> loser_entry <t> text <c> minutes <t> number <c> winner_rank <t> number <c> loser_ioc <t> text <c> tourney_id <t> text <c> loser_name <t> text <c> winner_seed <t> number <c> loser_hand <t> text <c> winner_id <t> number <c> year <t> number <c> draw_size <t> number <c> loser_ht <t> number <c> winner_hand <t> text <c> score <t> text <c> loser_rank_points <t> number <c> loser_rank <t> number <c> best_of <t> number <c> surface <t> text <c> winner_ht <t> number <c> winner_name <t> text <c> loser_age <t> number <c> match_num <t> number <c> loser_id <t> number <c> tourney_name <t> text <c> winner_rank_points <t> number <c> tourney_level <t> text <c> winner_entry <t> text <c> loser_seed <t> number <c> winner_age <t> number <c> tourney_date <t> time <c> winner_ioc <t> text <c> round <t> text <i> What are the first names of all players, and their total ranking points? <s> SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> find the number of players for each country. <s> SELECT count(*) ,  country_code FROM players GROUP BY country_code </s>
--SEPARATOR--
matches <c> winner_hand <t> text <c> round <t> text <c> winner_id <t> number <c> score <t> text <c> winner_ht <t> number <c> surface <t> text <c> best_of <t> number <c> winner_seed <t> number <c> winner_entry <t> text <c> tourney_name <t> text <c> draw_size <t> number <c> tourney_date <t> time <c> winner_age <t> number <c> loser_name <t> text <c> loser_ioc <t> text <c> winner_rank <t> number <c> loser_ht <t> number <c> loser_hand <t> text <c> tourney_id <t> text <c> year <t> number <c> winner_name <t> text <c> winner_rank_points <t> number <c> loser_rank <t> number <c> loser_seed <t> number <c> loser_rank_points <t> number <c> loser_entry <t> text <c> loser_age <t> number <c> tourney_level <t> text <c> loser_id <t> number <c> match_num <t> number <c> minutes <t> number <c> winner_ioc <t> text </t> rankings <c> tours <t> number <c> ranking_points <t> number <c> ranking <t> number <c> ranking_date <t> time <c> player_id <t> number </t> players <c> birth_date <t> time <c> hand <t> text <c> country_code <t> text <c> first_name <t> text <c> player_id <t> number <c> last_name <t> text <i> find the number of players for each country. <s> SELECT count(*) ,  country_code FROM players GROUP BY country_code </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> How many players are from each country? <s> SELECT count(*) ,  country_code FROM players GROUP BY country_code </s>
--SEPARATOR--
players <c> country_code <t> text <c> first_name <t> text <c> last_name <t> text <c> player_id <t> number <c> hand <t> text <c> birth_date <t> time </t> rankings <c> tours <t> number <c> ranking_points <t> number <c> player_id <t> number <c> ranking <t> number <c> ranking_date <t> time </t> matches <c> surface <t> text <c> winner_ht <t> number <c> tourney_date <t> time <c> loser_age <t> number <c> loser_rank <t> number <c> draw_size <t> number <c> tourney_level <t> text <c> winner_ioc <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> winner_hand <t> text <c> year <t> number <c> best_of <t> number <c> winner_rank <t> number <c> loser_name <t> text <c> loser_entry <t> text <c> loser_rank_points <t> number <c> minutes <t> number <c> match_num <t> number <c> tourney_name <t> text <c> loser_ioc <t> text <c> round <t> text <c> winner_entry <t> text <c> score <t> text <c> winner_age <t> number <c> loser_id <t> number <c> tourney_id <t> text <c> winner_id <t> number <c> loser_seed <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> winner_name <t> text <i> How many players are from each country? <s> SELECT count(*) ,  country_code FROM players GROUP BY country_code </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> find the code of the country where has the greatest number of players. <s> SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
players <c> player_id <t> number <c> country_code <t> text <c> first_name <t> text <c> birth_date <t> time <c> last_name <t> text <c> hand <t> text </t> matches <c> loser_rank <t> number <c> winner_id <t> number <c> winner_entry <t> text <c> tourney_name <t> text <c> loser_rank_points <t> number <c> winner_rank_points <t> number <c> loser_age <t> number <c> winner_name <t> text <c> minutes <t> number <c> surface <t> text <c> loser_id <t> number <c> score <t> text <c> winner_rank <t> number <c> winner_ioc <t> text <c> loser_ht <t> number <c> loser_entry <t> text <c> loser_ioc <t> text <c> tourney_level <t> text <c> tourney_id <t> text <c> loser_seed <t> number <c> winner_hand <t> text <c> round <t> text <c> loser_hand <t> text <c> winner_seed <t> number <c> match_num <t> number <c> tourney_date <t> time <c> winner_age <t> number <c> loser_name <t> text <c> best_of <t> number <c> year <t> number <c> winner_ht <t> number <c> draw_size <t> number </t> rankings <c> ranking_points <t> number <c> ranking_date <t> time <c> player_id <t> number <c> tours <t> number <c> ranking <t> number <i> find the code of the country where has the greatest number of players. <s> SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> What is the code of the country with the most players? <s> SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> country_code <t> text <c> birth_date <t> time <c> hand <t> text </t> rankings <c> tours <t> number <c> ranking <t> number <c> ranking_points <t> number <c> ranking_date <t> time <c> player_id <t> number </t> matches <c> loser_seed <t> number <c> winner_id <t> number <c> year <t> number <c> winner_hand <t> text <c> best_of <t> number <c> winner_rank_points <t> number <c> loser_rank <t> number <c> draw_size <t> number <c> loser_ht <t> number <c> winner_name <t> text <c> winner_ioc <t> text <c> match_num <t> number <c> loser_age <t> number <c> winner_entry <t> text <c> loser_hand <t> text <c> surface <t> text <c> score <t> text <c> winner_rank <t> number <c> tourney_id <t> text <c> loser_id <t> number <c> round <t> text <c> loser_ioc <t> text <c> loser_rank_points <t> number <c> tourney_name <t> text <c> winner_seed <t> number <c> winner_ht <t> number <c> tourney_date <t> time <c> winner_age <t> number <c> tourney_level <t> text <c> loser_entry <t> text <c> loser_name <t> text <c> minutes <t> number <i> What is the code of the country with the most players? <s> SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> Find the codes of countries that have more than 50 players. <s> SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50 </s>
--SEPARATOR--
matches <c> winner_rank_points <t> number <c> minutes <t> number <c> tourney_level <t> text <c> loser_rank <t> number <c> round <t> text <c> draw_size <t> number <c> loser_entry <t> text <c> loser_age <t> number <c> tourney_date <t> time <c> year <t> number <c> loser_ioc <t> text <c> loser_seed <t> number <c> surface <t> text <c> winner_hand <t> text <c> loser_id <t> number <c> winner_seed <t> number <c> winner_ioc <t> text <c> match_num <t> number <c> winner_name <t> text <c> loser_name <t> text <c> score <t> text <c> tourney_id <t> text <c> winner_id <t> number <c> winner_rank <t> number <c> best_of <t> number <c> winner_entry <t> text <c> loser_hand <t> text <c> winner_age <t> number <c> loser_rank_points <t> number <c> tourney_name <t> text <c> winner_ht <t> number <c> loser_ht <t> number </t> rankings <c> player_id <t> number <c> ranking_date <t> time <c> ranking <t> number <c> tours <t> number <c> ranking_points <t> number </t> players <c> birth_date <t> time <c> last_name <t> text <c> hand <t> text <c> country_code <t> text <c> first_name <t> text <c> player_id <t> number <i> Find the codes of countries that have more than 50 players. <s> SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50 </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> What are the codes of countries with more than 50 players? <s> SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50 </s>
--SEPARATOR--
matches <c> surface <t> text <c> loser_ht <t> number <c> round <t> text <c> loser_rank <t> number <c> winner_id <t> number <c> loser_seed <t> number <c> loser_entry <t> text <c> winner_name <t> text <c> tourney_name <t> text <c> winner_hand <t> text <c> winner_entry <t> text <c> loser_age <t> number <c> winner_rank <t> number <c> match_num <t> number <c> loser_hand <t> text <c> loser_id <t> number <c> loser_ioc <t> text <c> tourney_level <t> text <c> score <t> text <c> minutes <t> number <c> loser_name <t> text <c> draw_size <t> number <c> winner_ht <t> number <c> winner_rank_points <t> number <c> loser_rank_points <t> number <c> best_of <t> number <c> winner_age <t> number <c> winner_seed <t> number <c> year <t> number <c> winner_ioc <t> text <c> tourney_date <t> time <c> tourney_id <t> text </t> rankings <c> ranking_points <t> number <c> tours <t> number <c> ranking <t> number <c> player_id <t> number <c> ranking_date <t> time </t> players <c> last_name <t> text <c> country_code <t> text <c> hand <t> text <c> player_id <t> number <c> birth_date <t> time <c> first_name <t> text <i> What are the codes of countries with more than 50 players? <s> SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50 </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> Find the total number of tours for each ranking date. <s> SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date </s>
--SEPARATOR--
players <c> first_name <t> text <c> hand <t> text <c> country_code <t> text <c> birth_date <t> time <c> last_name <t> text <c> player_id <t> number </t> rankings <c> ranking_points <t> number <c> ranking_date <t> time <c> ranking <t> number <c> tours <t> number <c> player_id <t> number </t> matches <c> best_of <t> number <c> winner_seed <t> number <c> winner_age <t> number <c> loser_seed <t> number <c> loser_age <t> number <c> loser_id <t> number <c> loser_name <t> text <c> winner_id <t> number <c> tourney_name <t> text <c> winner_ioc <t> text <c> surface <t> text <c> tourney_level <t> text <c> tourney_id <t> text <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> match_num <t> number <c> winner_entry <t> text <c> winner_ht <t> number <c> loser_rank_points <t> number <c> loser_ioc <t> text <c> score <t> text <c> minutes <t> number <c> year <t> number <c> winner_rank <t> number <c> winner_name <t> text <c> loser_rank <t> number <c> tourney_date <t> time <c> round <t> text <c> winner_rank_points <t> number <c> draw_size <t> number <c> winner_hand <t> text <i> Find the total number of tours for each ranking date. <s> SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> How many total tours were there for each ranking date? <s> SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date </s>
--SEPARATOR--
players <c> player_id <t> number <c> country_code <t> text <c> first_name <t> text <c> hand <t> text <c> birth_date <t> time <c> last_name <t> text </t> matches <c> loser_id <t> number <c> loser_ioc <t> text <c> winner_rank_points <t> number <c> loser_ht <t> number <c> winner_entry <t> text <c> loser_name <t> text <c> winner_hand <t> text <c> winner_rank <t> number <c> surface <t> text <c> loser_age <t> number <c> round <t> text <c> loser_seed <t> number <c> tourney_id <t> text <c> winner_age <t> number <c> loser_rank_points <t> number <c> winner_seed <t> number <c> winner_ioc <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> tourney_date <t> time <c> loser_rank <t> number <c> tourney_name <t> text <c> draw_size <t> number <c> score <t> text <c> best_of <t> number <c> match_num <t> number <c> loser_hand <t> text <c> minutes <t> number <c> winner_name <t> text <c> tourney_level <t> text <c> year <t> number <c> loser_entry <t> text </t> rankings <c> ranking_date <t> time <c> tours <t> number <c> player_id <t> number <c> ranking_points <t> number <c> ranking <t> number <i> How many total tours were there for each ranking date? <s> SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> Find the number of matches happened in each year. <s> SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR </s>
--SEPARATOR--
players <c> birth_date <t> time <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> country_code <t> text </t> rankings <c> ranking_points <t> number <c> tours <t> number <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number </t> matches <c> winner_ht <t> number <c> tourney_name <t> text <c> winner_seed <t> number <c> surface <t> text <c> winner_hand <t> text <c> loser_seed <t> number <c> winner_rank <t> number <c> round <t> text <c> loser_id <t> number <c> tourney_id <t> text <c> loser_ht <t> number <c> draw_size <t> number <c> winner_id <t> number <c> minutes <t> number <c> tourney_date <t> time <c> loser_ioc <t> text <c> winner_rank_points <t> number <c> loser_rank <t> number <c> winner_ioc <t> text <c> loser_age <t> number <c> loser_rank_points <t> number <c> match_num <t> number <c> loser_name <t> text <c> loser_entry <t> text <c> tourney_level <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> best_of <t> number <c> loser_hand <t> text <c> score <t> text <c> year <t> number <c> winner_name <t> text <i> Find the number of matches happened in each year. <s> SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> How many matches were played in each year? <s> SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR </s>
--SEPARATOR--
matches <c> winner_ht <t> number <c> winner_seed <t> number <c> tourney_date <t> time <c> winner_rank <t> number <c> tourney_level <t> text <c> loser_ioc <t> text <c> loser_rank_points <t> number <c> loser_age <t> number <c> loser_hand <t> text <c> winner_ioc <t> text <c> loser_seed <t> number <c> surface <t> text <c> best_of <t> number <c> winner_hand <t> text <c> tourney_id <t> text <c> loser_name <t> text <c> round <t> text <c> loser_id <t> number <c> draw_size <t> number <c> match_num <t> number <c> loser_entry <t> text <c> score <t> text <c> winner_age <t> number <c> loser_ht <t> number <c> winner_entry <t> text <c> winner_id <t> number <c> year <t> number <c> minutes <t> number <c> loser_rank <t> number <c> winner_name <t> text <c> winner_rank_points <t> number <c> tourney_name <t> text </t> players <c> hand <t> text <c> player_id <t> number <c> last_name <t> text <c> first_name <t> text <c> country_code <t> text <c> birth_date <t> time </t> rankings <c> ranking_points <t> number <c> player_id <t> number <c> tours <t> number <c> ranking_date <t> time <c> ranking <t> number <i> How many matches were played in each year? <s> SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> Find the name and rank of the 3 youngest winners across all matches. <s> SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3 </s>
--SEPARATOR--
rankings <c> ranking <t> number <c> player_id <t> number <c> tours <t> number <c> ranking_date <t> time <c> ranking_points <t> number </t> matches <c> loser_rank_points <t> number <c> winner_rank <t> number <c> loser_seed <t> number <c> loser_entry <t> text <c> surface <t> text <c> winner_rank_points <t> number <c> loser_hand <t> text <c> winner_age <t> number <c> loser_rank <t> number <c> winner_id <t> number <c> tourney_level <t> text <c> loser_name <t> text <c> winner_seed <t> number <c> loser_ioc <t> text <c> score <t> text <c> tourney_date <t> time <c> loser_age <t> number <c> year <t> number <c> winner_hand <t> text <c> match_num <t> number <c> winner_ioc <t> text <c> winner_ht <t> number <c> draw_size <t> number <c> loser_id <t> number <c> round <t> text <c> loser_ht <t> number <c> tourney_name <t> text <c> best_of <t> number <c> winner_name <t> text <c> winner_entry <t> text <c> minutes <t> number <c> tourney_id <t> text </t> players <c> country_code <t> text <c> hand <t> text <c> last_name <t> text <c> first_name <t> text <c> player_id <t> number <c> birth_date <t> time <i> Find the name and rank of the 3 youngest winners across all matches. <s> SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3 </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> What are the names and ranks of the three youngest winners across all matches? <s> SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3 </s>
--SEPARATOR--
players <c> player_id <t> number <c> country_code <t> text <c> hand <t> text <c> last_name <t> text <c> first_name <t> text <c> birth_date <t> time </t> matches <c> tourney_date <t> time <c> loser_ioc <t> text <c> winner_rank_points <t> number <c> loser_hand <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> score <t> text <c> winner_name <t> text <c> loser_ht <t> number <c> surface <t> text <c> winner_ht <t> number <c> winner_age <t> number <c> winner_rank <t> number <c> round <t> text <c> winner_entry <t> text <c> winner_hand <t> text <c> match_num <t> number <c> loser_entry <t> text <c> draw_size <t> number <c> tourney_level <t> text <c> year <t> number <c> loser_rank_points <t> number <c> minutes <t> number <c> tourney_name <t> text <c> winner_seed <t> number <c> loser_id <t> number <c> loser_seed <t> number <c> winner_ioc <t> text <c> tourney_id <t> text <c> loser_age <t> number <c> winner_id <t> number <c> best_of <t> number </t> rankings <c> ranking <t> number <c> ranking_points <t> number <c> player_id <t> number <c> ranking_date <t> time <c> tours <t> number <i> What are the names and ranks of the three youngest winners across all matches? <s> SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3 </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> How many different winners both participated in the WTA Championships and were left handed? <s> SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L' </s>
--SEPARATOR--
rankings <c> tours <t> number <c> ranking_date <t> time <c> ranking_points <t> number <c> ranking <t> number <c> player_id <t> number </t> matches <c> loser_name <t> text <c> tourney_id <t> text <c> winner_age <t> number <c> score <t> text <c> tourney_name <t> text <c> winner_hand <t> text <c> draw_size <t> number <c> minutes <t> number <c> loser_hand <t> text <c> match_num <t> number <c> surface <t> text <c> winner_rank_points <t> number <c> loser_rank <t> number <c> loser_ht <t> number <c> tourney_date <t> time <c> winner_seed <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> winner_ht <t> number <c> winner_rank <t> number <c> loser_seed <t> number <c> winner_entry <t> text <c> winner_ioc <t> text <c> tourney_level <t> text <c> winner_id <t> number <c> round <t> text <c> loser_ioc <t> text <c> best_of <t> number <c> winner_name <t> text <c> loser_rank_points <t> number <c> loser_id <t> number <c> year <t> number </t> players <c> first_name <t> text <c> hand <t> text <c> last_name <t> text <c> player_id <t> number <c> country_code <t> text <c> birth_date <t> time <i> How many different winners both participated in the WTA Championships and were left handed? <s> SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L' </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> Find the number of left handed winners who participated in the WTA Championships. <s> SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L' </s>
--SEPARATOR--
matches <c> loser_name <t> text <c> loser_entry <t> text <c> winner_seed <t> number <c> loser_rank <t> number <c> score <t> text <c> winner_entry <t> text <c> winner_rank_points <t> number <c> winner_ioc <t> text <c> tourney_date <t> time <c> loser_seed <t> number <c> winner_hand <t> text <c> surface <t> text <c> winner_ht <t> number <c> tourney_name <t> text <c> loser_ioc <t> text <c> loser_ht <t> number <c> loser_hand <t> text <c> winner_id <t> number <c> minutes <t> number <c> match_num <t> number <c> tourney_id <t> text <c> year <t> number <c> draw_size <t> number <c> winner_name <t> text <c> best_of <t> number <c> round <t> text <c> loser_rank_points <t> number <c> tourney_level <t> text <c> winner_rank <t> number <c> loser_id <t> number <c> winner_age <t> number <c> loser_age <t> number </t> players <c> birth_date <t> time <c> hand <t> text <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> country_code <t> text </t> rankings <c> tours <t> number <c> ranking_date <t> time <c> player_id <t> number <c> ranking <t> number <c> ranking_points <t> number <i> Find the number of left handed winners who participated in the WTA Championships. <s> SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L' </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> Find the first name, country code and birth date of the winner who has the highest rank points in all matches. <s> SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1 </s>
--SEPARATOR--
matches <c> round <t> text <c> tourney_level <t> text <c> winner_ioc <t> text <c> loser_id <t> number <c> winner_ht <t> number <c> loser_rank <t> number <c> loser_entry <t> text <c> loser_seed <t> number <c> loser_ioc <t> text <c> winner_rank <t> number <c> loser_hand <t> text <c> winner_age <t> number <c> score <t> text <c> minutes <t> number <c> winner_hand <t> text <c> tourney_id <t> text <c> winner_rank_points <t> number <c> year <t> number <c> surface <t> text <c> loser_rank_points <t> number <c> loser_ht <t> number <c> draw_size <t> number <c> match_num <t> number <c> best_of <t> number <c> tourney_name <t> text <c> winner_entry <t> text <c> winner_id <t> number <c> tourney_date <t> time <c> loser_name <t> text <c> winner_seed <t> number <c> loser_age <t> number <c> winner_name <t> text </t> rankings <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <c> ranking_date <t> time <c> ranking <t> number </t> players <c> first_name <t> text <c> hand <t> text <c> birth_date <t> time <c> last_name <t> text <c> player_id <t> number <c> country_code <t> text <i> Find the first name, country code and birth date of the winner who has the highest rank points in all matches. <s> SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1 </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> What is the first name, country code, and birth date of the player with the most winner rank points across all matches? <s> SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1 </s>
--SEPARATOR--
rankings <c> ranking_date <t> time <c> ranking <t> number <c> tours <t> number <c> player_id <t> number <c> ranking_points <t> number </t> players <c> hand <t> text <c> player_id <t> number <c> country_code <t> text <c> first_name <t> text <c> last_name <t> text <c> birth_date <t> time </t> matches <c> tourney_id <t> text <c> match_num <t> number <c> round <t> text <c> winner_hand <t> text <c> tourney_level <t> text <c> winner_ioc <t> text <c> loser_seed <t> number <c> winner_seed <t> number <c> year <t> number <c> winner_ht <t> number <c> draw_size <t> number <c> winner_entry <t> text <c> loser_rank_points <t> number <c> best_of <t> number <c> loser_hand <t> text <c> tourney_name <t> text <c> tourney_date <t> time <c> loser_id <t> number <c> winner_rank_points <t> number <c> loser_rank <t> number <c> winner_age <t> number <c> score <t> text <c> loser_ioc <t> text <c> minutes <t> number <c> surface <t> text <c> loser_ht <t> number <c> winner_rank <t> number <c> loser_name <t> text <c> loser_entry <t> text <c> winner_id <t> number <c> winner_name <t> text <c> loser_age <t> number <i> What is the first name, country code, and birth date of the player with the most winner rank points across all matches? <s> SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1 </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> Find the number of players for each hand type. <s> SELECT count(*) ,  hand FROM players GROUP BY hand </s>
--SEPARATOR--
matches <c> winner_entry <t> text <c> winner_ht <t> number <c> tourney_name <t> text <c> winner_id <t> number <c> minutes <t> number <c> loser_rank_points <t> number <c> tourney_date <t> time <c> loser_name <t> text <c> loser_id <t> number <c> match_num <t> number <c> winner_hand <t> text <c> draw_size <t> number <c> best_of <t> number <c> loser_hand <t> text <c> loser_entry <t> text <c> winner_ioc <t> text <c> winner_rank_points <t> number <c> winner_name <t> text <c> loser_ioc <t> text <c> winner_rank <t> number <c> score <t> text <c> loser_seed <t> number <c> loser_ht <t> number <c> surface <t> text <c> round <t> text <c> winner_age <t> number <c> year <t> number <c> winner_seed <t> number <c> tourney_id <t> text <c> tourney_level <t> text <c> loser_age <t> number <c> loser_rank <t> number </t> rankings <c> ranking <t> number <c> ranking_points <t> number <c> ranking_date <t> time <c> tours <t> number <c> player_id <t> number </t> players <c> player_id <t> number <c> last_name <t> text <c> country_code <t> text <c> first_name <t> text <c> hand <t> text <c> birth_date <t> time <i> Find the number of players for each hand type. <s> SELECT count(*) ,  hand FROM players GROUP BY hand </s>
--SEPARATOR--
players <c> player_id <t> number <c> first_name <t> text <c> last_name <t> text <c> hand <t> text <c> birth_date <t> time <c> country_code <t> text </t> matches <c> best_of <t> number <c> draw_size <t> number <c> loser_age <t> number <c> loser_entry <t> text <c> loser_hand <t> text <c> loser_ht <t> number <c> loser_id <t> number <c> loser_ioc <t> text <c> loser_name <t> text <c> loser_rank <t> number <c> loser_rank_points <t> number <c> loser_seed <t> number <c> match_num <t> number <c> minutes <t> number <c> round <t> text <c> score <t> text <c> surface <t> text <c> tourney_date <t> time <c> tourney_id <t> text <c> tourney_level <t> text <c> tourney_name <t> text <c> winner_age <t> number <c> winner_entry <t> text <c> winner_hand <t> text <c> winner_ht <t> number <c> winner_id <t> number <c> winner_ioc <t> text <c> winner_name <t> text <c> winner_rank <t> number <c> winner_rank_points <t> number <c> winner_seed <t> number <c> year <t> number </t> rankings <c> ranking_date <t> time <c> ranking <t> number <c> player_id <t> number <c> ranking_points <t> number <c> tours <t> number <i> How many players are there for each hand type? <s> SELECT count(*) ,  hand FROM players GROUP BY hand </s>
--SEPARATOR--
players <c> country_code <t> text <c> player_id <t> number <c> hand <t> text <c> birth_date <t> time <c> last_name <t> text <c> first_name <t> text </t> rankings <c> tours <t> number <c> ranking_points <t> number <c> ranking <t> number <c> ranking_date <t> time <c> player_id <t> number </t> matches <c> winner_id <t> number <c> loser_age <t> number <c> loser_rank <t> number <c> loser_name <t> text <c> loser_entry <t> text <c> winner_rank_points <t> number <c> round <t> text <c> winner_hand <t> text <c> draw_size <t> number <c> best_of <t> number <c> winner_ioc <t> text <c> loser_seed <t> number <c> surface <t> text <c> winner_entry <t> text <c> winner_age <t> number <c> year <t> number <c> winner_ht <t> number <c> match_num <t> number <c> loser_rank_points <t> number <c> score <t> text <c> winner_rank <t> number <c> minutes <t> number <c> loser_ht <t> number <c> tourney_id <t> text <c> loser_ioc <t> text <c> winner_name <t> text <c> loser_hand <t> text <c> tourney_date <t> time <c> tourney_name <t> text <c> loser_id <t> number <c> winner_seed <t> number <c> tourney_level <t> text <i> How many players are there for each hand type? <s> SELECT count(*) ,  hand FROM players GROUP BY hand </s>
--SEPARATOR--
battle <c> id <t> number <c> name <t> text <c> date <t> text <c> bulgarian_commander <t> text <c> latin_commander <t> text <c> result <t> text </t> ship <c> lost_in_battle <t> number <c> id <t> number <c> name <t> text <c> tonnage <t> text <c> ship_type <t> text <c> location <t> text <c> disposition_of_ship <t> text </t> death <c> caused_by_ship_id <t> number <c> id <t> number <c> note <t> text <c> killed <t> number <c> injured <t> number <i> How many ships ended up being 'Captured'? <s> SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured' </s>
--SEPARATOR--
ship <c> ship_type <t> text <c> id <t> number <c> name <t> text <c> tonnage <t> text <c> lost_in_battle <t> number <c> disposition_of_ship <t> text <c> location <t> text </t> death <c> caused_by_ship_id <t> number <c> note <t> text <c> killed <t> number <c> id <t> number <c> injured <t> number </t> battle <c> bulgarian_commander <t> text <c> latin_commander <t> text <c> name <t> text <c> id <t> number <c> result <t> text <c> date <t> text <i> How many ships ended up being 'Captured'? <s> SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured' </s>
--SEPARATOR--
battle <c> id <t> number <c> name <t> text <c> date <t> text <c> bulgarian_commander <t> text <c> latin_commander <t> text <c> result <t> text </t> ship <c> lost_in_battle <t> number <c> id <t> number <c> name <t> text <c> tonnage <t> text <c> ship_type <t> text <c> location <t> text <c> disposition_of_ship <t> text </t> death <c> caused_by_ship_id <t> number <c> id <t> number <c> note <t> text <c> killed <t> number <c> injured <t> number <i> List the name and tonnage ordered by in descending alphaetical order for the names. <s> SELECT name ,  tonnage FROM ship ORDER BY name DESC </s>
--SEPARATOR--
death <c> caused_by_ship_id <t> number <c> killed <t> number <c> id <t> number <c> injured <t> number <c> note <t> text </t> ship <c> ship_type <t> text <c> disposition_of_ship <t> text <c> name <t> text <c> lost_in_battle <t> number <c> id <t> number <c> tonnage <t> text <c> location <t> text </t> battle <c> latin_commander <t> text <c> date <t> text <c> bulgarian_commander <t> text <c> name <t> text <c> id <t> number <c> result <t> text <i> List the name and tonnage ordered by in descending alphaetical order for the names. <s> SELECT name ,  tonnage FROM ship ORDER BY name DESC </s>
--SEPARATOR--
battle <c> id <t> number <c> name <t> text <c> date <t> text <c> bulgarian_commander <t> text <c> latin_commander <t> text <c> result <t> text </t> ship <c> lost_in_battle <t> number <c> id <t> number <c> name <t> text <c> tonnage <t> text <c> ship_type <t> text <c> location <t> text <c> disposition_of_ship <t> text </t> death <c> caused_by_ship_id <t> number <c> id <t> number <c> note <t> text <c> killed <t> number <c> injured <t> number <i> List the name, date and result of each battle. <s> SELECT name ,  date FROM battle </s>
--SEPARATOR--
death <c> injured <t> number <c> note <t> text <c> caused_by_ship_id <t> number <c> id <t> number <c> killed <t> number </t> ship <c> id <t> number <c> location <t> text <c> tonnage <t> text <c> name <t> text <c> ship_type <t> text <c> lost_in_battle <t> number <c> disposition_of_ship <t> text </t> battle <c> name <t> text <c> id <t> number <c> date <t> text <c> result <t> text <c> latin_commander <t> text <c> bulgarian_commander <t> text <i> List the name, date and result of each battle. <s> SELECT name ,  date FROM battle </s>
--SEPARATOR--
battle <c> id <t> number <c> name <t> text <c> date <t> text <c> bulgarian_commander <t> text <c> latin_commander <t> text <c> result <t> text </t> ship <c> lost_in_battle <t> number <c> id <t> number <c> name <t> text <c> tonnage <t> text <c> ship_type <t> text <c> location <t> text <c> disposition_of_ship <t> text </t> death <c> caused_by_ship_id <t> number <c> id <t> number <c> note <t> text <c> killed <t> number <c> injured <t> number <i> What is maximum and minimum death toll caused each time? <s> SELECT max(killed) ,  min(killed) FROM death </s>
--SEPARATOR--
death <c> injured <t> number <c> caused_by_ship_id <t> number <c> id <t> number <c> killed <t> number <c> note <t> text </t> ship <c> tonnage <t> text <c> location <t> text <c> id <t> number <c> ship_type <t> text <c> disposition_of_ship <t> text <c> name <t> text <c> lost_in_battle <t> number </t> battle <c> date <t> text <c> result <t> text <c> latin_commander <t> text <c> bulgarian_commander <t> text <c> name <t> text <c> id <t> number <i> What is maximum and minimum death toll caused each time? <s> SELECT max(killed) ,  min(killed) FROM death </s>
--SEPARATOR--
battle <c> id <t> number <c> name <t> text <c> date <t> text <c> bulgarian_commander <t> text <c> latin_commander <t> text <c> result <t> text </t> ship <c> lost_in_battle <t> number <c> id <t> number <c> name <t> text <c> tonnage <t> text <c> ship_type <t> text <c> location <t> text <c> disposition_of_ship <t> text </t> death <c> caused_by_ship_id <t> number <c> id <t> number <c> note <t> text <c> killed <t> number <c> injured <t> number <i> What is the average number of injuries caused each time? <s> SELECT avg(injured) FROM death </s>
--SEPARATOR--
battle <c> name <t> text <c> date <t> text <c> id <t> number <c> bulgarian_commander <t> text <c> result <t> text <c> latin_commander <t> text </t> ship <c> lost_in_battle <t> number <c> disposition_of_ship <t> text <c> tonnage <t> text <c> location <t> text <c> id <t> number <c> name <t> text <c> ship_type <t> text </t> death <c> id <t> number <c> note <t> text <c> injured <t> number <c> killed <t> number <c> caused_by_ship_id <t> number <i> What is the average number of injuries caused each time? <s> SELECT avg(injured) FROM death </s>
--SEPARATOR--
battle <c> id <t> number <c> name <t> text <c> date <t> text <c> bulgarian_commander <t> text <c> latin_commander <t> text <c> result <t> text </t> ship <c> lost_in_battle <t> number <c> id <t> number <c> name <t> text <c> tonnage <t> text <c> ship_type <t> text <c> location <t> text <c> disposition_of_ship <t> text </t> death <c> caused_by_ship_id <t> number <c> id <t> number <c> note <t> text <c> killed <t> number <c> injured <t> number <i> What are the death and injury situations caused by the ship with tonnage 't'? <s> SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't' </s>
--SEPARATOR--
ship <c> lost_in_battle <t> number <c> tonnage <t> text <c> location <t> text <c> ship_type <t> text <c> disposition_of_ship <t> text <c> name <t> text <c> id <t> number </t> death <c> caused_by_ship_id <t> number <c> id <t> number <c> killed <t> number <c> injured <t> number <c> note <t> text </t> battle <c> id <t> number <c> result <t> text <c> date <t> text <c> name <t> text <c> latin_commander <t> text <c> bulgarian_commander <t> text <i> What are the death and injury situations caused by the ship with tonnage 't'? <s> SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't' </s>
--SEPARATOR--
battle <c> id <t> number <c> name <t> text <c> date <t> text <c> bulgarian_commander <t> text <c> latin_commander <t> text <c> result <t> text </t> ship <c> lost_in_battle <t> number <c> id <t> number <c> name <t> text <c> tonnage <t> text <c> ship_type <t> text <c> location <t> text <c> disposition_of_ship <t> text </t> death <c> caused_by_ship_id <t> number <c> id <t> number <c> note <t> text <c> killed <t> number <c> injured <t> number <i> What are the name and results of the battles when the bulgarian commander is not 'Boril' <s> SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril' </s>
--SEPARATOR--
ship <c> name <t> text <c> id <t> number <c> tonnage <t> text <c> location <t> text <c> disposition_of_ship <t> text <c> lost_in_battle <t> number <c> ship_type <t> text </t> death <c> id <t> number <c> killed <t> number <c> caused_by_ship_id <t> number <c> note <t> text <c> injured <t> number </t> battle <c> bulgarian_commander <t> text <c> id <t> number <c> latin_commander <t> text <c> result <t> text <c> name <t> text <c> date <t> text <i> What are the name and results of the battles when the bulgarian commander is not 'Boril' <s> SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril' </s>
--SEPARATOR--
battle <c> id <t> number <c> name <t> text <c> date <t> text <c> bulgarian_commander <t> text <c> latin_commander <t> text <c> result <t> text </t> ship <c> lost_in_battle <t> number <c> id <t> number <c> name <t> text <c> tonnage <t> text <c> ship_type <t> text <c> location <t> text <c> disposition_of_ship <t> text </t> death <c> caused_by_ship_id <t> number <c> id <t> number <c> note <t> text <c> killed <t> number <c> injured <t> number <i> What are the different ids and names of the battles that lost any 'Brig' type shipes? <s> SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig' </s>
--SEPARATOR--
death <c> note <t> text <c> injured <t> number <c> id <t> number <c> caused_by_ship_id <t> number <c> killed <t> number </t> battle <c> bulgarian_commander <t> text <c> date <t> text <c> latin_commander <t> text <c> name <t> text <c> id <t> number <c> result <t> text </t> ship <c> ship_type <t> text <c> tonnage <t> text <c> location <t> text <c> id <t> number <c> lost_in_battle <t> number <c> name <t> text <c> disposition_of_ship <t> text <i> What are the different ids and names of the battles that lost any 'Brig' type shipes? <s> SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig' </s>
--SEPARATOR--
battle <c> id <t> number <c> name <t> text <c> date <t> text <c> bulgarian_commander <t> text <c> latin_commander <t> text <c> result <t> text </t> ship <c> lost_in_battle <t> number <c> id <t> number <c> name <t> text <c> tonnage <t> text <c> ship_type <t> text <c> location <t> text <c> disposition_of_ship <t> text </t> death <c> caused_by_ship_id <t> number <c> id <t> number <c> note <t> text <c> killed <t> number <c> injured <t> number <i> What are the ids and names of the battles that led to more than 10 people killed in total. <s> SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10 </s>
--SEPARATOR--
ship <c> lost_in_battle <t> number <c> name <t> text <c> location <t> text <c> id <t> number <c> tonnage <t> text <c> ship_type <t> text <c> disposition_of_ship <t> text </t> battle <c> date <t> text <c> latin_commander <t> text <c> result <t> text <c> id <t> number <c> bulgarian_commander <t> text <c> name <t> text </t> death <c> note <t> text <c> killed <t> number <c> caused_by_ship_id <t> number <c> injured <t> number <c> id <t> number <i> What are the ids and names of the battles that led to more than 10 people killed in total. <s> SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10 </s>
--SEPARATOR--
battle <c> id <t> number <c> name <t> text <c> date <t> text <c> bulgarian_commander <t> text <c> latin_commander <t> text <c> result <t> text </t> ship <c> lost_in_battle <t> number <c> id <t> number <c> name <t> text <c> tonnage <t> text <c> ship_type <t> text <c> location <t> text <c> disposition_of_ship <t> text </t> death <c> caused_by_ship_id <t> number <c> id <t> number <c> note <t> text <c> killed <t> number <c> injured <t> number <i> What is the ship id and name that caused most total injuries? <s> SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
death <c> injured <t> number <c> killed <t> number <c> note <t> text <c> caused_by_ship_id <t> number <c> id <t> number </t> ship <c> tonnage <t> text <c> lost_in_battle <t> number <c> disposition_of_ship <t> text <c> name <t> text <c> id <t> number <c> location <t> text <c> ship_type <t> text </t> battle <c> result <t> text <c> latin_commander <t> text <c> bulgarian_commander <t> text <c> id <t> number <c> date <t> text <c> name <t> text <i> What is the ship id and name that caused most total injuries? <s> SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
battle <c> id <t> number <c> name <t> text <c> date <t> text <c> bulgarian_commander <t> text <c> latin_commander <t> text <c> result <t> text </t> ship <c> lost_in_battle <t> number <c> id <t> number <c> name <t> text <c> tonnage <t> text <c> ship_type <t> text <c> location <t> text <c> disposition_of_ship <t> text </t> death <c> caused_by_ship_id <t> number <c> id <t> number <c> note <t> text <c> killed <t> number <c> injured <t> number <i> What are the distinct battle names which are between bulgarian commander 'Kaloyan' and latin commander 'Baldwin I'? <s> SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I' </s>
--SEPARATOR--
battle <c> bulgarian_commander <t> text <c> result <t> text <c> id <t> number <c> name <t> text <c> date <t> text <c> latin_commander <t> text </t> ship <c> lost_in_battle <t> number <c> name <t> text <c> location <t> text <c> disposition_of_ship <t> text <c> tonnage <t> text <c> ship_type <t> text <c> id <t> number </t> death <c> note <t> text <c> caused_by_ship_id <t> number <c> injured <t> number <c> killed <t> number <c> id <t> number <i> What are the distinct battle names which are between bulgarian commander 'Kaloyan' and latin commander 'Baldwin I'? <s> SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I' </s>
--SEPARATOR--
battle <c> id <t> number <c> name <t> text <c> date <t> text <c> bulgarian_commander <t> text <c> latin_commander <t> text <c> result <t> text </t> ship <c> lost_in_battle <t> number <c> id <t> number <c> name <t> text <c> tonnage <t> text <c> ship_type <t> text <c> location <t> text <c> disposition_of_ship <t> text </t> death <c> caused_by_ship_id <t> number <c> id <t> number <c> note <t> text <c> killed <t> number <c> injured <t> number <i> How many different results are there for the battles? <s> SELECT count(DISTINCT RESULT) FROM battle </s>
--SEPARATOR--
ship <c> id <t> number <c> disposition_of_ship <t> text <c> tonnage <t> text <c> name <t> text <c> lost_in_battle <t> number <c> ship_type <t> text <c> location <t> text </t> death <c> killed <t> number <c> id <t> number <c> note <t> text <c> injured <t> number <c> caused_by_ship_id <t> number </t> battle <c> date <t> text <c> result <t> text <c> latin_commander <t> text <c> id <t> number <c> bulgarian_commander <t> text <c> name <t> text <i> How many different results are there for the battles? <s> SELECT count(DISTINCT RESULT) FROM battle </s>
--SEPARATOR--
battle <c> id <t> number <c> name <t> text <c> date <t> text <c> bulgarian_commander <t> text <c> latin_commander <t> text <c> result <t> text </t> ship <c> lost_in_battle <t> number <c> id <t> number <c> name <t> text <c> tonnage <t> text <c> ship_type <t> text <c> location <t> text <c> disposition_of_ship <t> text </t> death <c> caused_by_ship_id <t> number <c> id <t> number <c> note <t> text <c> killed <t> number <c> injured <t> number <i> How many battles did not lose any ship with tonnage '225'? <s> SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' ); </s>
--SEPARATOR--
ship <c> lost_in_battle <t> number <c> tonnage <t> text <c> disposition_of_ship <t> text <c> location <t> text <c> ship_type <t> text <c> id <t> number <c> name <t> text </t> death <c> note <t> text <c> injured <t> number <c> killed <t> number <c> id <t> number <c> caused_by_ship_id <t> number </t> battle <c> latin_commander <t> text <c> id <t> number <c> name <t> text <c> bulgarian_commander <t> text <c> date <t> text <c> result <t> text <i> How many battles did not lose any ship with tonnage '225'? <s> SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' ); </s>
--SEPARATOR--
battle <c> id <t> number <c> name <t> text <c> date <t> text <c> bulgarian_commander <t> text <c> latin_commander <t> text <c> result <t> text </t> ship <c> lost_in_battle <t> number <c> id <t> number <c> name <t> text <c> tonnage <t> text <c> ship_type <t> text <c> location <t> text <c> disposition_of_ship <t> text </t> death <c> caused_by_ship_id <t> number <c> id <t> number <c> note <t> text <c> killed <t> number <c> injured <t> number <i> List the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta' <s> SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta' </s>
--SEPARATOR--
battle <c> date <t> text <c> latin_commander <t> text <c> result <t> text <c> bulgarian_commander <t> text <c> id <t> number <c> name <t> text </t> death <c> caused_by_ship_id <t> number <c> note <t> text <c> killed <t> number <c> injured <t> number <c> id <t> number </t> ship <c> name <t> text <c> id <t> number <c> ship_type <t> text <c> location <t> text <c> lost_in_battle <t> number <c> disposition_of_ship <t> text <c> tonnage <t> text <i> List the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta' <s> SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta' </s>
--SEPARATOR--
battle <c> id <t> number <c> name <t> text <c> date <t> text <c> bulgarian_commander <t> text <c> latin_commander <t> text <c> result <t> text </t> ship <c> lost_in_battle <t> number <c> id <t> number <c> name <t> text <c> tonnage <t> text <c> ship_type <t> text <c> location <t> text <c> disposition_of_ship <t> text </t> death <c> caused_by_ship_id <t> number <c> id <t> number <c> note <t> text <c> killed <t> number <c> injured <t> number <i> Show names, results and bulgarian commanders of the battles with no ships lost in the 'English Channel'. <s> SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel' </s>
--SEPARATOR--
death <c> injured <t> number <c> caused_by_ship_id <t> number <c> id <t> number <c> killed <t> number <c> note <t> text </t> ship <c> ship_type <t> text <c> name <t> text <c> id <t> number <c> tonnage <t> text <c> location <t> text <c> lost_in_battle <t> number <c> disposition_of_ship <t> text </t> battle <c> latin_commander <t> text <c> bulgarian_commander <t> text <c> name <t> text <c> date <t> text <c> id <t> number <c> result <t> text <i> Show names, results and bulgarian commanders of the battles with no ships lost in the 'English Channel'. <s> SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel' </s>
--SEPARATOR--
battle <c> id <t> number <c> name <t> text <c> date <t> text <c> bulgarian_commander <t> text <c> latin_commander <t> text <c> result <t> text </t> ship <c> lost_in_battle <t> number <c> id <t> number <c> name <t> text <c> tonnage <t> text <c> ship_type <t> text <c> location <t> text <c> disposition_of_ship <t> text </t> death <c> caused_by_ship_id <t> number <c> id <t> number <c> note <t> text <c> killed <t> number <c> injured <t> number <i> What are the notes of the death events which has substring 'East'? <s> SELECT note FROM death WHERE note LIKE '%East%' </s>
--SEPARATOR--
death <c> killed <t> number <c> note <t> text <c> injured <t> number <c> caused_by_ship_id <t> number <c> id <t> number </t> ship <c> tonnage <t> text <c> ship_type <t> text <c> lost_in_battle <t> number <c> location <t> text <c> disposition_of_ship <t> text <c> id <t> number <c> name <t> text </t> battle <c> latin_commander <t> text <c> name <t> text <c> result <t> text <c> id <t> number <c> bulgarian_commander <t> text <c> date <t> text <i> What are the notes of the death events which has substring 'East'? <s> SELECT note FROM death WHERE note LIKE '%East%' </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> what are all the addresses including line 1 and line 2? <s> SELECT line_1 ,  line_2 FROM addresses </s>
--SEPARATOR--
Degree_Programs <c> degree_program_id <t> number <c> other_details <t> text <c> degree_summary_description <t> text <c> degree_summary_name <t> text <c> department_id <t> number </t> Student_Enrolment_Courses <c> course_id <t> number <c> student_enrolment_id <t> number <c> student_course_id <t> number </t> Students <c> student_id <t> number <c> date_left <t> time <c> first_name <t> text <c> permanent_address_id <t> number <c> current_address_id <t> number <c> cell_mobile_number <t> text <c> date_first_registered <t> time <c> last_name <t> text <c> email_address <t> text <c> other_student_details <t> text <c> ssn <t> text <c> middle_name <t> text </t> Transcripts <c> transcript_date <t> time <c> transcript_id <t> number <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number </t> Student_Enrolment <c> student_id <t> number <c> semester_id <t> number <c> other_details <t> text <c> degree_program_id <t> number <c> student_enrolment_id <t> number </t> Addresses <c> state_province_county <t> text <c> city <t> text <c> line_1 <t> text <c> address_id <t> number <c> line_2 <t> text <c> country <t> text <c> zip_postcode <t> text <c> other_address_details <t> text <c> line_3 <t> text </t> Semesters <c> semester_id <t> number <c> semester_description <t> text <c> semester_name <t> text <c> other_details <t> text </t> Sections <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text <c> section_id <t> number </t> Departments <c> other_details <t> text <c> department_description <t> text <c> department_name <t> text <c> department_id <t> number </t> Courses <c> course_description <t> text <c> course_id <t> number <c> other_details <t> text <c> course_name <t> text <i> what are all the addresses including line 1 and line 2? <s> SELECT line_1 ,  line_2 FROM addresses </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> What is the first and second line for all addresses? <s> SELECT line_1 ,  line_2 FROM addresses </s>
--SEPARATOR--
Degree_Programs <c> degree_summary_description <t> text <c> degree_program_id <t> number <c> department_id <t> number <c> other_details <t> text <c> degree_summary_name <t> text </t> Transcripts <c> transcript_id <t> number <c> other_details <t> text <c> transcript_date <t> time </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> student_enrolment_id <t> number <c> course_id <t> number </t> Transcript_Contents <c> transcript_id <t> number <c> student_course_id <t> number </t> Addresses <c> state_province_county <t> text <c> city <t> text <c> line_3 <t> text <c> address_id <t> number <c> zip_postcode <t> text <c> other_address_details <t> text <c> country <t> text <c> line_1 <t> text <c> line_2 <t> text </t> Students <c> other_student_details <t> text <c> middle_name <t> text <c> last_name <t> text <c> permanent_address_id <t> number <c> cell_mobile_number <t> text <c> first_name <t> text <c> date_first_registered <t> time <c> email_address <t> text <c> date_left <t> time <c> student_id <t> number <c> ssn <t> text <c> current_address_id <t> number </t> Student_Enrolment <c> semester_id <t> number <c> degree_program_id <t> number <c> other_details <t> text <c> student_enrolment_id <t> number <c> student_id <t> number </t> Sections <c> section_description <t> text <c> other_details <t> text <c> course_id <t> number <c> section_id <t> number <c> section_name <t> text </t> Departments <c> other_details <t> text <c> department_name <t> text <c> department_description <t> text <c> department_id <t> number </t> Courses <c> course_description <t> text <c> course_name <t> text <c> other_details <t> text <c> course_id <t> number </t> Semesters <c> semester_description <t> text <c> semester_id <t> number <c> other_details <t> text <c> semester_name <t> text <i> What is the first and second line for all addresses? <s> SELECT line_1 ,  line_2 FROM addresses </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> How many courses in total are listed? <s> SELECT count(*) FROM Courses </s>
--SEPARATOR--
Degree_Programs <c> department_id <t> number <c> degree_summary_description <t> text <c> degree_summary_name <t> text <c> other_details <t> text <c> degree_program_id <t> number </t> Sections <c> section_id <t> number <c> section_description <t> text <c> course_id <t> number <c> section_name <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> other_details <t> text <c> department_description <t> text <c> department_name <t> text </t> Semesters <c> semester_name <t> text <c> semester_id <t> number <c> other_details <t> text <c> semester_description <t> text </t> Courses <c> course_description <t> text <c> course_id <t> number <c> other_details <t> text <c> course_name <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number </t> Transcripts <c> other_details <t> text <c> transcript_id <t> number <c> transcript_date <t> time </t> Students <c> ssn <t> text <c> current_address_id <t> number <c> permanent_address_id <t> number <c> middle_name <t> text <c> cell_mobile_number <t> text <c> last_name <t> text <c> first_name <t> text <c> other_student_details <t> text <c> date_left <t> time <c> date_first_registered <t> time <c> student_id <t> number <c> email_address <t> text </t> Student_Enrolment_Courses <c> course_id <t> number <c> student_enrolment_id <t> number <c> student_course_id <t> number </t> Student_Enrolment <c> other_details <t> text <c> semester_id <t> number <c> degree_program_id <t> number <c> student_id <t> number <c> student_enrolment_id <t> number </t> Addresses <c> line_1 <t> text <c> line_2 <t> text <c> state_province_county <t> text <c> zip_postcode <t> text <c> country <t> text <c> city <t> text <c> line_3 <t> text <c> address_id <t> number <c> other_address_details <t> text <i> How many courses in total are listed? <s> SELECT count(*) FROM Courses </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> How many courses are there? <s> SELECT count(*) FROM Courses </s>
--SEPARATOR--
Semesters <c> semester_description <t> text <c> semester_name <t> text <c> semester_id <t> number <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number </t> Transcripts <c> transcript_date <t> time <c> transcript_id <t> number <c> other_details <t> text </t> Courses <c> other_details <t> text <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text </t> Students <c> date_left <t> time <c> cell_mobile_number <t> text <c> first_name <t> text <c> date_first_registered <t> time <c> current_address_id <t> number <c> middle_name <t> text <c> permanent_address_id <t> number <c> other_student_details <t> text <c> student_id <t> number <c> email_address <t> text <c> ssn <t> text <c> last_name <t> text </t> Sections <c> section_description <t> text <c> other_details <t> text <c> section_id <t> number <c> section_name <t> text <c> course_id <t> number </t> Addresses <c> address_id <t> number <c> country <t> text <c> state_province_county <t> text <c> line_2 <t> text <c> line_1 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> other_address_details <t> text </t> Student_Enrolment <c> other_details <t> text <c> student_id <t> number <c> semester_id <t> number <c> degree_program_id <t> number <c> student_enrolment_id <t> number </t> Departments <c> department_description <t> text <c> other_details <t> text <c> department_id <t> number <c> department_name <t> text </t> Degree_Programs <c> other_details <t> text <c> degree_summary_description <t> text <c> department_id <t> number <c> degree_program_id <t> number <c> degree_summary_name <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> student_enrolment_id <t> number <c> course_id <t> number <i> How many courses are there? <s> SELECT count(*) FROM Courses </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> How is the math course described? <s> SELECT course_description FROM Courses WHERE course_name  =  'math' </s>
--SEPARATOR--
Sections <c> course_id <t> number <c> other_details <t> text <c> section_name <t> text <c> section_description <t> text <c> section_id <t> number </t> Departments <c> department_description <t> text <c> department_name <t> text <c> department_id <t> number <c> other_details <t> text </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Students <c> ssn <t> text <c> first_name <t> text <c> cell_mobile_number <t> text <c> other_student_details <t> text <c> last_name <t> text <c> permanent_address_id <t> number <c> date_first_registered <t> time <c> current_address_id <t> number <c> email_address <t> text <c> middle_name <t> text <c> date_left <t> time <c> student_id <t> number </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> other_details <t> text <c> semester_description <t> text </t> Student_Enrolment <c> degree_program_id <t> number <c> semester_id <t> number <c> other_details <t> text <c> student_enrolment_id <t> number <c> student_id <t> number </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> student_enrolment_id <t> number <c> course_id <t> number </t> Addresses <c> country <t> text <c> line_2 <t> text <c> other_address_details <t> text <c> city <t> text <c> line_1 <t> text <c> state_province_county <t> text <c> address_id <t> number <c> zip_postcode <t> text <c> line_3 <t> text </t> Courses <c> course_name <t> text <c> course_id <t> number <c> other_details <t> text <c> course_description <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> other_details <t> text <c> degree_summary_description <t> text <c> degree_summary_name <t> text <i> How is the math course described? <s> SELECT course_description FROM Courses WHERE course_name  =  'math' </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> What are the descriptions for all the math courses? <s> SELECT course_description FROM Courses WHERE course_name  =  'math' </s>
--SEPARATOR--
Student_Enrolment <c> student_enrolment_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text <c> degree_program_id <t> number </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> student_enrolment_id <t> number <c> course_id <t> number </t> Sections <c> section_description <t> text <c> section_name <t> text <c> section_id <t> number <c> course_id <t> number <c> other_details <t> text </t> Transcripts <c> other_details <t> text <c> transcript_date <t> time <c> transcript_id <t> number </t> Semesters <c> semester_name <t> text <c> semester_description <t> text <c> semester_id <t> number <c> other_details <t> text </t> Courses <c> course_id <t> number <c> other_details <t> text <c> course_name <t> text <c> course_description <t> text </t> Degree_Programs <c> other_details <t> text <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_program_id <t> number <c> degree_summary_description <t> text </t> Addresses <c> line_1 <t> text <c> state_province_county <t> text <c> line_2 <t> text <c> address_id <t> number <c> line_3 <t> text <c> zip_postcode <t> text <c> other_address_details <t> text <c> country <t> text <c> city <t> text </t> Students <c> first_name <t> text <c> email_address <t> text <c> date_first_registered <t> time <c> middle_name <t> text <c> date_left <t> time <c> permanent_address_id <t> number <c> other_student_details <t> text <c> last_name <t> text <c> current_address_id <t> number <c> cell_mobile_number <t> text <c> ssn <t> text <c> student_id <t> number </t> Transcript_Contents <c> transcript_id <t> number <c> student_course_id <t> number </t> Departments <c> other_details <t> text <c> department_name <t> text <c> department_id <t> number <c> department_description <t> text <i> What are the descriptions for all the math courses? <s> SELECT course_description FROM Courses WHERE course_name  =  'math' </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> What is the zip code of the address in the city Port Chelsea? <s> SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea' </s>
--SEPARATOR--
Departments <c> other_details <t> text <c> department_description <t> text <c> department_name <t> text <c> department_id <t> number </t> Sections <c> section_description <t> text <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> other_details <t> text </t> Courses <c> course_description <t> text <c> other_details <t> text <c> course_name <t> text <c> course_id <t> number </t> Degree_Programs <c> other_details <t> text <c> degree_program_id <t> number <c> degree_summary_description <t> text <c> department_id <t> number <c> degree_summary_name <t> text </t> Transcripts <c> other_details <t> text <c> transcript_id <t> number <c> transcript_date <t> time </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number </t> Addresses <c> address_id <t> number <c> other_address_details <t> text <c> state_province_county <t> text <c> line_3 <t> text <c> country <t> text <c> zip_postcode <t> text <c> city <t> text <c> line_2 <t> text <c> line_1 <t> text </t> Semesters <c> semester_name <t> text <c> other_details <t> text <c> semester_description <t> text <c> semester_id <t> number </t> Students <c> email_address <t> text <c> student_id <t> number <c> current_address_id <t> number <c> last_name <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> middle_name <t> text <c> cell_mobile_number <t> text <c> permanent_address_id <t> number <c> other_student_details <t> text <c> first_name <t> text </t> Student_Enrolment <c> student_id <t> number <c> other_details <t> text <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number </t> Student_Enrolment_Courses <c> course_id <t> number <c> student_enrolment_id <t> number <c> student_course_id <t> number <i> What is the zip code of the address in the city Port Chelsea? <s> SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea' </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> What is the zip code for Port Chelsea? <s> SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea' </s>
--SEPARATOR--
Transcripts <c> other_details <t> text <c> transcript_date <t> time <c> transcript_id <t> number </t> Courses <c> course_description <t> text <c> course_name <t> text <c> course_id <t> number <c> other_details <t> text </t> Departments <c> department_id <t> number <c> other_details <t> text <c> department_name <t> text <c> department_description <t> text </t> Student_Enrolment <c> student_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> other_details <t> text <c> student_enrolment_id <t> number </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number </t> Students <c> cell_mobile_number <t> text <c> date_left <t> time <c> date_first_registered <t> time <c> last_name <t> text <c> email_address <t> text <c> permanent_address_id <t> number <c> ssn <t> text <c> middle_name <t> text <c> other_student_details <t> text <c> student_id <t> number <c> first_name <t> text <c> current_address_id <t> number </t> Semesters <c> semester_id <t> number <c> other_details <t> text <c> semester_name <t> text <c> semester_description <t> text </t> Degree_Programs <c> degree_summary_description <t> text <c> other_details <t> text <c> department_id <t> number <c> degree_program_id <t> number <c> degree_summary_name <t> text </t> Student_Enrolment_Courses <c> course_id <t> number <c> student_enrolment_id <t> number <c> student_course_id <t> number </t> Sections <c> other_details <t> text <c> section_description <t> text <c> section_name <t> text <c> course_id <t> number <c> section_id <t> number </t> Addresses <c> line_1 <t> text <c> country <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> line_2 <t> text <c> city <t> text <c> address_id <t> number <c> line_3 <t> text <c> other_address_details <t> text <i> What is the zip code for Port Chelsea? <s> SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea' </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> Which department offers the most number of degrees? List department name and id. <s> SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Courses <c> course_name <t> text <c> other_details <t> text <c> course_id <t> number <c> course_description <t> text </t> Departments <c> department_description <t> text <c> department_id <t> number <c> department_name <t> text <c> other_details <t> text </t> Students <c> last_name <t> text <c> current_address_id <t> number <c> ssn <t> text <c> date_left <t> time <c> cell_mobile_number <t> text <c> email_address <t> text <c> middle_name <t> text <c> permanent_address_id <t> number <c> student_id <t> number <c> first_name <t> text <c> date_first_registered <t> time <c> other_student_details <t> text </t> Sections <c> course_id <t> number <c> section_description <t> text <c> section_name <t> text <c> section_id <t> number <c> other_details <t> text </t> Semesters <c> other_details <t> text <c> semester_name <t> text <c> semester_description <t> text <c> semester_id <t> number </t> Degree_Programs <c> degree_summary_name <t> text <c> department_id <t> number <c> degree_summary_description <t> text <c> degree_program_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_enrolment_id <t> number <c> course_id <t> number <c> student_course_id <t> number </t> Transcripts <c> transcript_date <t> time <c> other_details <t> text <c> transcript_id <t> number </t> Transcript_Contents <c> transcript_id <t> number <c> student_course_id <t> number </t> Student_Enrolment <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> student_enrolment_id <t> number <c> other_details <t> text </t> Addresses <c> country <t> text <c> line_3 <t> text <c> line_1 <t> text <c> city <t> text <c> zip_postcode <t> text <c> other_address_details <t> text <c> state_province_county <t> text <c> address_id <t> number <c> line_2 <t> text <i> Which department offers the most number of degrees? List department name and id. <s> SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> What is the name and id of the department with the most number of degrees ? <s> select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1 </s>
--SEPARATOR--
Students <c> date_first_registered <t> time <c> student_id <t> number <c> permanent_address_id <t> number <c> cell_mobile_number <t> text <c> other_student_details <t> text <c> middle_name <t> text <c> email_address <t> text <c> date_left <t> time <c> last_name <t> text <c> ssn <t> text <c> first_name <t> text <c> current_address_id <t> number </t> Student_Enrolment_Courses <c> course_id <t> number <c> student_enrolment_id <t> number <c> student_course_id <t> number </t> Departments <c> other_details <t> text <c> department_description <t> text <c> department_name <t> text <c> department_id <t> number </t> Semesters <c> semester_name <t> text <c> other_details <t> text <c> semester_description <t> text <c> semester_id <t> number </t> Courses <c> course_name <t> text <c> course_description <t> text <c> course_id <t> number <c> other_details <t> text </t> Degree_Programs <c> other_details <t> text <c> degree_summary_description <t> text <c> department_id <t> number <c> degree_program_id <t> number <c> degree_summary_name <t> text </t> Transcript_Contents <c> transcript_id <t> number <c> student_course_id <t> number </t> Addresses <c> line_3 <t> text <c> city <t> text <c> other_address_details <t> text <c> state_province_county <t> text <c> address_id <t> number <c> zip_postcode <t> text <c> line_1 <t> text <c> line_2 <t> text <c> country <t> text </t> Transcripts <c> transcript_date <t> time <c> other_details <t> text <c> transcript_id <t> number </t> Student_Enrolment <c> student_enrolment_id <t> number <c> other_details <t> text <c> student_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number </t> Sections <c> section_description <t> text <c> section_id <t> number <c> other_details <t> text <c> section_name <t> text <c> course_id <t> number <i> What is the name and id of the department with the most number of degrees ? <s> select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1 </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> How many departments offer any degree? <s> SELECT count(DISTINCT department_id) FROM Degree_Programs </s>
--SEPARATOR--
Semesters <c> semester_id <t> number <c> semester_name <t> text <c> other_details <t> text <c> semester_description <t> text </t> Courses <c> course_name <t> text <c> course_description <t> text <c> course_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Degree_Programs <c> degree_summary_description <t> text <c> department_id <t> number <c> degree_program_id <t> number <c> degree_summary_name <t> text <c> other_details <t> text </t> Sections <c> section_description <t> text <c> section_id <t> number <c> section_name <t> text <c> other_details <t> text <c> course_id <t> number </t> Student_Enrolment <c> student_enrolment_id <t> number <c> student_id <t> number <c> other_details <t> text <c> degree_program_id <t> number <c> semester_id <t> number </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number </t> Students <c> permanent_address_id <t> number <c> cell_mobile_number <t> text <c> email_address <t> text <c> other_student_details <t> text <c> last_name <t> text <c> middle_name <t> text <c> current_address_id <t> number <c> first_name <t> text <c> date_left <t> time <c> date_first_registered <t> time <c> ssn <t> text <c> student_id <t> number </t> Addresses <c> zip_postcode <t> text <c> other_address_details <t> text <c> line_1 <t> text <c> city <t> text <c> line_2 <t> text <c> line_3 <t> text <c> state_province_county <t> text <c> address_id <t> number <c> country <t> text </t> Transcripts <c> transcript_id <t> number <c> other_details <t> text <c> transcript_date <t> time </t> Departments <c> department_id <t> number <c> other_details <t> text <c> department_description <t> text <c> department_name <t> text <i> How many departments offer any degree? <s> SELECT count(DISTINCT department_id) FROM Degree_Programs </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> How many different departments offer degrees? <s> SELECT count(DISTINCT department_id) FROM Degree_Programs </s>
--SEPARATOR--
Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Students <c> date_first_registered <t> time <c> cell_mobile_number <t> text <c> ssn <t> text <c> middle_name <t> text <c> date_left <t> time <c> current_address_id <t> number <c> other_student_details <t> text <c> first_name <t> text <c> student_id <t> number <c> permanent_address_id <t> number <c> email_address <t> text <c> last_name <t> text </t> Transcripts <c> transcript_id <t> number <c> other_details <t> text <c> transcript_date <t> time </t> Departments <c> department_description <t> text <c> department_name <t> text <c> other_details <t> text <c> department_id <t> number </t> Degree_Programs <c> other_details <t> text <c> degree_program_id <t> number <c> degree_summary_name <t> text <c> department_id <t> number <c> degree_summary_description <t> text </t> Transcript_Contents <c> transcript_id <t> number <c> student_course_id <t> number </t> Addresses <c> line_2 <t> text <c> country <t> text <c> line_3 <t> text <c> state_province_county <t> text <c> line_1 <t> text <c> zip_postcode <t> text <c> other_address_details <t> text <c> city <t> text <c> address_id <t> number </t> Sections <c> other_details <t> text <c> section_id <t> number <c> section_description <t> text <c> section_name <t> text <c> course_id <t> number </t> Courses <c> course_name <t> text <c> course_id <t> number <c> course_description <t> text <c> other_details <t> text </t> Semesters <c> semester_name <t> text <c> other_details <t> text <c> semester_description <t> text <c> semester_id <t> number </t> Student_Enrolment <c> semester_id <t> number <c> student_id <t> number <c> student_enrolment_id <t> number <c> other_details <t> text <c> degree_program_id <t> number <i> How many different departments offer degrees? <s> SELECT count(DISTINCT department_id) FROM Degree_Programs </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> How many different degree names are offered? <s> SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs </s>
--SEPARATOR--
Courses <c> other_details <t> text <c> course_name <t> text <c> course_id <t> number <c> course_description <t> text </t> Transcripts <c> transcript_date <t> time <c> transcript_id <t> number <c> other_details <t> text </t> Students <c> cell_mobile_number <t> text <c> permanent_address_id <t> number <c> date_first_registered <t> time <c> student_id <t> number <c> middle_name <t> text <c> ssn <t> text <c> first_name <t> text <c> last_name <t> text <c> email_address <t> text <c> date_left <t> time <c> other_student_details <t> text <c> current_address_id <t> number </t> Degree_Programs <c> degree_summary_name <t> text <c> other_details <t> text <c> department_id <t> number <c> degree_program_id <t> number <c> degree_summary_description <t> text </t> Departments <c> department_name <t> text <c> department_id <t> number <c> department_description <t> text <c> other_details <t> text </t> Addresses <c> address_id <t> number <c> other_address_details <t> text <c> zip_postcode <t> text <c> city <t> text <c> country <t> text <c> line_1 <t> text <c> line_3 <t> text <c> state_province_county <t> text <c> line_2 <t> text </t> Student_Enrolment_Courses <c> student_enrolment_id <t> number <c> course_id <t> number <c> student_course_id <t> number </t> Sections <c> section_description <t> text <c> course_id <t> number <c> other_details <t> text <c> section_name <t> text <c> section_id <t> number </t> Student_Enrolment <c> semester_id <t> number <c> degree_program_id <t> number <c> student_enrolment_id <t> number <c> other_details <t> text <c> student_id <t> number </t> Semesters <c> semester_description <t> text <c> semester_name <t> text <c> other_details <t> text <c> semester_id <t> number </t> Transcript_Contents <c> transcript_id <t> number <c> student_course_id <t> number <i> How many different degree names are offered? <s> SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> How many different degrees are offered? <s> SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs </s>
--SEPARATOR--
Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Departments <c> department_description <t> text <c> other_details <t> text <c> department_id <t> number <c> department_name <t> text </t> Semesters <c> other_details <t> text <c> semester_id <t> number <c> semester_description <t> text <c> semester_name <t> text </t> Addresses <c> city <t> text <c> country <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> address_id <t> number <c> line_3 <t> text <c> line_2 <t> text <c> line_1 <t> text <c> other_address_details <t> text </t> Student_Enrolment <c> other_details <t> text <c> degree_program_id <t> number <c> student_id <t> number <c> semester_id <t> number <c> student_enrolment_id <t> number </t> Students <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> other_student_details <t> text <c> permanent_address_id <t> number <c> student_id <t> number <c> email_address <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> current_address_id <t> number <c> first_name <t> text <c> ssn <t> text </t> Courses <c> course_name <t> text <c> course_id <t> number <c> other_details <t> text <c> course_description <t> text </t> Transcript_Contents <c> transcript_id <t> number <c> student_course_id <t> number </t> Sections <c> course_id <t> number <c> section_name <t> text <c> section_id <t> number <c> section_description <t> text <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> other_details <t> text <c> transcript_date <t> time <i> How many different degrees are offered? <s> SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> How many degrees does the engineering department offer? <s> SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer' </s>
--SEPARATOR--
Degree_Programs <c> degree_summary_description <t> text <c> other_details <t> text <c> degree_summary_name <t> text <c> department_id <t> number <c> degree_program_id <t> number </t> Semesters <c> other_details <t> text <c> semester_name <t> text <c> semester_id <t> number <c> semester_description <t> text </t> Students <c> date_left <t> time <c> ssn <t> text <c> email_address <t> text <c> cell_mobile_number <t> text <c> last_name <t> text <c> date_first_registered <t> time <c> first_name <t> text <c> middle_name <t> text <c> student_id <t> number <c> permanent_address_id <t> number <c> other_student_details <t> text <c> current_address_id <t> number </t> Addresses <c> other_address_details <t> text <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> zip_postcode <t> text <c> city <t> text <c> address_id <t> number <c> state_province_county <t> text <c> country <t> text </t> Student_Enrolment <c> other_details <t> text <c> degree_program_id <t> number <c> student_enrolment_id <t> number <c> semester_id <t> number <c> student_id <t> number </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number </t> Transcripts <c> other_details <t> text <c> transcript_date <t> time <c> transcript_id <t> number </t> Student_Enrolment_Courses <c> course_id <t> number <c> student_course_id <t> number <c> student_enrolment_id <t> number </t> Departments <c> other_details <t> text <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text </t> Sections <c> course_id <t> number <c> section_id <t> number <c> section_name <t> text <c> other_details <t> text <c> section_description <t> text </t> Courses <c> course_description <t> text <c> course_id <t> number <c> other_details <t> text <c> course_name <t> text <i> How many degrees does the engineering department offer? <s> SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer' </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> How many degrees does the engineering department have? <s> SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer' </s>
--SEPARATOR--
Student_Enrolment <c> other_details <t> text <c> semester_id <t> number <c> student_id <t> number <c> degree_program_id <t> number <c> student_enrolment_id <t> number </t> Students <c> middle_name <t> text <c> current_address_id <t> number <c> other_student_details <t> text <c> email_address <t> text <c> ssn <t> text <c> cell_mobile_number <t> text <c> last_name <t> text <c> permanent_address_id <t> number <c> date_first_registered <t> time <c> date_left <t> time <c> student_id <t> number <c> first_name <t> text </t> Semesters <c> other_details <t> text <c> semester_description <t> text <c> semester_id <t> number <c> semester_name <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number </t> Courses <c> course_id <t> number <c> course_description <t> text <c> other_details <t> text <c> course_name <t> text </t> Departments <c> other_details <t> text <c> department_description <t> text <c> department_id <t> number <c> department_name <t> text </t> Transcripts <c> other_details <t> text <c> transcript_date <t> time <c> transcript_id <t> number </t> Sections <c> section_name <t> text <c> section_description <t> text <c> course_id <t> number <c> other_details <t> text <c> section_id <t> number </t> Addresses <c> line_1 <t> text <c> line_3 <t> text <c> city <t> text <c> other_address_details <t> text <c> line_2 <t> text <c> state_province_county <t> text <c> country <t> text <c> address_id <t> number <c> zip_postcode <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> other_details <t> text <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> department_id <t> number </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number <i> How many degrees does the engineering department have? <s> SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer' </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> What are the names and descriptions of all the sections? <s> SELECT section_name ,  section_description FROM Sections </s>
--SEPARATOR--
Transcript_Contents <c> transcript_id <t> number <c> student_course_id <t> number </t> Students <c> date_first_registered <t> time <c> current_address_id <t> number <c> permanent_address_id <t> number <c> ssn <t> text <c> date_left <t> time <c> cell_mobile_number <t> text <c> middle_name <t> text <c> other_student_details <t> text <c> last_name <t> text <c> first_name <t> text <c> email_address <t> text <c> student_id <t> number </t> Degree_Programs <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> degree_program_id <t> number <c> other_details <t> text <c> department_id <t> number </t> Addresses <c> line_2 <t> text <c> address_id <t> number <c> line_1 <t> text <c> country <t> text <c> other_address_details <t> text <c> line_3 <t> text <c> city <t> text <c> state_province_county <t> text <c> zip_postcode <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> other_details <t> text <c> student_id <t> number <c> semester_id <t> number </t> Student_Enrolment_Courses <c> course_id <t> number <c> student_course_id <t> number <c> student_enrolment_id <t> number </t> Sections <c> course_id <t> number <c> section_description <t> text <c> section_name <t> text <c> section_id <t> number <c> other_details <t> text </t> Courses <c> other_details <t> text <c> course_description <t> text <c> course_id <t> number <c> course_name <t> text </t> Departments <c> department_id <t> number <c> department_description <t> text <c> department_name <t> text <c> other_details <t> text </t> Transcripts <c> transcript_date <t> time <c> transcript_id <t> number <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_description <t> text <c> semester_name <t> text <c> other_details <t> text <i> What are the names and descriptions of all the sections? <s> SELECT section_name ,  section_description FROM Sections </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> What are the names and descriptions for all the sections? <s> SELECT section_name ,  section_description FROM Sections </s>
--SEPARATOR--
Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number </t> Departments <c> department_name <t> text <c> department_description <t> text <c> department_id <t> number <c> other_details <t> text </t> Students <c> ssn <t> text <c> middle_name <t> text <c> cell_mobile_number <t> text <c> last_name <t> text <c> email_address <t> text <c> other_student_details <t> text <c> student_id <t> number <c> current_address_id <t> number <c> date_first_registered <t> time <c> permanent_address_id <t> number <c> date_left <t> time <c> first_name <t> text </t> Semesters <c> semester_name <t> text <c> semester_id <t> number <c> other_details <t> text <c> semester_description <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> student_id <t> number <c> semester_id <t> number <c> other_details <t> text </t> Addresses <c> line_2 <t> text <c> address_id <t> number <c> state_province_county <t> text <c> line_1 <t> text <c> line_3 <t> text <c> zip_postcode <t> text <c> city <t> text <c> country <t> text <c> other_address_details <t> text </t> Degree_Programs <c> other_details <t> text <c> degree_program_id <t> number <c> degree_summary_description <t> text <c> department_id <t> number <c> degree_summary_name <t> text </t> Courses <c> course_name <t> text <c> course_id <t> number <c> other_details <t> text <c> course_description <t> text </t> Student_Enrolment_Courses <c> course_id <t> number <c> student_enrolment_id <t> number <c> student_course_id <t> number </t> Sections <c> section_id <t> number <c> section_description <t> text <c> section_name <t> text <c> other_details <t> text <c> course_id <t> number </t> Transcripts <c> transcript_date <t> time <c> other_details <t> text <c> transcript_id <t> number <i> What are the names and descriptions for all the sections? <s> SELECT section_name ,  section_description FROM Sections </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> What are the names and id of courses having at most 2 sections? <s> SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2 </s>
--SEPARATOR--
Student_Enrolment <c> degree_program_id <t> number <c> student_id <t> number <c> student_enrolment_id <t> number <c> semester_id <t> number <c> other_details <t> text </t> Addresses <c> line_3 <t> text <c> city <t> text <c> address_id <t> number <c> zip_postcode <t> text <c> other_address_details <t> text <c> line_2 <t> text <c> state_province_county <t> text <c> line_1 <t> text <c> country <t> text </t> Courses <c> course_description <t> text <c> other_details <t> text <c> course_id <t> number <c> course_name <t> text </t> Semesters <c> semester_id <t> number <c> semester_description <t> text <c> semester_name <t> text <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> student_enrolment_id <t> number <c> course_id <t> number </t> Sections <c> section_description <t> text <c> section_id <t> number <c> section_name <t> text <c> other_details <t> text <c> course_id <t> number </t> Degree_Programs <c> department_id <t> number <c> other_details <t> text <c> degree_program_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text </t> Departments <c> department_id <t> number <c> other_details <t> text <c> department_description <t> text <c> department_name <t> text </t> Transcript_Contents <c> transcript_id <t> number <c> student_course_id <t> number </t> Transcripts <c> transcript_id <t> number <c> other_details <t> text <c> transcript_date <t> time </t> Students <c> current_address_id <t> number <c> first_name <t> text <c> last_name <t> text <c> ssn <t> text <c> middle_name <t> text <c> other_student_details <t> text <c> permanent_address_id <t> number <c> email_address <t> text <c> date_first_registered <t> time <c> student_id <t> number <c> cell_mobile_number <t> text <c> date_left <t> time <i> What are the names and id of courses having at most 2 sections? <s> SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2 </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> What are the names and ids of every course with less than 2 sections? <s> SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2 </s>
--SEPARATOR--
Sections <c> section_description <t> text <c> section_id <t> number <c> other_details <t> text <c> course_id <t> number <c> section_name <t> text </t> Transcript_Contents <c> transcript_id <t> number <c> student_course_id <t> number </t> Courses <c> other_details <t> text <c> course_name <t> text <c> course_description <t> text <c> course_id <t> number </t> Student_Enrolment <c> student_enrolment_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text <c> degree_program_id <t> number </t> Semesters <c> other_details <t> text <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text </t> Addresses <c> line_1 <t> text <c> country <t> text <c> city <t> text <c> line_3 <t> text <c> zip_postcode <t> text <c> line_2 <t> text <c> address_id <t> number <c> state_province_county <t> text <c> other_address_details <t> text </t> Departments <c> department_description <t> text <c> department_name <t> text <c> department_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Students <c> student_id <t> number <c> other_student_details <t> text <c> date_left <t> time <c> permanent_address_id <t> number <c> current_address_id <t> number <c> date_first_registered <t> time <c> middle_name <t> text <c> cell_mobile_number <t> text <c> ssn <t> text <c> last_name <t> text <c> email_address <t> text <c> first_name <t> text </t> Degree_Programs <c> other_details <t> text <c> department_id <t> number <c> degree_program_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text </t> Transcripts <c> other_details <t> text <c> transcript_date <t> time <c> transcript_id <t> number <i> What are the names and ids of every course with less than 2 sections? <s> SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2 </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> List the section_name in reversed lexicographical order. <s> SELECT section_name FROM Sections ORDER BY section_name DESC </s>
--SEPARATOR--
Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Semesters <c> semester_description <t> text <c> other_details <t> text <c> semester_name <t> text <c> semester_id <t> number </t> Transcript_Contents <c> transcript_id <t> number <c> student_course_id <t> number </t> Courses <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text <c> course_id <t> number </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> student_enrolment_id <t> number <c> course_id <t> number </t> Degree_Programs <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> degree_program_id <t> number <c> other_details <t> text <c> department_id <t> number </t> Departments <c> department_name <t> text <c> other_details <t> text <c> department_id <t> number <c> department_description <t> text </t> Sections <c> section_name <t> text <c> course_id <t> number <c> section_id <t> number <c> section_description <t> text <c> other_details <t> text </t> Addresses <c> zip_postcode <t> text <c> address_id <t> number <c> line_1 <t> text <c> country <t> text <c> state_province_county <t> text <c> other_address_details <t> text <c> city <t> text <c> line_2 <t> text <c> line_3 <t> text </t> Students <c> email_address <t> text <c> middle_name <t> text <c> permanent_address_id <t> number <c> student_id <t> number <c> first_name <t> text <c> ssn <t> text <c> current_address_id <t> number <c> date_first_registered <t> time <c> other_student_details <t> text <c> date_left <t> time <c> last_name <t> text <c> cell_mobile_number <t> text </t> Student_Enrolment <c> student_id <t> number <c> student_enrolment_id <t> number <c> semester_id <t> number <c> degree_program_id <t> number <c> other_details <t> text <i> List the section_name in reversed lexicographical order. <s> SELECT section_name FROM Sections ORDER BY section_name DESC </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> What are the names of the sections in reverse alphabetical order? <s> SELECT section_name FROM Sections ORDER BY section_name DESC </s>
--SEPARATOR--
Transcripts <c> transcript_date <t> time <c> transcript_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> student_enrolment_id <t> number <c> course_id <t> number </t> Students <c> student_id <t> number <c> date_left <t> time <c> last_name <t> text <c> cell_mobile_number <t> text <c> middle_name <t> text <c> first_name <t> text <c> email_address <t> text <c> permanent_address_id <t> number <c> date_first_registered <t> time <c> other_student_details <t> text <c> current_address_id <t> number <c> ssn <t> text </t> Transcript_Contents <c> transcript_id <t> number <c> student_course_id <t> number </t> Departments <c> department_description <t> text <c> department_id <t> number <c> other_details <t> text <c> department_name <t> text </t> Degree_Programs <c> degree_summary_name <t> text <c> other_details <t> text <c> degree_program_id <t> number <c> degree_summary_description <t> text <c> department_id <t> number </t> Sections <c> section_description <t> text <c> other_details <t> text <c> course_id <t> number <c> section_id <t> number <c> section_name <t> text </t> Addresses <c> line_3 <t> text <c> city <t> text <c> state_province_county <t> text <c> zip_postcode <t> text <c> country <t> text <c> line_1 <t> text <c> address_id <t> number <c> line_2 <t> text <c> other_address_details <t> text </t> Semesters <c> other_details <t> text <c> semester_id <t> number <c> semester_description <t> text <c> semester_name <t> text </t> Student_Enrolment <c> student_id <t> number <c> student_enrolment_id <t> number <c> other_details <t> text <c> degree_program_id <t> number <c> semester_id <t> number </t> Courses <c> course_description <t> text <c> course_id <t> number <c> other_details <t> text <c> course_name <t> text <i> What are the names of the sections in reverse alphabetical order? <s> SELECT section_name FROM Sections ORDER BY section_name DESC </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> What is the semester which most student registered in? Show both the name and the id. <s> SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Degree_Programs <c> other_details <t> text <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_program_id <t> number <c> degree_summary_description <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number </t> Addresses <c> line_2 <t> text <c> country <t> text <c> line_1 <t> text <c> other_address_details <t> text <c> city <t> text <c> zip_postcode <t> text <c> address_id <t> number <c> line_3 <t> text <c> state_province_county <t> text </t> Departments <c> department_description <t> text <c> other_details <t> text <c> department_name <t> text <c> department_id <t> number </t> Student_Enrolment_Courses <c> course_id <t> number <c> student_enrolment_id <t> number <c> student_course_id <t> number </t> Student_Enrolment <c> degree_program_id <t> number <c> semester_id <t> number <c> student_enrolment_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> other_details <t> text <c> semester_description <t> text </t> Students <c> permanent_address_id <t> number <c> date_left <t> time <c> date_first_registered <t> time <c> last_name <t> text <c> middle_name <t> text <c> email_address <t> text <c> current_address_id <t> number <c> cell_mobile_number <t> text <c> ssn <t> text <c> other_student_details <t> text <c> first_name <t> text <c> student_id <t> number </t> Transcripts <c> transcript_id <t> number <c> other_details <t> text <c> transcript_date <t> time </t> Sections <c> section_description <t> text <c> course_id <t> number <c> other_details <t> text <c> section_name <t> text <c> section_id <t> number </t> Courses <c> course_description <t> text <c> other_details <t> text <c> course_name <t> text <c> course_id <t> number <i> What is the semester which most student registered in? Show both the name and the id. <s> SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> For each semester, what is the name and id of the one with the most students registered? <s> SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Degree_Programs <c> degree_summary_name <t> text <c> other_details <t> text <c> degree_summary_description <t> text <c> degree_program_id <t> number <c> department_id <t> number </t> Semesters <c> semester_name <t> text <c> semester_description <t> text <c> semester_id <t> number <c> other_details <t> text </t> Transcripts <c> transcript_date <t> time <c> transcript_id <t> number <c> other_details <t> text </t> Students <c> email_address <t> text <c> first_name <t> text <c> date_left <t> time <c> last_name <t> text <c> current_address_id <t> number <c> other_student_details <t> text <c> middle_name <t> text <c> permanent_address_id <t> number <c> cell_mobile_number <t> text <c> student_id <t> number <c> date_first_registered <t> time <c> ssn <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Student_Enrolment <c> student_enrolment_id <t> number <c> other_details <t> text <c> semester_id <t> number <c> degree_program_id <t> number <c> student_id <t> number </t> Departments <c> department_name <t> text <c> department_id <t> number <c> department_description <t> text <c> other_details <t> text </t> Courses <c> course_description <t> text <c> other_details <t> text <c> course_name <t> text <c> course_id <t> number </t> Addresses <c> other_address_details <t> text <c> state_province_county <t> text <c> address_id <t> number <c> line_3 <t> text <c> city <t> text <c> line_1 <t> text <c> zip_postcode <t> text <c> line_2 <t> text <c> country <t> text </t> Sections <c> course_id <t> number <c> section_description <t> text <c> other_details <t> text <c> section_name <t> text <c> section_id <t> number <i> For each semester, what is the name and id of the one with the most students registered? <s> SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> What is the description of the department whose name has the substring the computer? <s> SELECT department_description FROM Departments WHERE department_name LIKE '%computer%' </s>
--SEPARATOR--
Transcripts <c> transcript_date <t> time <c> transcript_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_enrolment_id <t> number <c> course_id <t> number <c> student_course_id <t> number </t> Students <c> first_name <t> text <c> ssn <t> text <c> other_student_details <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> middle_name <t> text <c> last_name <t> text <c> date_first_registered <t> time <c> permanent_address_id <t> number <c> student_id <t> number <c> date_left <t> time <c> current_address_id <t> number </t> Semesters <c> other_details <t> text <c> semester_description <t> text <c> semester_name <t> text <c> semester_id <t> number </t> Degree_Programs <c> other_details <t> text <c> degree_summary_name <t> text <c> degree_program_id <t> number <c> degree_summary_description <t> text <c> department_id <t> number </t> Departments <c> department_description <t> text <c> other_details <t> text <c> department_id <t> number <c> department_name <t> text </t> Transcript_Contents <c> transcript_id <t> number <c> student_course_id <t> number </t> Sections <c> section_id <t> number <c> course_id <t> number <c> other_details <t> text <c> section_name <t> text <c> section_description <t> text </t> Student_Enrolment <c> student_id <t> number <c> student_enrolment_id <t> number <c> other_details <t> text <c> semester_id <t> number <c> degree_program_id <t> number </t> Addresses <c> zip_postcode <t> text <c> line_3 <t> text <c> other_address_details <t> text <c> state_province_county <t> text <c> address_id <t> number <c> city <t> text <c> line_2 <t> text <c> country <t> text <c> line_1 <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text <i> What is the description of the department whose name has the substring the computer? <s> SELECT department_description FROM Departments WHERE department_name LIKE '%computer%' </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> What is the department description for the one whose name has the word computer? <s> SELECT department_description FROM Departments WHERE department_name LIKE '%computer%' </s>
--SEPARATOR--
Departments <c> department_name <t> text <c> other_details <t> text <c> department_id <t> number <c> department_description <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number </t> Degree_Programs <c> degree_summary_name <t> text <c> department_id <t> number <c> degree_summary_description <t> text <c> other_details <t> text <c> degree_program_id <t> number </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> student_enrolment_id <t> number <c> course_id <t> number </t> Addresses <c> zip_postcode <t> text <c> line_2 <t> text <c> city <t> text <c> address_id <t> number <c> line_3 <t> text <c> country <t> text <c> other_address_details <t> text <c> state_province_county <t> text <c> line_1 <t> text </t> Semesters <c> semester_name <t> text <c> semester_id <t> number <c> semester_description <t> text <c> other_details <t> text </t> Courses <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text <c> course_id <t> number </t> Transcripts <c> transcript_id <t> number <c> other_details <t> text <c> transcript_date <t> time </t> Students <c> email_address <t> text <c> date_left <t> time <c> first_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> middle_name <t> text <c> ssn <t> text <c> other_student_details <t> text <c> date_first_registered <t> time <c> current_address_id <t> number <c> student_id <t> number <c> permanent_address_id <t> number </t> Sections <c> other_details <t> text <c> section_id <t> number <c> section_description <t> text <c> course_id <t> number <c> section_name <t> text </t> Student_Enrolment <c> other_details <t> text <c> student_id <t> number <c> semester_id <t> number <c> degree_program_id <t> number <c> student_enrolment_id <t> number <i> What is the department description for the one whose name has the word computer? <s> SELECT department_description FROM Departments WHERE department_name LIKE '%computer%' </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> Who are enrolled in 2 degree programs in one semester? List the first name, middle name and last name and the id. <s> SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2 </s>
--SEPARATOR--
Addresses <c> line_1 <t> text <c> city <t> text <c> address_id <t> number <c> line_2 <t> text <c> state_province_county <t> text <c> zip_postcode <t> text <c> line_3 <t> text <c> country <t> text <c> other_address_details <t> text </t> Sections <c> course_id <t> number <c> section_description <t> text <c> other_details <t> text <c> section_name <t> text <c> section_id <t> number </t> Transcripts <c> transcript_id <t> number <c> other_details <t> text <c> transcript_date <t> time </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> student_enrolment_id <t> number <c> course_id <t> number </t> Courses <c> course_description <t> text <c> course_name <t> text <c> other_details <t> text <c> course_id <t> number </t> Degree_Programs <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> degree_program_id <t> number <c> other_details <t> text </t> Student_Enrolment <c> student_id <t> number <c> student_enrolment_id <t> number <c> other_details <t> text <c> degree_program_id <t> number <c> semester_id <t> number </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number </t> Students <c> current_address_id <t> number <c> student_id <t> number <c> email_address <t> text <c> middle_name <t> text <c> first_name <t> text <c> ssn <t> text <c> other_student_details <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> permanent_address_id <t> number <c> cell_mobile_number <t> text <c> last_name <t> text </t> Departments <c> department_description <t> text <c> department_id <t> number <c> department_name <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> other_details <t> text <c> semester_description <t> text <i> Who are enrolled in 2 degree programs in one semester? List the first name, middle name and last name and the id. <s> SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2 </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> What are the first, middle, and last names, along with the ids, of all students who enrolled in 2 degree programs in one semester? <s> SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2 </s>
--SEPARATOR--
Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> student_id <t> number <c> other_details <t> text <c> semester_id <t> number </t> Degree_Programs <c> degree_summary_name <t> text <c> department_id <t> number <c> degree_program_id <t> number <c> other_details <t> text <c> degree_summary_description <t> text </t> Transcript_Contents <c> transcript_id <t> number <c> student_course_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Sections <c> section_description <t> text <c> section_name <t> text <c> section_id <t> number <c> other_details <t> text <c> course_id <t> number </t> Semesters <c> other_details <t> text <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text </t> Addresses <c> state_province_county <t> text <c> country <t> text <c> line_2 <t> text <c> line_1 <t> text <c> zip_postcode <t> text <c> address_id <t> number <c> city <t> text <c> line_3 <t> text <c> other_address_details <t> text </t> Departments <c> department_name <t> text <c> other_details <t> text <c> department_description <t> text <c> department_id <t> number </t> Courses <c> course_name <t> text <c> course_description <t> text <c> course_id <t> number <c> other_details <t> text </t> Students <c> email_address <t> text <c> date_left <t> time <c> last_name <t> text <c> other_student_details <t> text <c> student_id <t> number <c> date_first_registered <t> time <c> ssn <t> text <c> current_address_id <t> number <c> middle_name <t> text <c> cell_mobile_number <t> text <c> first_name <t> text <c> permanent_address_id <t> number <i> What are the first, middle, and last names, along with the ids, of all students who enrolled in 2 degree programs in one semester? <s> SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2 </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> Who is enrolled in a Bachelor degree program? List the first name, middle name, last name. <s> SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor' </s>
--SEPARATOR--
Student_Enrolment_Courses <c> student_enrolment_id <t> number <c> course_id <t> number <c> student_course_id <t> number </t> Degree_Programs <c> degree_program_id <t> number <c> other_details <t> text <c> degree_summary_description <t> text <c> degree_summary_name <t> text <c> department_id <t> number </t> Departments <c> other_details <t> text <c> department_description <t> text <c> department_name <t> text <c> department_id <t> number </t> Students <c> current_address_id <t> number <c> middle_name <t> text <c> email_address <t> text <c> other_student_details <t> text <c> student_id <t> number <c> date_left <t> time <c> permanent_address_id <t> number <c> first_name <t> text <c> cell_mobile_number <t> text <c> last_name <t> text <c> ssn <t> text <c> date_first_registered <t> time </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> other_details <t> text <c> semester_description <t> text </t> Transcripts <c> other_details <t> text <c> transcript_id <t> number <c> transcript_date <t> time </t> Courses <c> course_id <t> number <c> course_name <t> text <c> other_details <t> text <c> course_description <t> text </t> Student_Enrolment <c> degree_program_id <t> number <c> student_enrolment_id <t> number <c> student_id <t> number <c> semester_id <t> number <c> other_details <t> text </t> Sections <c> section_description <t> text <c> other_details <t> text <c> course_id <t> number <c> section_id <t> number <c> section_name <t> text </t> Transcript_Contents <c> transcript_id <t> number <c> student_course_id <t> number </t> Addresses <c> line_1 <t> text <c> address_id <t> number <c> country <t> text <c> state_province_county <t> text <c> zip_postcode <t> text <c> other_address_details <t> text <c> city <t> text <c> line_3 <t> text <c> line_2 <t> text <i> Who is enrolled in a Bachelor degree program? List the first name, middle name, last name. <s> SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor' </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> What are the first, middle, and last names for everybody enrolled in a Bachelors program? <s> SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor' </s>
--SEPARATOR--
Degree_Programs <c> other_details <t> text <c> degree_program_id <t> number <c> degree_summary_description <t> text <c> degree_summary_name <t> text <c> department_id <t> number </t> Student_Enrolment <c> other_details <t> text <c> student_enrolment_id <t> number <c> student_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number </t> Courses <c> other_details <t> text <c> course_name <t> text <c> course_id <t> number <c> course_description <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> other_details <t> text <c> department_description <t> text </t> Student_Enrolment_Courses <c> student_enrolment_id <t> number <c> student_course_id <t> number <c> course_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> transcript_id <t> number <c> student_course_id <t> number </t> Students <c> other_student_details <t> text <c> date_first_registered <t> time <c> current_address_id <t> number <c> first_name <t> text <c> last_name <t> text <c> student_id <t> number <c> ssn <t> text <c> date_left <t> time <c> middle_name <t> text <c> permanent_address_id <t> number <c> email_address <t> text <c> cell_mobile_number <t> text </t> Semesters <c> semester_id <t> number <c> other_details <t> text <c> semester_description <t> text <c> semester_name <t> text </t> Addresses <c> city <t> text <c> line_2 <t> text <c> address_id <t> number <c> line_1 <t> text <c> state_province_county <t> text <c> line_3 <t> text <c> other_address_details <t> text <c> country <t> text <c> zip_postcode <t> text </t> Sections <c> section_name <t> text <c> other_details <t> text <c> section_id <t> number <c> course_id <t> number <c> section_description <t> text <i> What are the first, middle, and last names for everybody enrolled in a Bachelors program? <s> SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor' </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> Find the kind of program which most number of students are enrolled in? <s> SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Degree_Programs <c> degree_summary_name <t> text <c> degree_program_id <t> number <c> degree_summary_description <t> text <c> other_details <t> text <c> department_id <t> number </t> Transcript_Contents <c> transcript_id <t> number <c> student_course_id <t> number </t> Students <c> ssn <t> text <c> middle_name <t> text <c> email_address <t> text <c> other_student_details <t> text <c> cell_mobile_number <t> text <c> last_name <t> text <c> first_name <t> text <c> current_address_id <t> number <c> student_id <t> number <c> date_left <t> time <c> date_first_registered <t> time <c> permanent_address_id <t> number </t> Addresses <c> line_2 <t> text <c> line_1 <t> text <c> address_id <t> number <c> line_3 <t> text <c> zip_postcode <t> text <c> other_address_details <t> text <c> state_province_county <t> text <c> city <t> text <c> country <t> text </t> Semesters <c> semester_description <t> text <c> semester_name <t> text <c> semester_id <t> number <c> other_details <t> text </t> Transcripts <c> other_details <t> text <c> transcript_date <t> time <c> transcript_id <t> number </t> Courses <c> course_id <t> number <c> course_description <t> text <c> course_name <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> other_details <t> text <c> department_description <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_description <t> text <c> section_name <t> text <c> other_details <t> text </t> Student_Enrolment <c> other_details <t> text <c> student_id <t> number <c> semester_id <t> number <c> degree_program_id <t> number <c> student_enrolment_id <t> number </t> Student_Enrolment_Courses <c> student_enrolment_id <t> number <c> course_id <t> number <c> student_course_id <t> number <i> Find the kind of program which most number of students are enrolled in? <s> SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> What is the degree summary name that has the most number of students enrolled? <s> SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Departments <c> department_name <t> text <c> department_id <t> number <c> other_details <t> text <c> department_description <t> text </t> Addresses <c> country <t> text <c> line_3 <t> text <c> line_1 <t> text <c> other_address_details <t> text <c> zip_postcode <t> text <c> address_id <t> number <c> line_2 <t> text <c> state_province_county <t> text <c> city <t> text </t> Degree_Programs <c> degree_summary_description <t> text <c> degree_program_id <t> number <c> other_details <t> text <c> department_id <t> number <c> degree_summary_name <t> text </t> Transcript_Contents <c> transcript_id <t> number <c> student_course_id <t> number </t> Courses <c> course_name <t> text <c> other_details <t> text <c> course_description <t> text <c> course_id <t> number </t> Transcripts <c> transcript_date <t> time <c> transcript_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> student_enrolment_id <t> number <c> course_id <t> number </t> Student_Enrolment <c> student_id <t> number <c> other_details <t> text <c> student_enrolment_id <t> number <c> semester_id <t> number <c> degree_program_id <t> number </t> Students <c> ssn <t> text <c> first_name <t> text <c> current_address_id <t> number <c> date_first_registered <t> time <c> cell_mobile_number <t> text <c> last_name <t> text <c> email_address <t> text <c> permanent_address_id <t> number <c> date_left <t> time <c> student_id <t> number <c> middle_name <t> text <c> other_student_details <t> text </t> Semesters <c> semester_description <t> text <c> other_details <t> text <c> semester_name <t> text <c> semester_id <t> number </t> Sections <c> section_description <t> text <c> section_id <t> number <c> other_details <t> text <c> course_id <t> number <c> section_name <t> text <i> What is the degree summary name that has the most number of students enrolled? <s> SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> Find the program which most number of students are enrolled in. List both the id and the summary. <s> SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Courses <c> course_name <t> text <c> course_description <t> text <c> course_id <t> number <c> other_details <t> text </t> Departments <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text <c> department_id <t> number </t> Student_Enrolment_Courses <c> student_enrolment_id <t> number <c> student_course_id <t> number <c> course_id <t> number </t> Addresses <c> country <t> text <c> state_province_county <t> text <c> zip_postcode <t> text <c> line_3 <t> text <c> address_id <t> number <c> line_2 <t> text <c> line_1 <t> text <c> other_address_details <t> text <c> city <t> text </t> Student_Enrolment <c> other_details <t> text <c> student_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> other_details <t> text <c> transcript_date <t> time </t> Students <c> first_name <t> text <c> other_student_details <t> text <c> last_name <t> text <c> ssn <t> text <c> middle_name <t> text <c> cell_mobile_number <t> text <c> student_id <t> number <c> date_left <t> time <c> current_address_id <t> number <c> permanent_address_id <t> number <c> date_first_registered <t> time <c> email_address <t> text </t> Semesters <c> semester_description <t> text <c> other_details <t> text <c> semester_id <t> number <c> semester_name <t> text </t> Sections <c> course_id <t> number <c> section_description <t> text <c> other_details <t> text <c> section_name <t> text <c> section_id <t> number </t> Degree_Programs <c> degree_summary_description <t> text <c> degree_summary_name <t> text <c> other_details <t> text <c> department_id <t> number <c> degree_program_id <t> number </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> Find the program which most number of students are enrolled in. List both the id and the summary. <s> SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> What is the program id and the summary of the degree that has the most students enrolled? <s> SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Student_Enrolment_Courses <c> student_enrolment_id <t> number <c> student_course_id <t> number <c> course_id <t> number </t> Addresses <c> other_address_details <t> text <c> city <t> text <c> address_id <t> number <c> line_2 <t> text <c> line_3 <t> text <c> line_1 <t> text <c> zip_postcode <t> text <c> country <t> text <c> state_province_county <t> text </t> Semesters <c> semester_description <t> text <c> other_details <t> text <c> semester_name <t> text <c> semester_id <t> number </t> Sections <c> other_details <t> text <c> section_description <t> text <c> section_name <t> text <c> course_id <t> number <c> section_id <t> number </t> Students <c> first_name <t> text <c> email_address <t> text <c> last_name <t> text <c> middle_name <t> text <c> permanent_address_id <t> number <c> student_id <t> number <c> current_address_id <t> number <c> ssn <t> text <c> other_student_details <t> text <c> date_left <t> time <c> cell_mobile_number <t> text <c> date_first_registered <t> time </t> Departments <c> department_description <t> text <c> department_id <t> number <c> department_name <t> text <c> other_details <t> text </t> Courses <c> course_description <t> text <c> other_details <t> text <c> course_id <t> number <c> course_name <t> text </t> Degree_Programs <c> other_details <t> text <c> degree_summary_description <t> text <c> degree_program_id <t> number <c> degree_summary_name <t> text <c> department_id <t> number </t> Student_Enrolment <c> other_details <t> text <c> degree_program_id <t> number <c> student_id <t> number <c> semester_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> transcript_id <t> number <c> student_course_id <t> number <i> What is the program id and the summary of the degree that has the most students enrolled? <s> SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> Which student has enrolled for the most times in any program? List the id, first name, middle name, last name, the number of enrollments and student id. <s> SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Transcript_Contents <c> transcript_id <t> number <c> student_course_id <t> number </t> Students <c> ssn <t> text <c> middle_name <t> text <c> first_name <t> text <c> current_address_id <t> number <c> date_left <t> time <c> student_id <t> number <c> last_name <t> text <c> cell_mobile_number <t> text <c> permanent_address_id <t> number <c> other_student_details <t> text <c> email_address <t> text <c> date_first_registered <t> time </t> Semesters <c> semester_description <t> text <c> other_details <t> text <c> semester_id <t> number <c> semester_name <t> text </t> Transcripts <c> other_details <t> text <c> transcript_id <t> number <c> transcript_date <t> time </t> Student_Enrolment <c> other_details <t> text <c> degree_program_id <t> number <c> student_id <t> number <c> semester_id <t> number <c> student_enrolment_id <t> number </t> Degree_Programs <c> department_id <t> number <c> other_details <t> text <c> degree_summary_description <t> text <c> degree_summary_name <t> text <c> degree_program_id <t> number </t> Courses <c> course_description <t> text <c> course_name <t> text <c> course_id <t> number <c> other_details <t> text </t> Sections <c> section_name <t> text <c> course_id <t> number <c> section_description <t> text <c> section_id <t> number <c> other_details <t> text </t> Addresses <c> city <t> text <c> state_province_county <t> text <c> line_2 <t> text <c> line_3 <t> text <c> line_1 <t> text <c> country <t> text <c> other_address_details <t> text <c> zip_postcode <t> text <c> address_id <t> number </t> Student_Enrolment_Courses <c> student_enrolment_id <t> number <c> course_id <t> number <c> student_course_id <t> number </t> Departments <c> other_details <t> text <c> department_name <t> text <c> department_id <t> number <c> department_description <t> text <i> Which student has enrolled for the most times in any program? List the id, first name, middle name, last name, the number of enrollments and student id. <s> SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> What is the first, middle, and last name, along with the id and number of enrollments, for the student who enrolled the most in any program? <s> SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Semesters <c> semester_id <t> number <c> semester_name <t> text <c> other_details <t> text <c> semester_description <t> text </t> Student_Enrolment <c> other_details <t> text <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number </t> Transcripts <c> other_details <t> text <c> transcript_id <t> number <c> transcript_date <t> time </t> Degree_Programs <c> degree_summary_description <t> text <c> degree_summary_name <t> text <c> other_details <t> text <c> degree_program_id <t> number <c> department_id <t> number </t> Departments <c> department_id <t> number <c> department_name <t> text <c> other_details <t> text <c> department_description <t> text </t> Student_Enrolment_Courses <c> course_id <t> number <c> student_course_id <t> number <c> student_enrolment_id <t> number </t> Courses <c> course_name <t> text <c> course_id <t> number <c> course_description <t> text <c> other_details <t> text </t> Students <c> last_name <t> text <c> middle_name <t> text <c> first_name <t> text <c> cell_mobile_number <t> text <c> permanent_address_id <t> number <c> other_student_details <t> text <c> date_left <t> time <c> student_id <t> number <c> email_address <t> text <c> ssn <t> text <c> current_address_id <t> number <c> date_first_registered <t> time </t> Sections <c> section_description <t> text <c> section_name <t> text <c> course_id <t> number <c> other_details <t> text <c> section_id <t> number </t> Transcript_Contents <c> transcript_id <t> number <c> student_course_id <t> number </t> Addresses <c> state_province_county <t> text <c> line_2 <t> text <c> line_1 <t> text <c> country <t> text <c> address_id <t> number <c> other_address_details <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <i> What is the first, middle, and last name, along with the id and number of enrollments, for the student who enrolled the most in any program? <s> SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> Which semesters do not have any student enrolled? List the semester name. <s> SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment ) </s>
--SEPARATOR--
Students <c> date_left <t> time <c> date_first_registered <t> time <c> cell_mobile_number <t> text <c> current_address_id <t> number <c> ssn <t> text <c> last_name <t> text <c> middle_name <t> text <c> other_student_details <t> text <c> permanent_address_id <t> number <c> student_id <t> number <c> first_name <t> text <c> email_address <t> text </t> Transcripts <c> other_details <t> text <c> transcript_date <t> time <c> transcript_id <t> number </t> Departments <c> other_details <t> text <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text </t> Sections <c> section_name <t> text <c> course_id <t> number <c> other_details <t> text <c> section_id <t> number <c> section_description <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> other_details <t> text <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> other_details <t> text <c> semester_description <t> text </t> Student_Enrolment_Courses <c> student_enrolment_id <t> number <c> student_course_id <t> number <c> course_id <t> number </t> Degree_Programs <c> degree_program_id <t> number <c> degree_summary_name <t> text <c> department_id <t> number <c> degree_summary_description <t> text <c> other_details <t> text </t> Courses <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text <c> course_id <t> number </t> Addresses <c> address_id <t> number <c> line_2 <t> text <c> other_address_details <t> text <c> line_1 <t> text <c> country <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> city <t> text <c> line_3 <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> Which semesters do not have any student enrolled? List the semester name. <s> SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment ) </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> What is the name of the semester with no students enrolled? <s> SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment ) </s>
--SEPARATOR--
Student_Enrolment <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text <c> student_enrolment_id <t> number <c> degree_program_id <t> number </t> Courses <c> course_description <t> text <c> other_details <t> text <c> course_name <t> text <c> course_id <t> number </t> Addresses <c> line_1 <t> text <c> state_province_county <t> text <c> line_3 <t> text <c> city <t> text <c> country <t> text <c> other_address_details <t> text <c> zip_postcode <t> text <c> line_2 <t> text <c> address_id <t> number </t> Degree_Programs <c> degree_summary_name <t> text <c> department_id <t> number <c> other_details <t> text <c> degree_summary_description <t> text <c> degree_program_id <t> number </t> Students <c> student_id <t> number <c> cell_mobile_number <t> text <c> current_address_id <t> number <c> last_name <t> text <c> ssn <t> text <c> middle_name <t> text <c> other_student_details <t> text <c> email_address <t> text <c> date_left <t> time <c> permanent_address_id <t> number <c> first_name <t> text <c> date_first_registered <t> time </t> Sections <c> section_description <t> text <c> course_id <t> number <c> other_details <t> text <c> section_id <t> number <c> section_name <t> text </t> Student_Enrolment_Courses <c> student_enrolment_id <t> number <c> course_id <t> number <c> student_course_id <t> number </t> Transcripts <c> transcript_date <t> time <c> transcript_id <t> number <c> other_details <t> text </t> Semesters <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text <c> semester_id <t> number </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number </t> Departments <c> other_details <t> text <c> department_description <t> text <c> department_name <t> text <c> department_id <t> number <i> What is the name of the semester with no students enrolled? <s> SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment ) </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> What are all the course names of the courses which ever have students enrolled in? <s> SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id </s>
--SEPARATOR--
Student_Enrolment <c> student_id <t> number <c> degree_program_id <t> number <c> other_details <t> text <c> semester_id <t> number <c> student_enrolment_id <t> number </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number </t> Semesters <c> semester_description <t> text <c> semester_name <t> text <c> other_details <t> text <c> semester_id <t> number </t> Courses <c> course_description <t> text <c> course_name <t> text <c> other_details <t> text <c> course_id <t> number </t> Departments <c> other_details <t> text <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> student_enrolment_id <t> number <c> course_id <t> number </t> Sections <c> section_description <t> text <c> section_name <t> text <c> other_details <t> text <c> section_id <t> number <c> course_id <t> number </t> Degree_Programs <c> degree_summary_name <t> text <c> other_details <t> text <c> department_id <t> number <c> degree_summary_description <t> text <c> degree_program_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Students <c> permanent_address_id <t> number <c> email_address <t> text <c> other_student_details <t> text <c> first_name <t> text <c> date_first_registered <t> time <c> current_address_id <t> number <c> middle_name <t> text <c> date_left <t> time <c> ssn <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> student_id <t> number </t> Addresses <c> address_id <t> number <c> other_address_details <t> text <c> zip_postcode <t> text <c> country <t> text <c> city <t> text <c> line_3 <t> text <c> state_province_county <t> text <c> line_1 <t> text <c> line_2 <t> text <i> What are all the course names of the courses which ever have students enrolled in? <s> SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> What are the names of all courses that have some students enrolled? <s> SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id </s>
--SEPARATOR--
Courses <c> other_details <t> text <c> course_id <t> number <c> course_description <t> text <c> course_name <t> text </t> Addresses <c> line_1 <t> text <c> state_province_county <t> text <c> city <t> text <c> country <t> text <c> address_id <t> number <c> line_2 <t> text <c> other_address_details <t> text <c> line_3 <t> text <c> zip_postcode <t> text </t> Student_Enrolment_Courses <c> course_id <t> number <c> student_enrolment_id <t> number <c> student_course_id <t> number </t> Degree_Programs <c> degree_summary_description <t> text <c> department_id <t> number <c> degree_program_id <t> number <c> degree_summary_name <t> text <c> other_details <t> text </t> Students <c> other_student_details <t> text <c> date_first_registered <t> time <c> first_name <t> text <c> last_name <t> text <c> current_address_id <t> number <c> date_left <t> time <c> cell_mobile_number <t> text <c> student_id <t> number <c> ssn <t> text <c> email_address <t> text <c> permanent_address_id <t> number <c> middle_name <t> text </t> Semesters <c> semester_description <t> text <c> semester_name <t> text <c> semester_id <t> number <c> other_details <t> text </t> Transcripts <c> transcript_date <t> time <c> other_details <t> text <c> transcript_id <t> number </t> Student_Enrolment <c> student_id <t> number <c> semester_id <t> number <c> student_enrolment_id <t> number <c> other_details <t> text <c> degree_program_id <t> number </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number </t> Sections <c> section_id <t> number <c> section_description <t> text <c> course_id <t> number <c> other_details <t> text <c> section_name <t> text </t> Departments <c> department_name <t> text <c> other_details <t> text <c> department_description <t> text <c> department_id <t> number <i> What are the names of all courses that have some students enrolled? <s> SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> What's the name of the course with most number of enrollments? <s> SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Departments <c> department_name <t> text <c> other_details <t> text <c> department_id <t> number <c> department_description <t> text </t> Sections <c> section_name <t> text <c> section_description <t> text <c> section_id <t> number <c> course_id <t> number <c> other_details <t> text </t> Transcripts <c> other_details <t> text <c> transcript_id <t> number <c> transcript_date <t> time </t> Student_Enrolment <c> degree_program_id <t> number <c> semester_id <t> number <c> other_details <t> text <c> student_enrolment_id <t> number <c> student_id <t> number </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> student_enrolment_id <t> number <c> course_id <t> number </t> Semesters <c> semester_description <t> text <c> other_details <t> text <c> semester_name <t> text <c> semester_id <t> number </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number </t> Courses <c> other_details <t> text <c> course_description <t> text <c> course_name <t> text <c> course_id <t> number </t> Degree_Programs <c> department_id <t> number <c> other_details <t> text <c> degree_summary_description <t> text <c> degree_program_id <t> number <c> degree_summary_name <t> text </t> Students <c> first_name <t> text <c> permanent_address_id <t> number <c> student_id <t> number <c> current_address_id <t> number <c> email_address <t> text <c> other_student_details <t> text <c> cell_mobile_number <t> text <c> ssn <t> text <c> date_left <t> time <c> date_first_registered <t> time <c> middle_name <t> text <c> last_name <t> text </t> Addresses <c> country <t> text <c> line_1 <t> text <c> state_province_county <t> text <c> line_2 <t> text <c> address_id <t> number <c> other_address_details <t> text <c> city <t> text <c> line_3 <t> text <c> zip_postcode <t> text <i> What's the name of the course with most number of enrollments? <s> SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> What is the name of the course with the most students enrolled? <s> SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Transcripts <c> transcript_date <t> time <c> transcript_id <t> number <c> other_details <t> text </t> Semesters <c> semester_name <t> text <c> semester_id <t> number <c> other_details <t> text <c> semester_description <t> text </t> Degree_Programs <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text <c> department_id <t> number <c> degree_program_id <t> number </t> Addresses <c> line_1 <t> text <c> line_3 <t> text <c> address_id <t> number <c> city <t> text <c> country <t> text <c> line_2 <t> text <c> zip_postcode <t> text <c> other_address_details <t> text <c> state_province_county <t> text </t> Students <c> cell_mobile_number <t> text <c> first_name <t> text <c> date_first_registered <t> time <c> last_name <t> text <c> current_address_id <t> number <c> permanent_address_id <t> number <c> middle_name <t> text <c> student_id <t> number <c> other_student_details <t> text <c> ssn <t> text <c> date_left <t> time <c> email_address <t> text </t> Sections <c> section_description <t> text <c> section_name <t> text <c> course_id <t> number <c> other_details <t> text <c> section_id <t> number </t> Transcript_Contents <c> transcript_id <t> number <c> student_course_id <t> number </t> Student_Enrolment_Courses <c> course_id <t> number <c> student_enrolment_id <t> number <c> student_course_id <t> number </t> Courses <c> other_details <t> text <c> course_description <t> text <c> course_name <t> text <c> course_id <t> number </t> Departments <c> other_details <t> text <c> department_description <t> text <c> department_id <t> number <c> department_name <t> text </t> Student_Enrolment <c> degree_program_id <t> number <c> student_enrolment_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text <i> What is the name of the course with the most students enrolled? <s> SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> Find the last name of the students who currently live in the state of North Carolina but have not registered in any degree program. <s> SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id </s>
--SEPARATOR--
Courses <c> other_details <t> text <c> course_name <t> text <c> course_id <t> number <c> course_description <t> text </t> Semesters <c> semester_name <t> text <c> semester_id <t> number <c> semester_description <t> text <c> other_details <t> text </t> Addresses <c> state_province_county <t> text <c> other_address_details <t> text <c> address_id <t> number <c> zip_postcode <t> text <c> city <t> text <c> line_2 <t> text <c> line_1 <t> text <c> line_3 <t> text <c> country <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Departments <c> other_details <t> text <c> department_name <t> text <c> department_id <t> number <c> department_description <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Degree_Programs <c> degree_program_id <t> number <c> other_details <t> text <c> department_id <t> number <c> degree_summary_description <t> text <c> degree_summary_name <t> text </t> Students <c> last_name <t> text <c> date_first_registered <t> time <c> cell_mobile_number <t> text <c> middle_name <t> text <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> date_left <t> time <c> ssn <t> text <c> first_name <t> text <c> other_student_details <t> text <c> email_address <t> text </t> Sections <c> section_name <t> text <c> section_id <t> number <c> section_description <t> text <c> course_id <t> number <c> other_details <t> text </t> Student_Enrolment <c> degree_program_id <t> number <c> other_details <t> text <c> student_id <t> number <c> student_enrolment_id <t> number <c> semester_id <t> number <i> Find the last name of the students who currently live in the state of North Carolina but have not registered in any degree program. <s> SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> What are the last name of the students who live in North Carolina but have not registered in any degree programs? <s> SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id </s>
--SEPARATOR--
Addresses <c> other_address_details <t> text <c> line_1 <t> text <c> city <t> text <c> country <t> text <c> address_id <t> number <c> line_3 <t> text <c> zip_postcode <t> text <c> line_2 <t> text <c> state_province_county <t> text </t> Semesters <c> semester_description <t> text <c> semester_id <t> number <c> other_details <t> text <c> semester_name <t> text </t> Transcript_Contents <c> transcript_id <t> number <c> student_course_id <t> number </t> Student_Enrolment <c> student_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_enrolment_id <t> number <c> other_details <t> text </t> Courses <c> course_description <t> text <c> other_details <t> text <c> course_id <t> number <c> course_name <t> text </t> Students <c> permanent_address_id <t> number <c> ssn <t> text <c> email_address <t> text <c> student_id <t> number <c> last_name <t> text <c> middle_name <t> text <c> date_left <t> time <c> date_first_registered <t> time <c> other_student_details <t> text <c> cell_mobile_number <t> text <c> current_address_id <t> number <c> first_name <t> text </t> Student_Enrolment_Courses <c> student_enrolment_id <t> number <c> student_course_id <t> number <c> course_id <t> number </t> Departments <c> department_name <t> text <c> department_id <t> number <c> department_description <t> text <c> other_details <t> text </t> Sections <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> section_id <t> number <c> other_details <t> text </t> Transcripts <c> transcript_id <t> number <c> other_details <t> text <c> transcript_date <t> time </t> Degree_Programs <c> other_details <t> text <c> degree_summary_name <t> text <c> department_id <t> number <c> degree_program_id <t> number <c> degree_summary_description <t> text <i> What are the last name of the students who live in North Carolina but have not registered in any degree programs? <s> SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> Show the date and id of the transcript with at least 2 course results. <s> SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2 </s>
--SEPARATOR--
Addresses <c> state_province_county <t> text <c> line_3 <t> text <c> country <t> text <c> address_id <t> number <c> city <t> text <c> zip_postcode <t> text <c> other_address_details <t> text <c> line_1 <t> text <c> line_2 <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> semester_id <t> number <c> other_details <t> text <c> degree_program_id <t> number <c> student_id <t> number </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> student_enrolment_id <t> number <c> course_id <t> number </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Departments <c> department_description <t> text <c> department_name <t> text <c> other_details <t> text <c> department_id <t> number </t> Courses <c> course_description <t> text <c> course_name <t> text <c> other_details <t> text <c> course_id <t> number </t> Students <c> first_name <t> text <c> student_id <t> number <c> permanent_address_id <t> number <c> date_left <t> time <c> current_address_id <t> number <c> middle_name <t> text <c> email_address <t> text <c> date_first_registered <t> time <c> ssn <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> other_student_details <t> text </t> Transcript_Contents <c> transcript_id <t> number <c> student_course_id <t> number </t> Sections <c> section_id <t> number <c> section_name <t> text <c> section_description <t> text <c> course_id <t> number <c> other_details <t> text </t> Degree_Programs <c> other_details <t> text <c> degree_program_id <t> number <c> degree_summary_name <t> text <c> department_id <t> number <c> degree_summary_description <t> text </t> Transcripts <c> other_details <t> text <c> transcript_date <t> time <c> transcript_id <t> number <i> Show the date and id of the transcript with at least 2 course results. <s> SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2 </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> What is the date and id of the transcript with at least 2 courses listed? <s> SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2 </s>
--SEPARATOR--
Degree_Programs <c> department_id <t> number <c> degree_summary_description <t> text <c> other_details <t> text <c> degree_summary_name <t> text <c> degree_program_id <t> number </t> Students <c> email_address <t> text <c> middle_name <t> text <c> ssn <t> text <c> current_address_id <t> number <c> student_id <t> number <c> cell_mobile_number <t> text <c> date_first_registered <t> time <c> other_student_details <t> text <c> date_left <t> time <c> permanent_address_id <t> number <c> last_name <t> text <c> first_name <t> text </t> Addresses <c> city <t> text <c> country <t> text <c> other_address_details <t> text <c> zip_postcode <t> text <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> state_province_county <t> text <c> line_3 <t> text </t> Courses <c> course_description <t> text <c> other_details <t> text <c> course_name <t> text <c> course_id <t> number </t> Student_Enrolment_Courses <c> course_id <t> number <c> student_enrolment_id <t> number <c> student_course_id <t> number </t> Sections <c> course_id <t> number <c> section_description <t> text <c> section_name <t> text <c> section_id <t> number <c> other_details <t> text </t> Student_Enrolment <c> other_details <t> text <c> semester_id <t> number <c> student_id <t> number <c> degree_program_id <t> number <c> student_enrolment_id <t> number </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number </t> Semesters <c> semester_id <t> number <c> semester_description <t> text <c> other_details <t> text <c> semester_name <t> text </t> Transcripts <c> transcript_date <t> time <c> other_details <t> text <c> transcript_id <t> number </t> Departments <c> department_id <t> number <c> other_details <t> text <c> department_name <t> text <c> department_description <t> text <i> What is the date and id of the transcript with at least 2 courses listed? <s> SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2 </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> What is the phone number of the man with the first name Timmothy and the last name Ward? <s> SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward' </s>
--SEPARATOR--
Student_Enrolment <c> other_details <t> text <c> semester_id <t> number <c> degree_program_id <t> number <c> student_id <t> number <c> student_enrolment_id <t> number </t> Courses <c> other_details <t> text <c> course_id <t> number <c> course_description <t> text <c> course_name <t> text </t> Sections <c> section_name <t> text <c> other_details <t> text <c> section_id <t> number <c> section_description <t> text <c> course_id <t> number </t> Semesters <c> semester_description <t> text <c> semester_id <t> number <c> semester_name <t> text <c> other_details <t> text </t> Transcript_Contents <c> transcript_id <t> number <c> student_course_id <t> number </t> Addresses <c> address_id <t> number <c> zip_postcode <t> text <c> line_2 <t> text <c> line_1 <t> text <c> country <t> text <c> line_3 <t> text <c> state_province_county <t> text <c> other_address_details <t> text <c> city <t> text </t> Departments <c> department_description <t> text <c> other_details <t> text <c> department_name <t> text <c> department_id <t> number </t> Students <c> first_name <t> text <c> permanent_address_id <t> number <c> date_first_registered <t> time <c> current_address_id <t> number <c> date_left <t> time <c> other_student_details <t> text <c> middle_name <t> text <c> ssn <t> text <c> student_id <t> number <c> email_address <t> text <c> cell_mobile_number <t> text <c> last_name <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> degree_summary_description <t> text <c> department_id <t> number <c> other_details <t> text <c> degree_summary_name <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> other_details <t> text <c> transcript_date <t> time <i> What is the phone number of the man with the first name Timmothy and the last name Ward? <s> SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward' </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> What is the mobile phone number of the student named Timmothy Ward ? <s> select cell_mobile_number from students where first_name  =  'timmothy' and last_name  =  'ward' </s>
--SEPARATOR--
Transcripts <c> transcript_date <t> time <c> transcript_id <t> number <c> other_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> semester_id <t> number <c> other_details <t> text <c> student_id <t> number <c> degree_program_id <t> number </t> Sections <c> section_description <t> text <c> section_name <t> text <c> section_id <t> number <c> other_details <t> text <c> course_id <t> number </t> Students <c> middle_name <t> text <c> other_student_details <t> text <c> date_left <t> time <c> permanent_address_id <t> number <c> last_name <t> text <c> cell_mobile_number <t> text <c> first_name <t> text <c> student_id <t> number <c> email_address <t> text <c> date_first_registered <t> time <c> current_address_id <t> number <c> ssn <t> text </t> Student_Enrolment_Courses <c> student_enrolment_id <t> number <c> course_id <t> number <c> student_course_id <t> number </t> Semesters <c> semester_name <t> text <c> semester_id <t> number <c> semester_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> degree_program_id <t> number <c> other_details <t> text <c> department_id <t> number </t> Addresses <c> zip_postcode <t> text <c> line_2 <t> text <c> address_id <t> number <c> line_3 <t> text <c> line_1 <t> text <c> city <t> text <c> other_address_details <t> text <c> state_province_county <t> text <c> country <t> text </t> Courses <c> other_details <t> text <c> course_id <t> number <c> course_description <t> text <c> course_name <t> text </t> Departments <c> department_name <t> text <c> other_details <t> text <c> department_description <t> text <c> department_id <t> number </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> What is the mobile phone number of the student named Timmothy Ward ? <s> select cell_mobile_number from students where first_name  =  'timmothy' and last_name  =  'ward' </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> Who is the first student to register? List the first name, middle name and last name. <s> SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1 </s>
--SEPARATOR--
Sections <c> section_id <t> number <c> section_description <t> text <c> section_name <t> text <c> course_id <t> number <c> other_details <t> text </t> Departments <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text <c> department_id <t> number </t> Semesters <c> other_details <t> text <c> semester_name <t> text <c> semester_id <t> number <c> semester_description <t> text </t> Transcripts <c> other_details <t> text <c> transcript_id <t> number <c> transcript_date <t> time </t> Student_Enrolment_Courses <c> course_id <t> number <c> student_enrolment_id <t> number <c> student_course_id <t> number </t> Student_Enrolment <c> degree_program_id <t> number <c> semester_id <t> number <c> other_details <t> text <c> student_enrolment_id <t> number <c> student_id <t> number </t> Students <c> permanent_address_id <t> number <c> ssn <t> text <c> last_name <t> text <c> first_name <t> text <c> email_address <t> text <c> other_student_details <t> text <c> student_id <t> number <c> cell_mobile_number <t> text <c> current_address_id <t> number <c> date_first_registered <t> time <c> date_left <t> time <c> middle_name <t> text </t> Degree_Programs <c> degree_summary_name <t> text <c> degree_program_id <t> number <c> department_id <t> number <c> other_details <t> text <c> degree_summary_description <t> text </t> Courses <c> course_description <t> text <c> course_name <t> text <c> other_details <t> text <c> course_id <t> number </t> Addresses <c> country <t> text <c> other_address_details <t> text <c> state_province_county <t> text <c> city <t> text <c> line_2 <t> text <c> address_id <t> number <c> line_3 <t> text <c> line_1 <t> text <c> zip_postcode <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> Who is the first student to register? List the first name, middle name and last name. <s> SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1 </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> What is the first, middle, and last name of the first student to register? <s> SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1 </s>
--SEPARATOR--
Students <c> student_id <t> number <c> current_address_id <t> number <c> ssn <t> text <c> permanent_address_id <t> number <c> other_student_details <t> text <c> date_left <t> time <c> last_name <t> text <c> date_first_registered <t> time <c> cell_mobile_number <t> text <c> email_address <t> text <c> first_name <t> text <c> middle_name <t> text </t> Student_Enrolment_Courses <c> course_id <t> number <c> student_course_id <t> number <c> student_enrolment_id <t> number </t> Addresses <c> country <t> text <c> state_province_county <t> text <c> address_id <t> number <c> line_3 <t> text <c> zip_postcode <t> text <c> other_address_details <t> text <c> line_2 <t> text <c> line_1 <t> text <c> city <t> text </t> Degree_Programs <c> other_details <t> text <c> degree_program_id <t> number <c> degree_summary_description <t> text <c> degree_summary_name <t> text <c> department_id <t> number </t> Sections <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> section_id <t> number <c> other_details <t> text </t> Departments <c> department_description <t> text <c> department_id <t> number <c> department_name <t> text <c> other_details <t> text </t> Transcripts <c> transcript_date <t> time <c> transcript_id <t> number <c> other_details <t> text </t> Courses <c> other_details <t> text <c> course_name <t> text <c> course_id <t> number <c> course_description <t> text </t> Student_Enrolment <c> student_id <t> number <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> other_details <t> text <c> semester_id <t> number </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> other_details <t> text <c> semester_description <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> What is the first, middle, and last name of the first student to register? <s> SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1 </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> Who is the earliest graduate of the school? List the first name, middle name and last name. <s> SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1 </s>
--SEPARATOR--
Student_Enrolment <c> other_details <t> text <c> degree_program_id <t> number <c> student_enrolment_id <t> number <c> student_id <t> number <c> semester_id <t> number </t> Students <c> date_first_registered <t> time <c> date_left <t> time <c> first_name <t> text <c> last_name <t> text <c> other_student_details <t> text <c> permanent_address_id <t> number <c> ssn <t> text <c> current_address_id <t> number <c> middle_name <t> text <c> cell_mobile_number <t> text <c> student_id <t> number <c> email_address <t> text </t> Semesters <c> other_details <t> text <c> semester_name <t> text <c> semester_id <t> number <c> semester_description <t> text </t> Courses <c> course_description <t> text <c> other_details <t> text <c> course_name <t> text <c> course_id <t> number </t> Sections <c> section_description <t> text <c> section_id <t> number <c> section_name <t> text <c> course_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_enrolment_id <t> number <c> course_id <t> number <c> student_course_id <t> number </t> Departments <c> other_details <t> text <c> department_name <t> text <c> department_description <t> text <c> department_id <t> number </t> Addresses <c> other_address_details <t> text <c> city <t> text <c> address_id <t> number <c> zip_postcode <t> text <c> state_province_county <t> text <c> line_1 <t> text <c> line_3 <t> text <c> country <t> text <c> line_2 <t> text </t> Transcripts <c> transcript_date <t> time <c> other_details <t> text <c> transcript_id <t> number </t> Transcript_Contents <c> transcript_id <t> number <c> student_course_id <t> number </t> Degree_Programs <c> degree_summary_name <t> text <c> other_details <t> text <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_description <t> text <i> Who is the earliest graduate of the school? List the first name, middle name and last name. <s> SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1 </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> What is the first, middle, and last name of the earliest school graduate? <s> SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1 </s>
--SEPARATOR--
Student_Enrolment_Courses <c> course_id <t> number <c> student_course_id <t> number <c> student_enrolment_id <t> number </t> Addresses <c> city <t> text <c> line_2 <t> text <c> state_province_county <t> text <c> other_address_details <t> text <c> zip_postcode <t> text <c> line_1 <t> text <c> address_id <t> number <c> line_3 <t> text <c> country <t> text </t> Departments <c> department_name <t> text <c> department_id <t> number <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> other_details <t> text <c> degree_program_id <t> number <c> degree_summary_description <t> text <c> degree_summary_name <t> text <c> department_id <t> number </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number </t> Semesters <c> other_details <t> text <c> semester_name <t> text <c> semester_id <t> number <c> semester_description <t> text </t> Sections <c> section_description <t> text <c> section_name <t> text <c> course_id <t> number <c> section_id <t> number <c> other_details <t> text </t> Transcripts <c> transcript_date <t> time <c> transcript_id <t> number <c> other_details <t> text </t> Courses <c> other_details <t> text <c> course_description <t> text <c> course_id <t> number <c> course_name <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> other_details <t> text <c> student_id <t> number </t> Students <c> date_first_registered <t> time <c> first_name <t> text <c> last_name <t> text <c> middle_name <t> text <c> date_left <t> time <c> current_address_id <t> number <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> student_id <t> number <c> other_student_details <t> text <c> permanent_address_id <t> number <i> What is the first, middle, and last name of the earliest school graduate? <s> SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1 </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> Whose permanent address is different from his or her current address? List his or her first name. <s> SELECT first_name FROM Students WHERE current_address_id != permanent_address_id </s>
--SEPARATOR--
Students <c> last_name <t> text <c> ssn <t> text <c> current_address_id <t> number <c> student_id <t> number <c> permanent_address_id <t> number <c> email_address <t> text <c> middle_name <t> text <c> first_name <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> cell_mobile_number <t> text <c> other_student_details <t> text </t> Student_Enrolment <c> semester_id <t> number <c> student_id <t> number <c> degree_program_id <t> number <c> other_details <t> text <c> student_enrolment_id <t> number </t> Degree_Programs <c> degree_summary_description <t> text <c> department_id <t> number <c> other_details <t> text <c> degree_summary_name <t> text <c> degree_program_id <t> number </t> Addresses <c> other_address_details <t> text <c> line_2 <t> text <c> country <t> text <c> line_1 <t> text <c> address_id <t> number <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> line_3 <t> text </t> Departments <c> department_description <t> text <c> department_id <t> number <c> other_details <t> text <c> department_name <t> text </t> Transcript_Contents <c> transcript_id <t> number <c> student_course_id <t> number </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> student_enrolment_id <t> number <c> course_id <t> number </t> Courses <c> course_description <t> text <c> course_id <t> number <c> other_details <t> text <c> course_name <t> text </t> Semesters <c> semester_name <t> text <c> other_details <t> text <c> semester_description <t> text <c> semester_id <t> number </t> Sections <c> course_id <t> number <c> section_description <t> text <c> other_details <t> text <c> section_id <t> number <c> section_name <t> text </t> Transcripts <c> other_details <t> text <c> transcript_date <t> time <c> transcript_id <t> number <i> Whose permanent address is different from his or her current address? List his or her first name. <s> SELECT first_name FROM Students WHERE current_address_id != permanent_address_id </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> What is the first name of the student whose permanent address is different from his or her current one? <s> SELECT first_name FROM Students WHERE current_address_id != permanent_address_id </s>
--SEPARATOR--
Student_Enrolment <c> other_details <t> text <c> student_id <t> number <c> semester_id <t> number <c> degree_program_id <t> number <c> student_enrolment_id <t> number </t> Student_Enrolment_Courses <c> course_id <t> number <c> student_enrolment_id <t> number <c> student_course_id <t> number </t> Departments <c> other_details <t> text <c> department_id <t> number <c> department_description <t> text <c> department_name <t> text </t> Degree_Programs <c> other_details <t> text <c> department_id <t> number <c> degree_summary_description <t> text <c> degree_summary_name <t> text <c> degree_program_id <t> number </t> Semesters <c> other_details <t> text <c> semester_id <t> number <c> semester_description <t> text <c> semester_name <t> text </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Sections <c> course_id <t> number <c> section_id <t> number <c> other_details <t> text <c> section_name <t> text <c> section_description <t> text </t> Courses <c> other_details <t> text <c> course_id <t> number <c> course_description <t> text <c> course_name <t> text </t> Students <c> ssn <t> text <c> other_student_details <t> text <c> date_left <t> time <c> permanent_address_id <t> number <c> current_address_id <t> number <c> student_id <t> number <c> middle_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> date_first_registered <t> time <c> last_name <t> text <c> first_name <t> text </t> Transcript_Contents <c> transcript_id <t> number <c> student_course_id <t> number </t> Addresses <c> country <t> text <c> line_2 <t> text <c> other_address_details <t> text <c> address_id <t> number <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> line_1 <t> text <c> state_province_county <t> text <i> What is the first name of the student whose permanent address is different from his or her current one? <s> SELECT first_name FROM Students WHERE current_address_id != permanent_address_id </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> Which address holds the most number of students currently? List the address id and all lines. <s> SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Courses <c> course_description <t> text <c> other_details <t> text <c> course_name <t> text <c> course_id <t> number </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcript_Contents <c> transcript_id <t> number <c> student_course_id <t> number </t> Sections <c> course_id <t> number <c> section_id <t> number <c> other_details <t> text <c> section_name <t> text <c> section_description <t> text </t> Semesters <c> semester_id <t> number <c> semester_description <t> text <c> semester_name <t> text <c> other_details <t> text </t> Transcripts <c> other_details <t> text <c> transcript_id <t> number <c> transcript_date <t> time </t> Students <c> current_address_id <t> number <c> cell_mobile_number <t> text <c> last_name <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> permanent_address_id <t> number <c> first_name <t> text <c> student_id <t> number <c> other_student_details <t> text <c> middle_name <t> text <c> date_left <t> time </t> Degree_Programs <c> degree_summary_description <t> text <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_program_id <t> number <c> other_details <t> text </t> Student_Enrolment <c> student_id <t> number <c> degree_program_id <t> number <c> student_enrolment_id <t> number <c> semester_id <t> number <c> other_details <t> text </t> Departments <c> department_description <t> text <c> department_id <t> number <c> other_details <t> text <c> department_name <t> text </t> Addresses <c> zip_postcode <t> text <c> line_3 <t> text <c> country <t> text <c> line_1 <t> text <c> city <t> text <c> line_2 <t> text <c> address_id <t> number <c> other_address_details <t> text <c> state_province_county <t> text <i> Which address holds the most number of students currently? List the address id and all lines. <s> SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> What is the id, line 1, and line 2 of the address with the most students? <s> SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Students <c> other_student_details <t> text <c> date_left <t> time <c> student_id <t> number <c> middle_name <t> text <c> permanent_address_id <t> number <c> last_name <t> text <c> date_first_registered <t> time <c> ssn <t> text <c> current_address_id <t> number <c> first_name <t> text <c> email_address <t> text <c> cell_mobile_number <t> text </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Departments <c> other_details <t> text <c> department_name <t> text <c> department_id <t> number <c> department_description <t> text </t> Student_Enrolment <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text <c> student_enrolment_id <t> number <c> degree_program_id <t> number </t> Sections <c> section_id <t> number <c> section_description <t> text <c> course_id <t> number <c> other_details <t> text <c> section_name <t> text </t> Semesters <c> semester_name <t> text <c> semester_id <t> number <c> semester_description <t> text <c> other_details <t> text </t> Transcript_Contents <c> transcript_id <t> number <c> student_course_id <t> number </t> Courses <c> course_description <t> text <c> course_id <t> number <c> other_details <t> text <c> course_name <t> text </t> Student_Enrolment_Courses <c> course_id <t> number <c> student_enrolment_id <t> number <c> student_course_id <t> number </t> Degree_Programs <c> degree_program_id <t> number <c> other_details <t> text <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> department_id <t> number </t> Addresses <c> other_address_details <t> text <c> zip_postcode <t> text <c> line_1 <t> text <c> line_3 <t> text <c> address_id <t> number <c> state_province_county <t> text <c> line_2 <t> text <c> country <t> text <c> city <t> text <i> What is the id, line 1, and line 2 of the address with the most students? <s> SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> On average, when were the transcripts printed? <s> SELECT avg(transcript_date) FROM Transcripts </s>
--SEPARATOR--
Semesters <c> semester_name <t> text <c> semester_description <t> text <c> semester_id <t> number <c> other_details <t> text </t> Degree_Programs <c> degree_summary_name <t> text <c> other_details <t> text <c> degree_summary_description <t> text <c> department_id <t> number <c> degree_program_id <t> number </t> Departments <c> department_name <t> text <c> department_id <t> number <c> department_description <t> text <c> other_details <t> text </t> Transcript_Contents <c> transcript_id <t> number <c> student_course_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Students <c> first_name <t> text <c> permanent_address_id <t> number <c> last_name <t> text <c> ssn <t> text <c> other_student_details <t> text <c> student_id <t> number <c> date_left <t> time <c> current_address_id <t> number <c> middle_name <t> text <c> date_first_registered <t> time <c> email_address <t> text <c> cell_mobile_number <t> text </t> Courses <c> course_description <t> text <c> course_id <t> number <c> course_name <t> text <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Student_Enrolment <c> student_enrolment_id <t> number <c> other_details <t> text <c> degree_program_id <t> number <c> student_id <t> number <c> semester_id <t> number </t> Sections <c> course_id <t> number <c> section_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Addresses <c> zip_postcode <t> text <c> state_province_county <t> text <c> city <t> text <c> address_id <t> number <c> line_2 <t> text <c> line_3 <t> text <c> country <t> text <c> other_address_details <t> text <c> line_1 <t> text <i> On average, when were the transcripts printed? <s> SELECT avg(transcript_date) FROM Transcripts </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> What is the average transcript date? <s> SELECT avg(transcript_date) FROM Transcripts </s>
--SEPARATOR--
Sections <c> section_name <t> text <c> course_id <t> number <c> other_details <t> text <c> section_id <t> number <c> section_description <t> text </t> Transcripts <c> transcript_date <t> time <c> transcript_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_enrolment_id <t> number <c> student_course_id <t> number <c> course_id <t> number </t> Degree_Programs <c> department_id <t> number <c> degree_summary_description <t> text <c> degree_program_id <t> number <c> other_details <t> text <c> degree_summary_name <t> text </t> Student_Enrolment <c> student_id <t> number <c> other_details <t> text <c> semester_id <t> number <c> degree_program_id <t> number <c> student_enrolment_id <t> number </t> Semesters <c> other_details <t> text <c> semester_name <t> text <c> semester_id <t> number <c> semester_description <t> text </t> Departments <c> department_name <t> text <c> department_description <t> text <c> department_id <t> number <c> other_details <t> text </t> Addresses <c> address_id <t> number <c> zip_postcode <t> text <c> line_2 <t> text <c> country <t> text <c> other_address_details <t> text <c> line_1 <t> text <c> state_province_county <t> text <c> line_3 <t> text <c> city <t> text </t> Students <c> date_left <t> time <c> other_student_details <t> text <c> permanent_address_id <t> number <c> cell_mobile_number <t> text <c> date_first_registered <t> time <c> ssn <t> text <c> last_name <t> text <c> middle_name <t> text <c> current_address_id <t> number <c> email_address <t> text <c> first_name <t> text <c> student_id <t> number </t> Courses <c> course_description <t> text <c> course_name <t> text <c> course_id <t> number <c> other_details <t> text </t> Transcript_Contents <c> transcript_id <t> number <c> student_course_id <t> number <i> What is the average transcript date? <s> SELECT avg(transcript_date) FROM Transcripts </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> When is the first transcript released? List the date and details. <s> SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1 </s>
--SEPARATOR--
Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number </t> Student_Enrolment_Courses <c> course_id <t> number <c> student_course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> other_details <t> text <c> transcript_date <t> time </t> Students <c> first_name <t> text <c> cell_mobile_number <t> text <c> date_left <t> time <c> email_address <t> text <c> other_student_details <t> text <c> date_first_registered <t> time <c> permanent_address_id <t> number <c> student_id <t> number <c> last_name <t> text <c> middle_name <t> text <c> ssn <t> text <c> current_address_id <t> number </t> Courses <c> other_details <t> text <c> course_description <t> text <c> course_id <t> number <c> course_name <t> text </t> Addresses <c> other_address_details <t> text <c> address_id <t> number <c> line_3 <t> text <c> city <t> text <c> line_2 <t> text <c> line_1 <t> text <c> state_province_county <t> text <c> country <t> text <c> zip_postcode <t> text </t> Semesters <c> semester_name <t> text <c> semester_id <t> number <c> semester_description <t> text <c> other_details <t> text </t> Sections <c> section_description <t> text <c> section_id <t> number <c> other_details <t> text <c> course_id <t> number <c> section_name <t> text </t> Student_Enrolment <c> degree_program_id <t> number <c> student_enrolment_id <t> number <c> other_details <t> text <c> semester_id <t> number <c> student_id <t> number </t> Departments <c> department_description <t> text <c> other_details <t> text <c> department_id <t> number <c> department_name <t> text </t> Degree_Programs <c> department_id <t> number <c> degree_program_id <t> number <c> other_details <t> text <c> degree_summary_name <t> text <c> degree_summary_description <t> text <i> When is the first transcript released? List the date and details. <s> SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1 </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> What is the earliest date of a transcript release, and what details can you tell me? <s> SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1 </s>
--SEPARATOR--
Semesters <c> semester_description <t> text <c> semester_name <t> text <c> semester_id <t> number <c> other_details <t> text </t> Departments <c> department_name <t> text <c> other_details <t> text <c> department_description <t> text <c> department_id <t> number </t> Addresses <c> country <t> text <c> address_id <t> number <c> line_1 <t> text <c> line_3 <t> text <c> city <t> text <c> state_province_county <t> text <c> zip_postcode <t> text <c> line_2 <t> text <c> other_address_details <t> text </t> Transcripts <c> other_details <t> text <c> transcript_id <t> number <c> transcript_date <t> time </t> Student_Enrolment <c> degree_program_id <t> number <c> student_enrolment_id <t> number <c> student_id <t> number <c> other_details <t> text <c> semester_id <t> number </t> Students <c> date_left <t> time <c> date_first_registered <t> time <c> first_name <t> text <c> email_address <t> text <c> cell_mobile_number <t> text <c> middle_name <t> text <c> current_address_id <t> number <c> last_name <t> text <c> student_id <t> number <c> ssn <t> text <c> permanent_address_id <t> number <c> other_student_details <t> text </t> Transcript_Contents <c> transcript_id <t> number <c> student_course_id <t> number </t> Courses <c> other_details <t> text <c> course_name <t> text <c> course_description <t> text <c> course_id <t> number </t> Degree_Programs <c> department_id <t> number <c> degree_program_id <t> number <c> other_details <t> text <c> degree_summary_description <t> text <c> degree_summary_name <t> text </t> Student_Enrolment_Courses <c> course_id <t> number <c> student_enrolment_id <t> number <c> student_course_id <t> number </t> Sections <c> section_id <t> number <c> course_id <t> number <c> other_details <t> text <c> section_description <t> text <c> section_name <t> text <i> What is the earliest date of a transcript release, and what details can you tell me? <s> SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1 </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> How many transcripts are released? <s> SELECT count(*) FROM Transcripts </s>
--SEPARATOR--
Students <c> ssn <t> text <c> middle_name <t> text <c> date_left <t> time <c> other_student_details <t> text <c> cell_mobile_number <t> text <c> student_id <t> number <c> date_first_registered <t> time <c> permanent_address_id <t> number <c> last_name <t> text <c> email_address <t> text <c> current_address_id <t> number <c> first_name <t> text </t> Courses <c> other_details <t> text <c> course_description <t> text <c> course_id <t> number <c> course_name <t> text </t> Student_Enrolment <c> degree_program_id <t> number <c> student_enrolment_id <t> number <c> student_id <t> number <c> other_details <t> text <c> semester_id <t> number </t> Degree_Programs <c> department_id <t> number <c> degree_program_id <t> number <c> other_details <t> text <c> degree_summary_name <t> text <c> degree_summary_description <t> text </t> Departments <c> other_details <t> text <c> department_name <t> text <c> department_id <t> number <c> department_description <t> text </t> Addresses <c> country <t> text <c> line_3 <t> text <c> other_address_details <t> text <c> address_id <t> number <c> state_province_county <t> text <c> zip_postcode <t> text <c> line_1 <t> text <c> city <t> text <c> line_2 <t> text </t> Student_Enrolment_Courses <c> student_enrolment_id <t> number <c> student_course_id <t> number <c> course_id <t> number </t> Sections <c> other_details <t> text <c> section_name <t> text <c> section_id <t> number <c> course_id <t> number <c> section_description <t> text </t> Transcripts <c> transcript_id <t> number <c> other_details <t> text <c> transcript_date <t> time </t> Transcript_Contents <c> transcript_id <t> number <c> student_course_id <t> number </t> Semesters <c> semester_id <t> number <c> semester_description <t> text <c> semester_name <t> text <c> other_details <t> text <i> How many transcripts are released? <s> SELECT count(*) FROM Transcripts </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> How many transcripts are listed? <s> SELECT count(*) FROM Transcripts </s>
--SEPARATOR--
Departments <c> other_details <t> text <c> department_name <t> text <c> department_id <t> number <c> department_description <t> text </t> Sections <c> section_id <t> number <c> other_details <t> text <c> course_id <t> number <c> section_description <t> text <c> section_name <t> text </t> Transcripts <c> transcript_id <t> number <c> other_details <t> text <c> transcript_date <t> time </t> Students <c> permanent_address_id <t> number <c> last_name <t> text <c> date_first_registered <t> time <c> ssn <t> text <c> middle_name <t> text <c> email_address <t> text <c> first_name <t> text <c> student_id <t> number <c> cell_mobile_number <t> text <c> current_address_id <t> number <c> other_student_details <t> text <c> date_left <t> time </t> Student_Enrolment <c> student_id <t> number <c> degree_program_id <t> number <c> other_details <t> text <c> semester_id <t> number <c> student_enrolment_id <t> number </t> Student_Enrolment_Courses <c> student_enrolment_id <t> number <c> course_id <t> number <c> student_course_id <t> number </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number </t> Degree_Programs <c> department_id <t> number <c> degree_summary_description <t> text <c> degree_program_id <t> number <c> degree_summary_name <t> text <c> other_details <t> text </t> Addresses <c> line_1 <t> text <c> zip_postcode <t> text <c> address_id <t> number <c> line_2 <t> text <c> other_address_details <t> text <c> city <t> text <c> country <t> text <c> line_3 <t> text <c> state_province_county <t> text </t> Semesters <c> semester_description <t> text <c> other_details <t> text <c> semester_id <t> number <c> semester_name <t> text </t> Courses <c> other_details <t> text <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <i> How many transcripts are listed? <s> SELECT count(*) FROM Transcripts </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> What is the last transcript release date? <s> SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1 </s>
--SEPARATOR--
Addresses <c> state_province_county <t> text <c> zip_postcode <t> text <c> line_2 <t> text <c> address_id <t> number <c> line_3 <t> text <c> other_address_details <t> text <c> city <t> text <c> line_1 <t> text <c> country <t> text </t> Transcripts <c> transcript_id <t> number <c> other_details <t> text <c> transcript_date <t> time </t> Students <c> cell_mobile_number <t> text <c> other_student_details <t> text <c> middle_name <t> text <c> date_first_registered <t> time <c> current_address_id <t> number <c> date_left <t> time <c> permanent_address_id <t> number <c> last_name <t> text <c> ssn <t> text <c> first_name <t> text <c> student_id <t> number <c> email_address <t> text </t> Transcript_Contents <c> transcript_id <t> number <c> student_course_id <t> number </t> Student_Enrolment <c> student_enrolment_id <t> number <c> other_details <t> text <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number </t> Semesters <c> semester_description <t> text <c> other_details <t> text <c> semester_name <t> text <c> semester_id <t> number </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> student_enrolment_id <t> number <c> course_id <t> number </t> Courses <c> course_description <t> text <c> course_name <t> text <c> other_details <t> text <c> course_id <t> number </t> Sections <c> other_details <t> text <c> section_description <t> text <c> section_name <t> text <c> course_id <t> number <c> section_id <t> number </t> Departments <c> other_details <t> text <c> department_name <t> text <c> department_description <t> text <c> department_id <t> number </t> Degree_Programs <c> degree_summary_description <t> text <c> department_id <t> number <c> degree_program_id <t> number <c> other_details <t> text <c> degree_summary_name <t> text <i> What is the last transcript release date? <s> SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1 </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> When was the last transcript released? <s> SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1 </s>
--SEPARATOR--
Student_Enrolment <c> semester_id <t> number <c> student_id <t> number <c> student_enrolment_id <t> number <c> other_details <t> text <c> degree_program_id <t> number </t> Degree_Programs <c> other_details <t> text <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> degree_program_id <t> number <c> department_id <t> number </t> Departments <c> department_id <t> number <c> department_description <t> text <c> other_details <t> text <c> department_name <t> text </t> Addresses <c> state_province_county <t> text <c> line_2 <t> text <c> city <t> text <c> line_3 <t> text <c> other_address_details <t> text <c> address_id <t> number <c> zip_postcode <t> text <c> line_1 <t> text <c> country <t> text </t> Students <c> cell_mobile_number <t> text <c> last_name <t> text <c> date_left <t> time <c> email_address <t> text <c> student_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> current_address_id <t> number <c> permanent_address_id <t> number <c> other_student_details <t> text </t> Sections <c> section_description <t> text <c> course_id <t> number <c> section_name <t> text <c> other_details <t> text <c> section_id <t> number </t> Transcript_Contents <c> transcript_id <t> number <c> student_course_id <t> number </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Semesters <c> other_details <t> text <c> semester_id <t> number <c> semester_description <t> text <c> semester_name <t> text </t> Transcripts <c> other_details <t> text <c> transcript_id <t> number <c> transcript_date <t> time </t> Student_Enrolment_Courses <c> course_id <t> number <c> student_enrolment_id <t> number <c> student_course_id <t> number <i> When was the last transcript released? <s> SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1 </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> How many times at most can a course enrollment result show in different transcripts? Also show the course enrollment id. <s> SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Students <c> permanent_address_id <t> number <c> current_address_id <t> number <c> other_student_details <t> text <c> last_name <t> text <c> date_left <t> time <c> email_address <t> text <c> first_name <t> text <c> date_first_registered <t> time <c> student_id <t> number <c> cell_mobile_number <t> text <c> middle_name <t> text <c> ssn <t> text </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Courses <c> course_description <t> text <c> course_name <t> text <c> course_id <t> number <c> other_details <t> text </t> Addresses <c> country <t> text <c> other_address_details <t> text <c> line_1 <t> text <c> line_3 <t> text <c> state_province_county <t> text <c> line_2 <t> text <c> address_id <t> number <c> city <t> text <c> zip_postcode <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> degree_program_id <t> number <c> other_details <t> text </t> Degree_Programs <c> department_id <t> number <c> degree_program_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number </t> Departments <c> department_description <t> text <c> department_name <t> text <c> department_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> course_id <t> number <c> student_course_id <t> number <c> student_enrolment_id <t> number </t> Sections <c> course_id <t> number <c> other_details <t> text <c> section_id <t> number <c> section_name <t> text <c> section_description <t> text </t> Semesters <c> semester_id <t> number <c> other_details <t> text <c> semester_description <t> text <c> semester_name <t> text <i> How many times at most can a course enrollment result show in different transcripts? Also show the course enrollment id. <s> SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> What is the maximum number of times that a course shows up in different transcripts and what is that course's enrollment id? <s> SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Student_Enrolment_Courses <c> course_id <t> number <c> student_course_id <t> number <c> student_enrolment_id <t> number </t> Semesters <c> semester_name <t> text <c> semester_id <t> number <c> other_details <t> text <c> semester_description <t> text </t> Students <c> first_name <t> text <c> student_id <t> number <c> email_address <t> text <c> cell_mobile_number <t> text <c> current_address_id <t> number <c> last_name <t> text <c> other_student_details <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> middle_name <t> text <c> permanent_address_id <t> number </t> Student_Enrolment <c> student_id <t> number <c> other_details <t> text <c> degree_program_id <t> number <c> semester_id <t> number <c> student_enrolment_id <t> number </t> Degree_Programs <c> degree_summary_name <t> text <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_description <t> text <c> other_details <t> text </t> Addresses <c> line_3 <t> text <c> zip_postcode <t> text <c> line_2 <t> text <c> line_1 <t> text <c> address_id <t> number <c> other_address_details <t> text <c> city <t> text <c> country <t> text <c> state_province_county <t> text </t> Courses <c> other_details <t> text <c> course_name <t> text <c> course_id <t> number <c> course_description <t> text </t> Departments <c> other_details <t> text <c> department_description <t> text <c> department_id <t> number <c> department_name <t> text </t> Transcript_Contents <c> transcript_id <t> number <c> student_course_id <t> number </t> Transcripts <c> transcript_id <t> number <c> other_details <t> text <c> transcript_date <t> time </t> Sections <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text <c> section_id <t> number <i> What is the maximum number of times that a course shows up in different transcripts and what is that course's enrollment id? <s> SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> Show the date of the transcript which shows the least number of results, also list the id. <s> SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1 </s>
--SEPARATOR--
Sections <c> section_description <t> text <c> section_id <t> number <c> section_name <t> text <c> other_details <t> text <c> course_id <t> number </t> Semesters <c> semester_id <t> number <c> other_details <t> text <c> semester_name <t> text <c> semester_description <t> text </t> Courses <c> course_description <t> text <c> course_id <t> number <c> course_name <t> text <c> other_details <t> text </t> Students <c> current_address_id <t> number <c> first_name <t> text <c> ssn <t> text <c> middle_name <t> text <c> other_student_details <t> text <c> date_left <t> time <c> email_address <t> text <c> last_name <t> text <c> date_first_registered <t> time <c> cell_mobile_number <t> text <c> student_id <t> number <c> permanent_address_id <t> number </t> Departments <c> department_description <t> text <c> department_id <t> number <c> department_name <t> text <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Addresses <c> city <t> text <c> line_3 <t> text <c> line_2 <t> text <c> state_province_county <t> text <c> zip_postcode <t> text <c> line_1 <t> text <c> country <t> text <c> address_id <t> number <c> other_address_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> other_details <t> text <c> degree_summary_name <t> text <c> degree_summary_description <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number </t> Student_Enrolment <c> semester_id <t> number <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> other_details <t> text <c> student_id <t> number </t> Transcripts <c> other_details <t> text <c> transcript_date <t> time <c> transcript_id <t> number <i> Show the date of the transcript which shows the least number of results, also list the id. <s> SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1 </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> What is the date and id of the transcript with the least number of results? <s> SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1 </s>
--SEPARATOR--
Courses <c> course_id <t> number <c> course_name <t> text <c> other_details <t> text <c> course_description <t> text </t> Degree_Programs <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> department_id <t> number <c> other_details <t> text <c> degree_program_id <t> number </t> Departments <c> department_description <t> text <c> department_id <t> number <c> other_details <t> text <c> department_name <t> text </t> Students <c> current_address_id <t> number <c> last_name <t> text <c> middle_name <t> text <c> ssn <t> text <c> date_left <t> time <c> permanent_address_id <t> number <c> cell_mobile_number <t> text <c> other_student_details <t> text <c> first_name <t> text <c> date_first_registered <t> time <c> email_address <t> text <c> student_id <t> number </t> Addresses <c> line_2 <t> text <c> zip_postcode <t> text <c> line_1 <t> text <c> address_id <t> number <c> line_3 <t> text <c> country <t> text <c> other_address_details <t> text <c> city <t> text <c> state_province_county <t> text </t> Sections <c> other_details <t> text <c> section_description <t> text <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text </t> Transcripts <c> transcript_id <t> number <c> other_details <t> text <c> transcript_date <t> time </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> student_enrolment_id <t> number <c> course_id <t> number </t> Semesters <c> other_details <t> text <c> semester_name <t> text <c> semester_id <t> number <c> semester_description <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number </t> Student_Enrolment <c> student_id <t> number <c> semester_id <t> number <c> other_details <t> text <c> student_enrolment_id <t> number <c> degree_program_id <t> number <i> What is the date and id of the transcript with the least number of results? <s> SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1 </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> Find the semester when both Master students and Bachelor students got enrolled in. <s> SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor' </s>
--SEPARATOR--
Transcripts <c> transcript_date <t> time <c> other_details <t> text <c> transcript_id <t> number </t> Student_Enrolment <c> degree_program_id <t> number <c> student_enrolment_id <t> number <c> other_details <t> text <c> student_id <t> number <c> semester_id <t> number </t> Sections <c> course_id <t> number <c> section_description <t> text <c> section_id <t> number <c> other_details <t> text <c> section_name <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> degree_summary_name <t> text <c> department_id <t> number <c> degree_summary_description <t> text <c> other_details <t> text </t> Students <c> cell_mobile_number <t> text <c> other_student_details <t> text <c> email_address <t> text <c> date_first_registered <t> time <c> permanent_address_id <t> number <c> date_left <t> time <c> student_id <t> number <c> middle_name <t> text <c> last_name <t> text <c> ssn <t> text <c> current_address_id <t> number <c> first_name <t> text </t> Courses <c> course_description <t> text <c> course_name <t> text <c> other_details <t> text <c> course_id <t> number </t> Student_Enrolment_Courses <c> student_enrolment_id <t> number <c> course_id <t> number <c> student_course_id <t> number </t> Departments <c> other_details <t> text <c> department_name <t> text <c> department_description <t> text <c> department_id <t> number </t> Semesters <c> semester_name <t> text <c> semester_description <t> text <c> semester_id <t> number <c> other_details <t> text </t> Transcript_Contents <c> transcript_id <t> number <c> student_course_id <t> number </t> Addresses <c> address_id <t> number <c> city <t> text <c> line_3 <t> text <c> line_2 <t> text <c> other_address_details <t> text <c> state_province_county <t> text <c> zip_postcode <t> text <c> country <t> text <c> line_1 <t> text <i> Find the semester when both Master students and Bachelor students got enrolled in. <s> SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor' </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> What is the id of the semester that had both Masters and Bachelors students enrolled? <s> SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor' </s>
--SEPARATOR--
Sections <c> section_description <t> text <c> section_name <t> text <c> section_id <t> number <c> other_details <t> text <c> course_id <t> number </t> Transcript_Contents <c> transcript_id <t> number <c> student_course_id <t> number </t> Transcripts <c> transcript_date <t> time <c> other_details <t> text <c> transcript_id <t> number </t> Addresses <c> line_1 <t> text <c> city <t> text <c> country <t> text <c> address_id <t> number <c> zip_postcode <t> text <c> other_address_details <t> text <c> state_province_county <t> text <c> line_3 <t> text <c> line_2 <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> other_details <t> text <c> semester_description <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> semester_id <t> number <c> degree_program_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> student_enrolment_id <t> number <c> course_id <t> number </t> Courses <c> course_id <t> number <c> course_description <t> text <c> course_name <t> text <c> other_details <t> text </t> Departments <c> department_description <t> text <c> department_name <t> text <c> department_id <t> number <c> other_details <t> text </t> Students <c> last_name <t> text <c> date_first_registered <t> time <c> other_student_details <t> text <c> current_address_id <t> number <c> cell_mobile_number <t> text <c> ssn <t> text <c> date_left <t> time <c> email_address <t> text <c> middle_name <t> text <c> student_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> degree_summary_description <t> text <c> other_details <t> text <c> department_id <t> number <c> degree_summary_name <t> text <i> What is the id of the semester that had both Masters and Bachelors students enrolled? <s> SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor' </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> How many different addresses do the students currently live? <s> SELECT count(DISTINCT current_address_id) FROM Students </s>
--SEPARATOR--
Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> student_enrolment_id <t> number <c> course_id <t> number </t> Sections <c> section_name <t> text <c> section_description <t> text <c> section_id <t> number <c> other_details <t> text <c> course_id <t> number </t> Courses <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text <c> course_id <t> number </t> Departments <c> department_description <t> text <c> other_details <t> text <c> department_name <t> text <c> department_id <t> number </t> Student_Enrolment <c> student_id <t> number <c> student_enrolment_id <t> number <c> other_details <t> text <c> degree_program_id <t> number <c> semester_id <t> number </t> Semesters <c> other_details <t> text <c> semester_description <t> text <c> semester_id <t> number <c> semester_name <t> text </t> Degree_Programs <c> degree_summary_description <t> text <c> other_details <t> text <c> degree_program_id <t> number <c> degree_summary_name <t> text <c> department_id <t> number </t> Addresses <c> other_address_details <t> text <c> address_id <t> number <c> line_2 <t> text <c> line_1 <t> text <c> zip_postcode <t> text <c> line_3 <t> text <c> state_province_county <t> text <c> country <t> text <c> city <t> text </t> Students <c> ssn <t> text <c> first_name <t> text <c> cell_mobile_number <t> text <c> middle_name <t> text <c> date_first_registered <t> time <c> email_address <t> text <c> date_left <t> time <c> permanent_address_id <t> number <c> student_id <t> number <c> current_address_id <t> number <c> last_name <t> text <c> other_student_details <t> text </t> Transcripts <c> transcript_date <t> time <c> transcript_id <t> number <c> other_details <t> text <i> How many different addresses do the students currently live? <s> SELECT count(DISTINCT current_address_id) FROM Students </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> What are the different addresses that have students living there? <s> SELECT count(DISTINCT current_address_id) FROM Students </s>
--SEPARATOR--
Addresses <c> line_1 <t> text <c> other_address_details <t> text <c> state_province_county <t> text <c> country <t> text <c> line_3 <t> text <c> city <t> text <c> line_2 <t> text <c> address_id <t> number <c> zip_postcode <t> text </t> Student_Enrolment_Courses <c> course_id <t> number <c> student_course_id <t> number <c> student_enrolment_id <t> number </t> Transcript_Contents <c> transcript_id <t> number <c> student_course_id <t> number </t> Semesters <c> semester_name <t> text <c> other_details <t> text <c> semester_id <t> number <c> semester_description <t> text </t> Courses <c> other_details <t> text <c> course_description <t> text <c> course_id <t> number <c> course_name <t> text </t> Degree_Programs <c> department_id <t> number <c> other_details <t> text <c> degree_summary_description <t> text <c> degree_program_id <t> number <c> degree_summary_name <t> text </t> Transcripts <c> other_details <t> text <c> transcript_id <t> number <c> transcript_date <t> time </t> Departments <c> other_details <t> text <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text </t> Students <c> email_address <t> text <c> current_address_id <t> number <c> student_id <t> number <c> date_left <t> time <c> date_first_registered <t> time <c> permanent_address_id <t> number <c> cell_mobile_number <t> text <c> middle_name <t> text <c> last_name <t> text <c> ssn <t> text <c> first_name <t> text <c> other_student_details <t> text </t> Sections <c> course_id <t> number <c> section_description <t> text <c> section_name <t> text <c> other_details <t> text <c> section_id <t> number </t> Student_Enrolment <c> other_details <t> text <c> student_enrolment_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> degree_program_id <t> number <i> What are the different addresses that have students living there? <s> SELECT count(DISTINCT current_address_id) FROM Students </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> List all the student details in reversed lexicographical order. <s> SELECT other_student_details FROM Students ORDER BY other_student_details DESC </s>
--SEPARATOR--
Student_Enrolment_Courses <c> course_id <t> number <c> student_enrolment_id <t> number <c> student_course_id <t> number </t> Sections <c> section_description <t> text <c> other_details <t> text <c> section_id <t> number <c> section_name <t> text <c> course_id <t> number </t> Students <c> middle_name <t> text <c> permanent_address_id <t> number <c> ssn <t> text <c> current_address_id <t> number <c> student_id <t> number <c> first_name <t> text <c> date_left <t> time <c> date_first_registered <t> time <c> cell_mobile_number <t> text <c> email_address <t> text <c> other_student_details <t> text <c> last_name <t> text </t> Transcripts <c> other_details <t> text <c> transcript_date <t> time <c> transcript_id <t> number </t> Departments <c> department_description <t> text <c> department_name <t> text <c> other_details <t> text <c> department_id <t> number </t> Transcript_Contents <c> transcript_id <t> number <c> student_course_id <t> number </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> other_details <t> text <c> semester_description <t> text </t> Courses <c> course_name <t> text <c> other_details <t> text <c> course_id <t> number <c> course_description <t> text </t> Student_Enrolment <c> semester_id <t> number <c> student_id <t> number <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> other_details <t> text </t> Degree_Programs <c> degree_summary_name <t> text <c> other_details <t> text <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_description <t> text </t> Addresses <c> line_3 <t> text <c> state_province_county <t> text <c> country <t> text <c> line_1 <t> text <c> other_address_details <t> text <c> zip_postcode <t> text <c> city <t> text <c> address_id <t> number <c> line_2 <t> text <i> List all the student details in reversed lexicographical order. <s> SELECT other_student_details FROM Students ORDER BY other_student_details DESC </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> What other details can you tell me about students in reverse alphabetical order? <s> SELECT other_student_details FROM Students ORDER BY other_student_details DESC </s>
--SEPARATOR--
Addresses <c> line_2 <t> text <c> zip_postcode <t> text <c> other_address_details <t> text <c> line_3 <t> text <c> line_1 <t> text <c> city <t> text <c> state_province_county <t> text <c> address_id <t> number <c> country <t> text </t> Semesters <c> semester_name <t> text <c> semester_id <t> number <c> semester_description <t> text <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> student_enrolment_id <t> number <c> course_id <t> number </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number </t> Sections <c> course_id <t> number <c> section_id <t> number <c> section_description <t> text <c> section_name <t> text <c> other_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> other_details <t> text <c> course_description <t> text </t> Students <c> middle_name <t> text <c> last_name <t> text <c> student_id <t> number <c> email_address <t> text <c> other_student_details <t> text <c> cell_mobile_number <t> text <c> date_left <t> time <c> ssn <t> text <c> first_name <t> text <c> date_first_registered <t> time <c> permanent_address_id <t> number <c> current_address_id <t> number </t> Student_Enrolment <c> semester_id <t> number <c> student_id <t> number <c> degree_program_id <t> number <c> student_enrolment_id <t> number <c> other_details <t> text </t> Transcripts <c> transcript_date <t> time <c> transcript_id <t> number <c> other_details <t> text </t> Degree_Programs <c> other_details <t> text <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> degree_program_id <t> number <c> department_id <t> number </t> Departments <c> department_description <t> text <c> department_name <t> text <c> department_id <t> number <c> other_details <t> text <i> What other details can you tell me about students in reverse alphabetical order? <s> SELECT other_student_details FROM Students ORDER BY other_student_details DESC </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> Describe the section h. <s> SELECT section_description FROM Sections WHERE section_name  =  'h' </s>
--SEPARATOR--
Students <c> current_address_id <t> number <c> last_name <t> text <c> permanent_address_id <t> number <c> first_name <t> text <c> email_address <t> text <c> cell_mobile_number <t> text <c> middle_name <t> text <c> ssn <t> text <c> date_left <t> time <c> student_id <t> number <c> date_first_registered <t> time <c> other_student_details <t> text </t> Courses <c> other_details <t> text <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number </t> Departments <c> department_name <t> text <c> department_description <t> text <c> department_id <t> number <c> other_details <t> text </t> Semesters <c> semester_name <t> text <c> semester_id <t> number <c> semester_description <t> text <c> other_details <t> text </t> Addresses <c> state_province_county <t> text <c> country <t> text <c> zip_postcode <t> text <c> line_3 <t> text <c> line_1 <t> text <c> address_id <t> number <c> other_address_details <t> text <c> line_2 <t> text <c> city <t> text </t> Student_Enrolment_Courses <c> student_enrolment_id <t> number <c> student_course_id <t> number <c> course_id <t> number </t> Transcripts <c> other_details <t> text <c> transcript_id <t> number <c> transcript_date <t> time </t> Sections <c> section_id <t> number <c> section_description <t> text <c> course_id <t> number <c> section_name <t> text <c> other_details <t> text </t> Student_Enrolment <c> student_id <t> number <c> semester_id <t> number <c> degree_program_id <t> number <c> other_details <t> text <c> student_enrolment_id <t> number </t> Degree_Programs <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_program_id <t> number <c> other_details <t> text <c> degree_summary_description <t> text <i> Describe the section h. <s> SELECT section_description FROM Sections WHERE section_name  =  'h' </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> What is the description for the section named h? <s> SELECT section_description FROM Sections WHERE section_name  =  'h' </s>
--SEPARATOR--
Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Addresses <c> line_2 <t> text <c> line_3 <t> text <c> other_address_details <t> text <c> city <t> text <c> line_1 <t> text <c> country <t> text <c> zip_postcode <t> text <c> address_id <t> number <c> state_province_county <t> text </t> Students <c> date_first_registered <t> time <c> other_student_details <t> text <c> ssn <t> text <c> email_address <t> text <c> cell_mobile_number <t> text <c> last_name <t> text <c> middle_name <t> text <c> first_name <t> text <c> date_left <t> time <c> current_address_id <t> number <c> student_id <t> number <c> permanent_address_id <t> number </t> Semesters <c> semester_description <t> text <c> semester_name <t> text <c> other_details <t> text <c> semester_id <t> number </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Sections <c> section_description <t> text <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> other_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> other_details <t> text <c> semester_id <t> number <c> student_id <t> number <c> degree_program_id <t> number </t> Departments <c> department_id <t> number <c> other_details <t> text <c> department_name <t> text <c> department_description <t> text </t> Courses <c> course_description <t> text <c> course_name <t> text <c> other_details <t> text <c> course_id <t> number </t> Degree_Programs <c> degree_summary_name <t> text <c> degree_program_id <t> number <c> other_details <t> text <c> degree_summary_description <t> text <c> department_id <t> number <i> What is the description for the section named h? <s> SELECT section_description FROM Sections WHERE section_name  =  'h' </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> Find the first name of the students who permanently live in the country Haiti or have the cell phone number 09700166582 . <s> select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582' </s>
--SEPARATOR--
Semesters <c> semester_id <t> number <c> semester_description <t> text <c> semester_name <t> text <c> other_details <t> text </t> Student_Enrolment_Courses <c> course_id <t> number <c> student_course_id <t> number <c> student_enrolment_id <t> number </t> Sections <c> section_name <t> text <c> other_details <t> text <c> course_id <t> number <c> section_description <t> text <c> section_id <t> number </t> Student_Enrolment <c> semester_id <t> number <c> student_id <t> number <c> degree_program_id <t> number <c> other_details <t> text <c> student_enrolment_id <t> number </t> Addresses <c> city <t> text <c> line_1 <t> text <c> line_3 <t> text <c> other_address_details <t> text <c> line_2 <t> text <c> zip_postcode <t> text <c> address_id <t> number <c> country <t> text <c> state_province_county <t> text </t> Degree_Programs <c> department_id <t> number <c> degree_program_id <t> number <c> degree_summary_name <t> text <c> other_details <t> text <c> degree_summary_description <t> text </t> Courses <c> other_details <t> text <c> course_description <t> text <c> course_id <t> number <c> course_name <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number </t> Students <c> ssn <t> text <c> date_left <t> time <c> last_name <t> text <c> date_first_registered <t> time <c> other_student_details <t> text <c> permanent_address_id <t> number <c> student_id <t> number <c> middle_name <t> text <c> first_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> current_address_id <t> number </t> Departments <c> department_id <t> number <c> department_description <t> text <c> department_name <t> text <c> other_details <t> text </t> Transcripts <c> other_details <t> text <c> transcript_date <t> time <c> transcript_id <t> number <i> Find the first name of the students who permanently live in the country Haiti or have the cell phone number 09700166582 . <s> select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582' </s>
--SEPARATOR--
Addresses <c> address_id <t> number <c> line_1 <t> text <c> line_2 <t> text <c> line_3 <t> text <c> city <t> text <c> zip_postcode <t> text <c> state_province_county <t> text <c> country <t> text <c> other_address_details <t> text </t> Courses <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text <c> other_details <t> text </t> Departments <c> department_id <t> number <c> department_name <t> text <c> department_description <t> text <c> other_details <t> text </t> Degree_Programs <c> degree_program_id <t> number <c> department_id <t> number <c> degree_summary_name <t> text <c> degree_summary_description <t> text <c> other_details <t> text </t> Sections <c> section_id <t> number <c> course_id <t> number <c> section_name <t> text <c> section_description <t> text <c> other_details <t> text </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Students <c> student_id <t> number <c> current_address_id <t> number <c> permanent_address_id <t> number <c> first_name <t> text <c> middle_name <t> text <c> last_name <t> text <c> cell_mobile_number <t> text <c> email_address <t> text <c> ssn <t> text <c> date_first_registered <t> time <c> date_left <t> time <c> other_student_details <t> text </t> Student_Enrolment <c> student_enrolment_id <t> number <c> degree_program_id <t> number <c> semester_id <t> number <c> student_id <t> number <c> other_details <t> text </t> Student_Enrolment_Courses <c> student_course_id <t> number <c> course_id <t> number <c> student_enrolment_id <t> number </t> Transcripts <c> transcript_id <t> number <c> transcript_date <t> time <c> other_details <t> text </t> Transcript_Contents <c> student_course_id <t> number <c> transcript_id <t> number <i> What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582 ? <s> select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582' </s>
--SEPARATOR--
Transcripts <c> transcript_date <t> time <c> transcript_id <t> number <c> other_details <t> text </t> Departments <c> department_description <t> text <c> other_details <t> text <c> department_name <t> text <c> department_id <t> number </t> Courses <c> other_details <t> text <c> course_id <t> number <c> course_name <t> text <c> course_description <t> text </t> Student_Enrolment <c> student_id <t> number <c> semester_id <t> number <c> other_details <t> text <c> student_enrolment_id <t> number <c> degree_program_id <t> number </t> Transcript_Contents <c> transcript_id <t> number <c> student_course_id <t> number </t> Student_Enrolment_Courses <c> course_id <t> number <c> student_course_id <t> number <c> student_enrolment_id <t> number </t> Students <c> middle_name <t> text <c> last_name <t> text <c> email_address <t> text <c> other_student_details <t> text <c> date_first_registered <t> time <c> cell_mobile_number <t> text <c> student_id <t> number <c> first_name <t> text <c> ssn <t> text <c> date_left <t> time <c> permanent_address_id <t> number <c> current_address_id <t> number </t> Semesters <c> semester_id <t> number <c> semester_name <t> text <c> semester_description <t> text <c> other_details <t> text </t> Addresses <c> line_2 <t> text <c> line_1 <t> text <c> country <t> text <c> city <t> text <c> address_id <t> number <c> zip_postcode <t> text <c> other_address_details <t> text <c> line_3 <t> text <c> state_province_county <t> text </t> Sections <c> section_name <t> text <c> section_id <t> number <c> section_description <t> text <c> course_id <t> number <c> other_details <t> text </t> Degree_Programs <c> degree_summary_name <t> text <c> other_details <t> text <c> department_id <t> number <c> degree_program_id <t> number <c> degree_summary_description <t> text <i> What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582 ? <s> select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582' </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> List the title of all cartoons in alphabetical order. <s> SELECT Title FROM Cartoon ORDER BY title </s>
--SEPARATOR--
TV_Channel <c> Pixel_aspect_ratio_PAR <t> text <c> Pay_per_view_PPV <t> text <c> Language <t> text <c> series_name <t> text <c> Country <t> text <c> Content <t> text <c> id <t> text <c> Hight_definition_TV <t> text <c> Package_Option <t> text </t> Cartoon <c> Written_by <t> text <c> Directed_by <t> text <c> Original_air_date <t> text <c> id <t> number <c> Channel <t> text <c> Title <t> text <c> Production_code <t> number </t> TV_series <c> Rating <t> text <c> Episode <t> text <c> Air_Date <t> text <c> Channel <t> text <c> Viewers_m <t> text <c> Share <t> number <c> Weekly_Rank <t> number <c> id <t> number <c> 18_49_Rating_Share <t> text <i> List the title of all cartoons in alphabetical order. <s> SELECT Title FROM Cartoon ORDER BY title </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> What are the titles of the cartoons sorted alphabetically? <s> SELECT Title FROM Cartoon ORDER BY title </s>
--SEPARATOR--
TV_series <c> Air_Date <t> text <c> 18_49_Rating_Share <t> text <c> Share <t> number <c> Rating <t> text <c> Episode <t> text <c> Viewers_m <t> text <c> id <t> number <c> Channel <t> text <c> Weekly_Rank <t> number </t> TV_Channel <c> Pixel_aspect_ratio_PAR <t> text <c> Language <t> text <c> Hight_definition_TV <t> text <c> Content <t> text <c> Country <t> text <c> Package_Option <t> text <c> id <t> text <c> series_name <t> text <c> Pay_per_view_PPV <t> text </t> Cartoon <c> Written_by <t> text <c> Directed_by <t> text <c> Channel <t> text <c> Production_code <t> number <c> Original_air_date <t> text <c> Title <t> text <c> id <t> number <i> What are the titles of the cartoons sorted alphabetically? <s> SELECT Title FROM Cartoon ORDER BY title </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> List all cartoon directed by "Ben Jones". <s> SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones"; </s>
--SEPARATOR--
Cartoon <c> Written_by <t> text <c> Directed_by <t> text <c> id <t> number <c> Original_air_date <t> text <c> Channel <t> text <c> Title <t> text <c> Production_code <t> number </t> TV_Channel <c> Pixel_aspect_ratio_PAR <t> text <c> Country <t> text <c> Pay_per_view_PPV <t> text <c> Content <t> text <c> Language <t> text <c> id <t> text <c> Hight_definition_TV <t> text <c> series_name <t> text <c> Package_Option <t> text </t> TV_series <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> Weekly_Rank <t> number <c> id <t> number <c> Channel <t> text <c> Episode <t> text <c> Viewers_m <t> text <c> 18_49_Rating_Share <t> text <i> List all cartoon directed by "Ben Jones". <s> SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones"; </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> What are the names of all cartoons directed by Ben Jones? <s> SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones"; </s>
--SEPARATOR--
TV_Channel <c> Pay_per_view_PPV <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Package_Option <t> text <c> Hight_definition_TV <t> text <c> id <t> text <c> Country <t> text <c> Language <t> text <c> series_name <t> text </t> TV_series <c> Share <t> number <c> Air_Date <t> text <c> Viewers_m <t> text <c> Channel <t> text <c> 18_49_Rating_Share <t> text <c> Rating <t> text <c> Weekly_Rank <t> number <c> Episode <t> text <c> id <t> number </t> Cartoon <c> Title <t> text <c> Original_air_date <t> text <c> Directed_by <t> text <c> Channel <t> text <c> Written_by <t> text <c> id <t> number <c> Production_code <t> number <i> What are the names of all cartoons directed by Ben Jones? <s> SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones"; </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> How many cartoons were written by "Joseph Kuhr"? <s> SELECT count(*) FROM Cartoon WHERE Written_by = "Joseph Kuhr"; </s>
--SEPARATOR--
Cartoon <c> Original_air_date <t> text <c> Directed_by <t> text <c> id <t> number <c> Production_code <t> number <c> Channel <t> text <c> Written_by <t> text <c> Title <t> text </t> TV_Channel <c> Package_Option <t> text <c> series_name <t> text <c> Language <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Content <t> text <c> Country <t> text <c> Pay_per_view_PPV <t> text <c> Hight_definition_TV <t> text <c> id <t> text </t> TV_series <c> Share <t> number <c> Air_Date <t> text <c> id <t> number <c> Rating <t> text <c> Channel <t> text <c> Weekly_Rank <t> number <c> Episode <t> text <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <i> How many cartoons were written by "Joseph Kuhr"? <s> SELECT count(*) FROM Cartoon WHERE Written_by = "Joseph Kuhr"; </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> What is the number of cartoones written by Joseph Kuhr? <s> SELECT count(*) FROM Cartoon WHERE Written_by = "Joseph Kuhr"; </s>
--SEPARATOR--
TV_Channel <c> Pay_per_view_PPV <t> text <c> id <t> text <c> Country <t> text <c> Language <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Package_Option <t> text <c> Content <t> text <c> series_name <t> text </t> Cartoon <c> Directed_by <t> text <c> Production_code <t> number <c> id <t> number <c> Written_by <t> text <c> Channel <t> text <c> Title <t> text <c> Original_air_date <t> text </t> TV_series <c> id <t> number <c> Viewers_m <t> text <c> Air_Date <t> text <c> Episode <t> text <c> Rating <t> text <c> Weekly_Rank <t> number <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Channel <t> text <i> What is the number of cartoones written by Joseph Kuhr? <s> SELECT count(*) FROM Cartoon WHERE Written_by = "Joseph Kuhr"; </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> list all cartoon titles and their directors ordered by their air date <s> SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date </s>
--SEPARATOR--
TV_Channel <c> series_name <t> text <c> Country <t> text <c> id <t> text <c> Hight_definition_TV <t> text <c> Content <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Language <t> text </t> Cartoon <c> Production_code <t> number <c> Title <t> text <c> Channel <t> text <c> Written_by <t> text <c> Directed_by <t> text <c> Original_air_date <t> text <c> id <t> number </t> TV_series <c> id <t> number <c> Viewers_m <t> text <c> Air_Date <t> text <c> Weekly_Rank <t> number <c> Channel <t> text <c> Rating <t> text <c> Share <t> number <c> Episode <t> text <c> 18_49_Rating_Share <t> text <i> list all cartoon titles and their directors ordered by their air date <s> SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> What is the name and directors of all the cartoons that are ordered by air date? <s> SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date </s>
--SEPARATOR--
Cartoon <c> id <t> number <c> Title <t> text <c> Written_by <t> text <c> Production_code <t> number <c> Directed_by <t> text <c> Channel <t> text <c> Original_air_date <t> text </t> TV_Channel <c> series_name <t> text <c> Content <t> text <c> Package_Option <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Language <t> text <c> Pay_per_view_PPV <t> text <c> Country <t> text <c> Hight_definition_TV <t> text <c> id <t> text </t> TV_series <c> 18_49_Rating_Share <t> text <c> Weekly_Rank <t> number <c> id <t> number <c> Share <t> number <c> Air_Date <t> text <c> Channel <t> text <c> Rating <t> text <c> Episode <t> text <c> Viewers_m <t> text <i> What is the name and directors of all the cartoons that are ordered by air date? <s> SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> List the title of all cartoon directed by "Ben Jones" or "Brandon Vietti". <s> SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones" OR Directed_by = "Brandon Vietti"; </s>
--SEPARATOR--
TV_series <c> Rating <t> text <c> Weekly_Rank <t> number <c> Channel <t> text <c> Viewers_m <t> text <c> Episode <t> text <c> id <t> number <c> 18_49_Rating_Share <t> text <c> Share <t> number <c> Air_Date <t> text </t> TV_Channel <c> series_name <t> text <c> Language <t> text <c> Content <t> text <c> Pay_per_view_PPV <t> text <c> Country <t> text <c> Hight_definition_TV <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Package_Option <t> text <c> id <t> text </t> Cartoon <c> Title <t> text <c> Production_code <t> number <c> Original_air_date <t> text <c> Written_by <t> text <c> Channel <t> text <c> id <t> number <c> Directed_by <t> text <i> List the title of all cartoon directed by "Ben Jones" or "Brandon Vietti". <s> SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones" OR Directed_by = "Brandon Vietti"; </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> What are the titles of all cartoons directed by Ben Jones or Brandon Vietti? <s> SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones" OR Directed_by = "Brandon Vietti"; </s>
--SEPARATOR--
TV_series <c> Weekly_Rank <t> number <c> Channel <t> text <c> Episode <t> text <c> Air_Date <t> text <c> Viewers_m <t> text <c> 18_49_Rating_Share <t> text <c> id <t> number <c> Share <t> number <c> Rating <t> text </t> TV_Channel <c> Hight_definition_TV <t> text <c> Language <t> text <c> Package_Option <t> text <c> Pay_per_view_PPV <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> id <t> text <c> Country <t> text <c> series_name <t> text </t> Cartoon <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Title <t> text <c> id <t> number <c> Channel <t> text <c> Production_code <t> number <i> What are the titles of all cartoons directed by Ben Jones or Brandon Vietti? <s> SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones" OR Directed_by = "Brandon Vietti"; </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> Which country has the most of TV Channels? List the country and number of TV Channels it has. <s> SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1; </s>
--SEPARATOR--
Cartoon <c> id <t> number <c> Original_air_date <t> text <c> Title <t> text <c> Channel <t> text <c> Written_by <t> text <c> Directed_by <t> text <c> Production_code <t> number </t> TV_series <c> Viewers_m <t> text <c> Share <t> number <c> Channel <t> text <c> 18_49_Rating_Share <t> text <c> Air_Date <t> text <c> id <t> number <c> Weekly_Rank <t> number <c> Episode <t> text <c> Rating <t> text </t> TV_Channel <c> Package_Option <t> text <c> Language <t> text <c> Country <t> text <c> series_name <t> text <c> Hight_definition_TV <t> text <c> id <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Pay_per_view_PPV <t> text <c> Content <t> text <i> Which country has the most of TV Channels? List the country and number of TV Channels it has. <s> SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1; </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> What is the country with the most number of TV Channels and how many does it have? <s> SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1; </s>
--SEPARATOR--
Cartoon <c> id <t> number <c> Directed_by <t> text <c> Written_by <t> text <c> Production_code <t> number <c> Channel <t> text <c> Title <t> text <c> Original_air_date <t> text </t> TV_series <c> 18_49_Rating_Share <t> text <c> Rating <t> text <c> Episode <t> text <c> Channel <t> text <c> id <t> number <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Share <t> number <c> Air_Date <t> text </t> TV_Channel <c> id <t> text <c> series_name <t> text <c> Hight_definition_TV <t> text <c> Content <t> text <c> Package_Option <t> text <c> Pay_per_view_PPV <t> text <c> Language <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Country <t> text <i> What is the country with the most number of TV Channels and how many does it have? <s> SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1; </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> List the number of different series names and contents in the TV Channel table. <s> SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel; </s>
--SEPARATOR--
Cartoon <c> Written_by <t> text <c> id <t> number <c> Directed_by <t> text <c> Channel <t> text <c> Production_code <t> number <c> Original_air_date <t> text <c> Title <t> text </t> TV_series <c> Viewers_m <t> text <c> Episode <t> text <c> id <t> number <c> Channel <t> text <c> 18_49_Rating_Share <t> text <c> Share <t> number <c> Air_Date <t> text <c> Weekly_Rank <t> number <c> Rating <t> text </t> TV_Channel <c> Pay_per_view_PPV <t> text <c> Content <t> text <c> Package_Option <t> text <c> id <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Country <t> text <c> Hight_definition_TV <t> text <c> series_name <t> text <c> Language <t> text <i> List the number of different series names and contents in the TV Channel table. <s> SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel; </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> How many different series and contents are listed in the TV Channel table? <s> SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel; </s>
--SEPARATOR--
TV_series <c> Weekly_Rank <t> number <c> Air_Date <t> text <c> id <t> number <c> Rating <t> text <c> Share <t> number <c> Channel <t> text <c> Episode <t> text <c> Viewers_m <t> text <c> 18_49_Rating_Share <t> text </t> TV_Channel <c> Hight_definition_TV <t> text <c> series_name <t> text <c> id <t> text <c> Pay_per_view_PPV <t> text <c> Country <t> text <c> Content <t> text <c> Language <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Package_Option <t> text </t> Cartoon <c> Written_by <t> text <c> Production_code <t> number <c> Directed_by <t> text <c> id <t> number <c> Channel <t> text <c> Title <t> text <c> Original_air_date <t> text <i> How many different series and contents are listed in the TV Channel table? <s> SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel; </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> What is the content of TV Channel with serial name "Sky Radio"? <s> SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio"; </s>
--SEPARATOR--
TV_Channel <c> Content <t> text <c> Language <t> text <c> id <t> text <c> Package_Option <t> text <c> Country <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> series_name <t> text </t> TV_series <c> 18_49_Rating_Share <t> text <c> Channel <t> text <c> Air_Date <t> text <c> id <t> number <c> Rating <t> text <c> Episode <t> text <c> Weekly_Rank <t> number <c> Share <t> number <c> Viewers_m <t> text </t> Cartoon <c> Written_by <t> text <c> id <t> number <c> Production_code <t> number <c> Original_air_date <t> text <c> Directed_by <t> text <c> Title <t> text <c> Channel <t> text <i> What is the content of TV Channel with serial name "Sky Radio"? <s> SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio"; </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> What is the content of the series Sky Radio? <s> SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio"; </s>
--SEPARATOR--
Cartoon <c> Directed_by <t> text <c> id <t> number <c> Written_by <t> text <c> Title <t> text <c> Original_air_date <t> text <c> Channel <t> text <c> Production_code <t> number </t> TV_series <c> Air_Date <t> text <c> Episode <t> text <c> id <t> number <c> Rating <t> text <c> Weekly_Rank <t> number <c> Share <t> number <c> Viewers_m <t> text <c> Channel <t> text <c> 18_49_Rating_Share <t> text </t> TV_Channel <c> series_name <t> text <c> Content <t> text <c> Country <t> text <c> Pay_per_view_PPV <t> text <c> Language <t> text <c> Package_Option <t> text <c> id <t> text <c> Hight_definition_TV <t> text <c> Pixel_aspect_ratio_PAR <t> text <i> What is the content of the series Sky Radio? <s> SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio"; </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> What is the Package Option of TV Channel with serial name "Sky Radio"? <s> SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio"; </s>
--SEPARATOR--
TV_series <c> Share <t> number <c> Air_Date <t> text <c> Rating <t> text <c> id <t> number <c> Weekly_Rank <t> number <c> 18_49_Rating_Share <t> text <c> Channel <t> text <c> Episode <t> text <c> Viewers_m <t> text </t> TV_Channel <c> series_name <t> text <c> Country <t> text <c> Package_Option <t> text <c> id <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Content <t> text <c> Hight_definition_TV <t> text <c> Language <t> text <c> Pay_per_view_PPV <t> text </t> Cartoon <c> id <t> number <c> Channel <t> text <c> Title <t> text <c> Written_by <t> text <c> Directed_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <i> What is the Package Option of TV Channel with serial name "Sky Radio"? <s> SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio"; </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> What are the Package Options of the TV Channels whose series names are Sky Radio? <s> SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio"; </s>
--SEPARATOR--
Cartoon <c> Original_air_date <t> text <c> Title <t> text <c> Production_code <t> number <c> Channel <t> text <c> id <t> number <c> Directed_by <t> text <c> Written_by <t> text </t> TV_Channel <c> id <t> text <c> Hight_definition_TV <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Pay_per_view_PPV <t> text <c> Content <t> text <c> Language <t> text <c> Package_Option <t> text <c> Country <t> text <c> series_name <t> text </t> TV_series <c> Viewers_m <t> text <c> Episode <t> text <c> Channel <t> text <c> Weekly_Rank <t> number <c> Rating <t> text <c> Share <t> number <c> Air_Date <t> text <c> id <t> number <c> 18_49_Rating_Share <t> text <i> What are the Package Options of the TV Channels whose series names are Sky Radio? <s> SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio"; </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> How many TV Channel using language English? <s> SELECT count(*) FROM TV_Channel WHERE LANGUAGE = "English"; </s>
--SEPARATOR--
TV_series <c> id <t> number <c> Viewers_m <t> text <c> 18_49_Rating_Share <t> text <c> Share <t> number <c> Air_Date <t> text <c> Channel <t> text <c> Weekly_Rank <t> number <c> Rating <t> text <c> Episode <t> text </t> Cartoon <c> Directed_by <t> text <c> Original_air_date <t> text <c> Channel <t> text <c> Production_code <t> number <c> Title <t> text <c> id <t> number <c> Written_by <t> text </t> TV_Channel <c> series_name <t> text <c> id <t> text <c> Package_Option <t> text <c> Hight_definition_TV <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Content <t> text <c> Country <t> text <c> Language <t> text <c> Pay_per_view_PPV <t> text <i> How many TV Channel using language English? <s> SELECT count(*) FROM TV_Channel WHERE LANGUAGE = "English"; </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> How many TV Channels use the English language? <s> SELECT count(*) FROM TV_Channel WHERE LANGUAGE = "English"; </s>
--SEPARATOR--
TV_series <c> Rating <t> text <c> Viewers_m <t> text <c> Air_Date <t> text <c> Channel <t> text <c> Share <t> number <c> Weekly_Rank <t> number <c> id <t> number <c> Episode <t> text <c> 18_49_Rating_Share <t> text </t> TV_Channel <c> Hight_definition_TV <t> text <c> Country <t> text <c> Content <t> text <c> Package_Option <t> text <c> Pay_per_view_PPV <t> text <c> Language <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> series_name <t> text <c> id <t> text </t> Cartoon <c> Channel <t> text <c> Written_by <t> text <c> Production_code <t> number <c> id <t> number <c> Title <t> text <c> Original_air_date <t> text <c> Directed_by <t> text <i> How many TV Channels use the English language? <s> SELECT count(*) FROM TV_Channel WHERE LANGUAGE = "English"; </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> List the language used least number of TV Channel. List language and number of TV Channel. <s> SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1; </s>
--SEPARATOR--
TV_series <c> Viewers_m <t> text <c> 18_49_Rating_Share <t> text <c> Channel <t> text <c> Air_Date <t> text <c> Share <t> number <c> id <t> number <c> Weekly_Rank <t> number <c> Episode <t> text <c> Rating <t> text </t> Cartoon <c> Production_code <t> number <c> id <t> number <c> Original_air_date <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Channel <t> text <c> Title <t> text </t> TV_Channel <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pay_per_view_PPV <t> text <c> Hight_definition_TV <t> text <c> Package_Option <t> text <c> series_name <t> text <c> id <t> text <c> Pixel_aspect_ratio_PAR <t> text <i> List the language used least number of TV Channel. List language and number of TV Channel. <s> SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1; </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> What are the languages used by the least number of TV Channels and how many channels use it? <s> SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1; </s>
--SEPARATOR--
Cartoon <c> Title <t> text <c> Channel <t> text <c> Production_code <t> number <c> Original_air_date <t> text <c> id <t> number <c> Written_by <t> text <c> Directed_by <t> text </t> TV_Channel <c> Hight_definition_TV <t> text <c> Country <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Package_Option <t> text <c> series_name <t> text <c> Language <t> text <c> id <t> text <c> Pay_per_view_PPV <t> text <c> Content <t> text </t> TV_series <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Episode <t> text <c> Channel <t> text <c> id <t> number <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Air_Date <t> text <c> Rating <t> text <i> What are the languages used by the least number of TV Channels and how many channels use it? <s> SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1; </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> List each language and the number of TV Channels using it. <s> SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE </s>
--SEPARATOR--
TV_Channel <c> Pixel_aspect_ratio_PAR <t> text <c> Language <t> text <c> Hight_definition_TV <t> text <c> Package_Option <t> text <c> Content <t> text <c> series_name <t> text <c> Pay_per_view_PPV <t> text <c> id <t> text <c> Country <t> text </t> Cartoon <c> id <t> number <c> Written_by <t> text <c> Title <t> text <c> Channel <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Directed_by <t> text </t> TV_series <c> Air_Date <t> text <c> 18_49_Rating_Share <t> text <c> id <t> number <c> Weekly_Rank <t> number <c> Episode <t> text <c> Share <t> number <c> Viewers_m <t> text <c> Channel <t> text <c> Rating <t> text <i> List each language and the number of TV Channels using it. <s> SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> For each language, list the number of TV Channels that use it. <s> SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE </s>
--SEPARATOR--
TV_series <c> Episode <t> text <c> Share <t> number <c> Air_Date <t> text <c> Rating <t> text <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> id <t> number <c> Channel <t> text </t> TV_Channel <c> Country <t> text <c> id <t> text <c> Language <t> text <c> series_name <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Content <t> text <c> Hight_definition_TV <t> text </t> Cartoon <c> Directed_by <t> text <c> id <t> number <c> Channel <t> text <c> Original_air_date <t> text <c> Title <t> text <c> Production_code <t> number <c> Written_by <t> text <i> For each language, list the number of TV Channels that use it. <s> SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> What is the TV Channel that shows the cartoon "The Rise of the Blue Beetle!"? List the TV Channel's series name. <s> SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = "The Rise of the Blue Beetle!"; </s>
--SEPARATOR--
TV_series <c> 18_49_Rating_Share <t> text <c> id <t> number <c> Weekly_Rank <t> number <c> Share <t> number <c> Channel <t> text <c> Episode <t> text <c> Rating <t> text <c> Viewers_m <t> text <c> Air_Date <t> text </t> Cartoon <c> Written_by <t> text <c> Production_code <t> number <c> Directed_by <t> text <c> Original_air_date <t> text <c> Title <t> text <c> Channel <t> text <c> id <t> number </t> TV_Channel <c> Package_Option <t> text <c> Pay_per_view_PPV <t> text <c> Content <t> text <c> Language <t> text <c> series_name <t> text <c> id <t> text <c> Country <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <i> What is the TV Channel that shows the cartoon "The Rise of the Blue Beetle!"? List the TV Channel's series name. <s> SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = "The Rise of the Blue Beetle!"; </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> What is the series name of the TV Channel that shows the cartoon "The Rise of the Blue Beetle"? <s> SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = "The Rise of the Blue Beetle!"; </s>
--SEPARATOR--
Cartoon <c> Directed_by <t> text <c> Written_by <t> text <c> Channel <t> text <c> id <t> number <c> Original_air_date <t> text <c> Production_code <t> number <c> Title <t> text </t> TV_series <c> id <t> number <c> Share <t> number <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text <c> 18_49_Rating_Share <t> text <c> Air_Date <t> text <c> Episode <t> text <c> Rating <t> text </t> TV_Channel <c> Hight_definition_TV <t> text <c> Package_Option <t> text <c> Pay_per_view_PPV <t> text <c> series_name <t> text <c> Content <t> text <c> Language <t> text <c> id <t> text <c> Country <t> text <c> Pixel_aspect_ratio_PAR <t> text <i> What is the series name of the TV Channel that shows the cartoon "The Rise of the Blue Beetle"? <s> SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = "The Rise of the Blue Beetle!"; </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> List the title of all  Cartoons showed on TV Channel with series name "Sky Radio". <s> SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio"; </s>
--SEPARATOR--
TV_series <c> Rating <t> text <c> Channel <t> text <c> id <t> number <c> Weekly_Rank <t> number <c> Episode <t> text <c> 18_49_Rating_Share <t> text <c> Share <t> number <c> Air_Date <t> text <c> Viewers_m <t> text </t> TV_Channel <c> Pixel_aspect_ratio_PAR <t> text <c> Pay_per_view_PPV <t> text <c> Country <t> text <c> Language <t> text <c> series_name <t> text <c> Package_Option <t> text <c> Content <t> text <c> id <t> text <c> Hight_definition_TV <t> text </t> Cartoon <c> Channel <t> text <c> Written_by <t> text <c> Title <t> text <c> id <t> number <c> Original_air_date <t> text <c> Directed_by <t> text <c> Production_code <t> number <i> List the title of all  Cartoons showed on TV Channel with series name "Sky Radio". <s> SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio"; </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> What is the title of all the cartools that are on the TV Channel with the series name "Sky Radio"? <s> SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio"; </s>
--SEPARATOR--
TV_Channel <c> series_name <t> text <c> Language <t> text <c> Country <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Content <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text <c> id <t> text </t> Cartoon <c> Channel <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> id <t> number <c> Written_by <t> text <c> Directed_by <t> text <c> Title <t> text </t> TV_series <c> id <t> number <c> 18_49_Rating_Share <t> text <c> Share <t> number <c> Episode <t> text <c> Weekly_Rank <t> number <c> Air_Date <t> text <c> Channel <t> text <c> Rating <t> text <c> Viewers_m <t> text <i> What is the title of all the cartools that are on the TV Channel with the series name "Sky Radio"? <s> SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio"; </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> List the Episode of all TV series sorted by rating. <s> SELECT Episode FROM TV_series ORDER BY rating </s>
--SEPARATOR--
Cartoon <c> Production_code <t> number <c> Title <t> text <c> Channel <t> text <c> Written_by <t> text <c> id <t> number <c> Original_air_date <t> text <c> Directed_by <t> text </t> TV_series <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> Episode <t> text <c> id <t> number <c> 18_49_Rating_Share <t> text </t> TV_Channel <c> id <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text <c> Hight_definition_TV <t> text <c> Country <t> text <c> series_name <t> text <c> Language <t> text <i> List the Episode of all TV series sorted by rating. <s> SELECT Episode FROM TV_series ORDER BY rating </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> What are all of the episodes ordered by ratings? <s> SELECT Episode FROM TV_series ORDER BY rating </s>
--SEPARATOR--
Cartoon <c> Directed_by <t> text <c> Channel <t> text <c> Original_air_date <t> text <c> id <t> number <c> Written_by <t> text <c> Production_code <t> number <c> Title <t> text </t> TV_series <c> Rating <t> text <c> Air_Date <t> text <c> Episode <t> text <c> Channel <t> text <c> id <t> number <c> 18_49_Rating_Share <t> text <c> Weekly_Rank <t> number <c> Share <t> number <c> Viewers_m <t> text </t> TV_Channel <c> Country <t> text <c> series_name <t> text <c> Content <t> text <c> id <t> text <c> Package_Option <t> text <c> Hight_definition_TV <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Pay_per_view_PPV <t> text <c> Language <t> text <i> What are all of the episodes ordered by ratings? <s> SELECT Episode FROM TV_series ORDER BY rating </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> List top 3 highest Rating  TV series. List the TV series's Episode and Rating. <s> SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3; </s>
--SEPARATOR--
TV_series <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Channel <t> text <c> id <t> number <c> Episode <t> text <c> Viewers_m <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Weekly_Rank <t> number </t> TV_Channel <c> Pixel_aspect_ratio_PAR <t> text <c> id <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text <c> Hight_definition_TV <t> text <c> series_name <t> text </t> Cartoon <c> Directed_by <t> text <c> Title <t> text <c> Written_by <t> text <c> Channel <t> text <c> id <t> number <c> Production_code <t> number <c> Original_air_date <t> text <i> List top 3 highest Rating  TV series. List the TV series's Episode and Rating. <s> SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3; </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> What are 3 most highly rated episodes in the TV series table and what were those ratings? <s> SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3; </s>
--SEPARATOR--
Cartoon <c> Production_code <t> number <c> Directed_by <t> text <c> Title <t> text <c> id <t> number <c> Written_by <t> text <c> Original_air_date <t> text <c> Channel <t> text </t> TV_series <c> Weekly_Rank <t> number <c> Episode <t> text <c> Channel <t> text <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Air_Date <t> text <c> id <t> number <c> Share <t> number <c> Rating <t> text </t> TV_Channel <c> Language <t> text <c> Country <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> id <t> text <c> Hight_definition_TV <t> text <c> series_name <t> text <c> Content <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text <i> What are 3 most highly rated episodes in the TV series table and what were those ratings? <s> SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3; </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> What is minimum and maximum share of TV series? <s> SELECT max(SHARE) , min(SHARE) FROM TV_series; </s>
--SEPARATOR--
Cartoon <c> id <t> number <c> Title <t> text <c> Original_air_date <t> text <c> Channel <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Production_code <t> number </t> TV_Channel <c> Country <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Content <t> text <c> Package_Option <t> text <c> id <t> text <c> series_name <t> text <c> Language <t> text <c> Pixel_aspect_ratio_PAR <t> text </t> TV_series <c> Viewers_m <t> text <c> Rating <t> text <c> 18_49_Rating_Share <t> text <c> id <t> number <c> Air_Date <t> text <c> Weekly_Rank <t> number <c> Share <t> number <c> Channel <t> text <c> Episode <t> text <i> What is minimum and maximum share of TV series? <s> SELECT max(SHARE) , min(SHARE) FROM TV_series; </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> What is the maximum and minimum share for the TV series? <s> SELECT max(SHARE) , min(SHARE) FROM TV_series; </s>
--SEPARATOR--
TV_series <c> Air_Date <t> text <c> Channel <t> text <c> Viewers_m <t> text <c> Rating <t> text <c> id <t> number <c> Weekly_Rank <t> number <c> Episode <t> text <c> 18_49_Rating_Share <t> text <c> Share <t> number </t> TV_Channel <c> Pixel_aspect_ratio_PAR <t> text <c> Pay_per_view_PPV <t> text <c> Country <t> text <c> series_name <t> text <c> Language <t> text <c> Content <t> text <c> Hight_definition_TV <t> text <c> id <t> text <c> Package_Option <t> text </t> Cartoon <c> id <t> number <c> Channel <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Directed_by <t> text <c> Written_by <t> text <c> Title <t> text <i> What is the maximum and minimum share for the TV series? <s> SELECT max(SHARE) , min(SHARE) FROM TV_series; </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> What is the air date of TV series with Episode "A Love of a Lifetime"? <s> SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime"; </s>
--SEPARATOR--
Cartoon <c> Title <t> text <c> Written_by <t> text <c> Production_code <t> number <c> Directed_by <t> text <c> Channel <t> text <c> Original_air_date <t> text <c> id <t> number </t> TV_Channel <c> series_name <t> text <c> Pay_per_view_PPV <t> text <c> Country <t> text <c> Content <t> text <c> Package_Option <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Language <t> text <c> Hight_definition_TV <t> text <c> id <t> text </t> TV_series <c> Rating <t> text <c> id <t> number <c> Air_Date <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Weekly_Rank <t> number <c> Channel <t> text <c> Viewers_m <t> text <c> Episode <t> text <i> What is the air date of TV series with Episode "A Love of a Lifetime"? <s> SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime"; </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> When did the episode "A Love of a Lifetime" air? <s> SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime"; </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> Country <t> text <c> Language <t> text <c> Pay_per_view_PPV <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Package_Option <t> text <c> series_name <t> text <c> Hight_definition_TV <t> text </t> Cartoon <c> id <t> number <c> Written_by <t> text <c> Channel <t> text <c> Directed_by <t> text <c> Production_code <t> number <c> Title <t> text <c> Original_air_date <t> text </t> TV_series <c> Share <t> number <c> Episode <t> text <c> 18_49_Rating_Share <t> text <c> Weekly_Rank <t> number <c> Air_Date <t> text <c> Channel <t> text <c> Viewers_m <t> text <c> Rating <t> text <c> id <t> number <i> When did the episode "A Love of a Lifetime" air? <s> SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime"; </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> What is Weekly Rank of TV series with Episode "A Love of a Lifetime"? <s> SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime"; </s>
--SEPARATOR--
Cartoon <c> Written_by <t> text <c> id <t> number <c> Original_air_date <t> text <c> Channel <t> text <c> Directed_by <t> text <c> Production_code <t> number <c> Title <t> text </t> TV_Channel <c> Pay_per_view_PPV <t> text <c> Hight_definition_TV <t> text <c> id <t> text <c> series_name <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Country <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Air_Date <t> text <c> Weekly_Rank <t> number <c> Channel <t> text <c> Rating <t> text <c> Viewers_m <t> text <c> 18_49_Rating_Share <t> text <c> Episode <t> text <c> Share <t> number <i> What is Weekly Rank of TV series with Episode "A Love of a Lifetime"? <s> SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime"; </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> What is the weekly rank for the episode "A Love of a Lifetime"? <s> SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime"; </s>
--SEPARATOR--
TV_series <c> Episode <t> text <c> Rating <t> text <c> Air_Date <t> text <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> id <t> number <c> Channel <t> text <c> Weekly_Rank <t> number <c> Share <t> number </t> TV_Channel <c> series_name <t> text <c> Pay_per_view_PPV <t> text <c> Language <t> text <c> Package_Option <t> text <c> Hight_definition_TV <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Country <t> text <c> Content <t> text <c> id <t> text </t> Cartoon <c> Written_by <t> text <c> Directed_by <t> text <c> Production_code <t> number <c> Title <t> text <c> Channel <t> text <c> Original_air_date <t> text <c> id <t> number <i> What is the weekly rank for the episode "A Love of a Lifetime"? <s> SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime"; </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> What is the TV Channel of TV series with Episode "A Love of a Lifetime"? List the TV Channel's series name. <s> SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = "A Love of a Lifetime"; </s>
--SEPARATOR--
TV_series <c> Viewers_m <t> text <c> Rating <t> text <c> Share <t> number <c> Episode <t> text <c> Air_Date <t> text <c> 18_49_Rating_Share <t> text <c> id <t> number <c> Channel <t> text <c> Weekly_Rank <t> number </t> Cartoon <c> Directed_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> id <t> number <c> Title <t> text <c> Channel <t> text <c> Written_by <t> text </t> TV_Channel <c> Package_Option <t> text <c> Country <t> text <c> Pay_per_view_PPV <t> text <c> Hight_definition_TV <t> text <c> series_name <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> id <t> text <c> Language <t> text <i> What is the TV Channel of TV series with Episode "A Love of a Lifetime"? List the TV Channel's series name. <s> SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = "A Love of a Lifetime"; </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> What is the name of the series that has the episode "A Love of a Lifetime"? <s> SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = "A Love of a Lifetime"; </s>
--SEPARATOR--
Cartoon <c> Channel <t> text <c> id <t> number <c> Production_code <t> number <c> Original_air_date <t> text <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text </t> TV_series <c> 18_49_Rating_Share <t> text <c> Weekly_Rank <t> number <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> Channel <t> text <c> Viewers_m <t> text <c> Episode <t> text <c> id <t> number </t> TV_Channel <c> Package_Option <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> series_name <t> text <c> id <t> text <c> Country <t> text <c> Hight_definition_TV <t> text <c> Language <t> text <c> Pay_per_view_PPV <t> text <c> Content <t> text <i> What is the name of the series that has the episode "A Love of a Lifetime"? <s> SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = "A Love of a Lifetime"; </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> List the Episode of all  TV series showed on TV Channel with series name "Sky Radio". <s> SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio"; </s>
--SEPARATOR--
Cartoon <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Channel <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> id <t> number </t> TV_Channel <c> Package_Option <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Country <t> text <c> Content <t> text <c> Language <t> text <c> series_name <t> text <c> id <t> text </t> TV_series <c> Air_Date <t> text <c> Weekly_Rank <t> number <c> 18_49_Rating_Share <t> text <c> id <t> number <c> Share <t> number <c> Channel <t> text <c> Episode <t> text <c> Rating <t> text <c> Viewers_m <t> text <i> List the Episode of all  TV series showed on TV Channel with series name "Sky Radio". <s> SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio"; </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> What is the episode for the TV series named "Sky Radio"? <s> SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio"; </s>
--SEPARATOR--
Cartoon <c> Title <t> text <c> Original_air_date <t> text <c> Written_by <t> text <c> Production_code <t> number <c> Channel <t> text <c> id <t> number <c> Directed_by <t> text </t> TV_series <c> 18_49_Rating_Share <t> text <c> Rating <t> text <c> Weekly_Rank <t> number <c> Episode <t> text <c> Viewers_m <t> text <c> Channel <t> text <c> id <t> number <c> Air_Date <t> text <c> Share <t> number </t> TV_Channel <c> Hight_definition_TV <t> text <c> Country <t> text <c> series_name <t> text <c> Pay_per_view_PPV <t> text <c> Language <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Package_Option <t> text <c> id <t> text <c> Content <t> text <i> What is the episode for the TV series named "Sky Radio"? <s> SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio"; </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> Find the number of cartoons directed by each of the listed directors. <s> SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by </s>
--SEPARATOR--
TV_Channel <c> Pay_per_view_PPV <t> text <c> Language <t> text <c> Hight_definition_TV <t> text <c> id <t> text <c> Package_Option <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Content <t> text <c> Country <t> text <c> series_name <t> text </t> TV_series <c> 18_49_Rating_Share <t> text <c> Air_Date <t> text <c> Share <t> number <c> id <t> number <c> Episode <t> text <c> Weekly_Rank <t> number <c> Rating <t> text <c> Channel <t> text <c> Viewers_m <t> text </t> Cartoon <c> Production_code <t> number <c> Original_air_date <t> text <c> Channel <t> text <c> Title <t> text <c> Written_by <t> text <c> id <t> number <c> Directed_by <t> text <i> Find the number of cartoons directed by each of the listed directors. <s> SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> How many cartoons did each director create? <s> SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Language <t> text <c> Package_Option <t> text <c> Country <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Pay_per_view_PPV <t> text <c> Content <t> text <c> Hight_definition_TV <t> text </t> Cartoon <c> Original_air_date <t> text <c> Channel <t> text <c> Directed_by <t> text <c> Production_code <t> number <c> Written_by <t> text <c> Title <t> text <c> id <t> number </t> TV_series <c> Air_Date <t> text <c> Share <t> number <c> id <t> number <c> Episode <t> text <c> Viewers_m <t> text <c> Rating <t> text <c> Channel <t> text <c> Weekly_Rank <t> number <c> 18_49_Rating_Share <t> text <i> How many cartoons did each director create? <s> SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> Find the production code and channel of the most recently aired cartoon . <s> select production_code ,  channel from cartoon order by original_air_date desc limit 1 </s>
--SEPARATOR--
TV_series <c> id <t> number <c> Air_Date <t> text <c> Rating <t> text <c> Episode <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Weekly_Rank <t> number <c> Channel <t> text <c> Viewers_m <t> text </t> Cartoon <c> Production_code <t> number <c> Channel <t> text <c> Directed_by <t> text <c> Title <t> text <c> Original_air_date <t> text <c> id <t> number <c> Written_by <t> text </t> TV_Channel <c> Country <t> text <c> Language <t> text <c> series_name <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Content <t> text <c> id <t> text <c> Hight_definition_TV <t> text <c> Package_Option <t> text <c> Pay_per_view_PPV <t> text <i> Find the production code and channel of the most recently aired cartoon . <s> select production_code ,  channel from cartoon order by original_air_date desc limit 1 </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> What is the produdction code and channel of the most recent cartoon ? <s> select production_code ,  channel from cartoon order by original_air_date desc limit 1 </s>
--SEPARATOR--
TV_series <c> Weekly_Rank <t> number <c> id <t> number <c> Viewers_m <t> text <c> Channel <t> text <c> 18_49_Rating_Share <t> text <c> Rating <t> text <c> Air_Date <t> text <c> Episode <t> text <c> Share <t> number </t> TV_Channel <c> Country <t> text <c> Content <t> text <c> id <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Pay_per_view_PPV <t> text <c> Hight_definition_TV <t> text <c> Language <t> text <c> series_name <t> text <c> Package_Option <t> text </t> Cartoon <c> Title <t> text <c> Channel <t> text <c> Production_code <t> number <c> Directed_by <t> text <c> Original_air_date <t> text <c> Written_by <t> text <c> id <t> number <i> What is the produdction code and channel of the most recent cartoon ? <s> select production_code ,  channel from cartoon order by original_air_date desc limit 1 </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> Find the package choice and series name of the TV channel that has high definition TV. <s> SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  "yes" </s>
--SEPARATOR--
Cartoon <c> Title <t> text <c> Production_code <t> number <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Channel <t> text <c> id <t> number </t> TV_Channel <c> id <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Pay_per_view_PPV <t> text <c> Hight_definition_TV <t> text <c> Country <t> text <c> series_name <t> text <c> Package_Option <t> text </t> TV_series <c> Rating <t> text <c> Channel <t> text <c> Air_Date <t> text <c> Viewers_m <t> text <c> 18_49_Rating_Share <t> text <c> Share <t> number <c> Episode <t> text <c> Weekly_Rank <t> number <c> id <t> number <i> Find the package choice and series name of the TV channel that has high definition TV. <s> SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  "yes" </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> What are the package options and the name of the series for the TV Channel that supports high definition TV? <s> SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  "yes" </s>
--SEPARATOR--
TV_series <c> Channel <t> text <c> Share <t> number <c> Weekly_Rank <t> number <c> Rating <t> text <c> id <t> number <c> Episode <t> text <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Air_Date <t> text </t> Cartoon <c> Channel <t> text <c> Written_by <t> text <c> Production_code <t> number <c> Title <t> text <c> Original_air_date <t> text <c> Directed_by <t> text <c> id <t> number </t> TV_Channel <c> Content <t> text <c> Language <t> text <c> Country <t> text <c> Pay_per_view_PPV <t> text <c> id <t> text <c> Package_Option <t> text <c> Hight_definition_TV <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> series_name <t> text <i> What are the package options and the name of the series for the TV Channel that supports high definition TV? <s> SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  "yes" </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> which countries' tv channels are playing some cartoon written by Todd Casey? <s> SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey' </s>
--SEPARATOR--
TV_series <c> Air_Date <t> text <c> Share <t> number <c> Episode <t> text <c> Weekly_Rank <t> number <c> Rating <t> text <c> Viewers_m <t> text <c> Channel <t> text <c> 18_49_Rating_Share <t> text <c> id <t> number </t> TV_Channel <c> Package_Option <t> text <c> id <t> text <c> Country <t> text <c> Pay_per_view_PPV <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> series_name <t> text </t> Cartoon <c> Directed_by <t> text <c> Channel <t> text <c> Production_code <t> number <c> Original_air_date <t> text <c> id <t> number <c> Title <t> text <c> Written_by <t> text <i> which countries' tv channels are playing some cartoon written by Todd Casey? <s> SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey' </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> What are the countries that have cartoons on TV that were written by Todd Casey? <s> SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey' </s>
--SEPARATOR--
TV_series <c> Episode <t> text <c> Channel <t> text <c> id <t> number <c> Viewers_m <t> text <c> 18_49_Rating_Share <t> text <c> Weekly_Rank <t> number <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number </t> TV_Channel <c> Content <t> text <c> Pay_per_view_PPV <t> text <c> Country <t> text <c> Package_Option <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> series_name <t> text <c> Language <t> text <c> id <t> text </t> Cartoon <c> Directed_by <t> text <c> Title <t> text <c> Written_by <t> text <c> Production_code <t> number <c> Original_air_date <t> text <c> Channel <t> text <c> id <t> number <i> What are the countries that have cartoons on TV that were written by Todd Casey? <s> SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey' </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> which countries' tv channels are not playing any cartoon written by Todd Casey? <s> SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey' </s>
--SEPARATOR--
Cartoon <c> Directed_by <t> text <c> Production_code <t> number <c> Title <t> text <c> Channel <t> text <c> Written_by <t> text <c> id <t> number <c> Original_air_date <t> text </t> TV_series <c> Rating <t> text <c> 18_49_Rating_Share <t> text <c> Weekly_Rank <t> number <c> Channel <t> text <c> Viewers_m <t> text <c> id <t> number <c> Share <t> number <c> Air_Date <t> text <c> Episode <t> text </t> TV_Channel <c> id <t> text <c> Language <t> text <c> series_name <t> text <c> Hight_definition_TV <t> text <c> Package_Option <t> text <c> Content <t> text <c> Pay_per_view_PPV <t> text <c> Country <t> text <c> Pixel_aspect_ratio_PAR <t> text <i> which countries' tv channels are not playing any cartoon written by Todd Casey? <s> SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey' </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> What are the countries that are not playing cartoons written by Todd Casey? <s> SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey' </s>
--SEPARATOR--
TV_series <c> Share <t> number <c> Weekly_Rank <t> number <c> id <t> number <c> Rating <t> text <c> Viewers_m <t> text <c> Channel <t> text <c> Air_Date <t> text <c> 18_49_Rating_Share <t> text <c> Episode <t> text </t> Cartoon <c> Original_air_date <t> text <c> Directed_by <t> text <c> Production_code <t> number <c> Written_by <t> text <c> Title <t> text <c> Channel <t> text <c> id <t> number </t> TV_Channel <c> series_name <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Content <t> text <c> Package_Option <t> text <c> Country <t> text <c> Pay_per_view_PPV <t> text <c> id <t> text <c> Language <t> text <i> What are the countries that are not playing cartoons written by Todd Casey? <s> SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey' </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> Find the series name and country of the tv channel that is playing some cartoons directed by Ben Jones and Michael Chang? <s> SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones' </s>
--SEPARATOR--
Cartoon <c> Original_air_date <t> text <c> Title <t> text <c> Written_by <t> text <c> Directed_by <t> text <c> Production_code <t> number <c> Channel <t> text <c> id <t> number </t> TV_Channel <c> Hight_definition_TV <t> text <c> Language <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Content <t> text <c> Pay_per_view_PPV <t> text <c> id <t> text <c> series_name <t> text <c> Package_Option <t> text <c> Country <t> text </t> TV_series <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Episode <t> text <c> Rating <t> text <c> Air_Date <t> text <c> Channel <t> text <c> Weekly_Rank <t> number <c> id <t> number <c> Viewers_m <t> text <i> Find the series name and country of the tv channel that is playing some cartoons directed by Ben Jones and Michael Chang? <s> SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones' </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones and cartoons directed by Michael Chang? <s> SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones' </s>
--SEPARATOR--
TV_Channel <c> Package_Option <t> text <c> Content <t> text <c> Pay_per_view_PPV <t> text <c> series_name <t> text <c> Country <t> text <c> Hight_definition_TV <t> text <c> Language <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> id <t> text </t> TV_series <c> Rating <t> text <c> Weekly_Rank <t> number <c> Share <t> number <c> Episode <t> text <c> Channel <t> text <c> Viewers_m <t> text <c> 18_49_Rating_Share <t> text <c> Air_Date <t> text <c> id <t> number </t> Cartoon <c> Channel <t> text <c> Written_by <t> text <c> id <t> number <c> Title <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Directed_by <t> text <i> What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones and cartoons directed by Michael Chang? <s> SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones' </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> find the pixel aspect ratio and nation of the tv channels that do not use English. <s> SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English' </s>
--SEPARATOR--
TV_Channel <c> Package_Option <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Country <t> text <c> Content <t> text <c> Hight_definition_TV <t> text <c> series_name <t> text <c> Language <t> text <c> Pay_per_view_PPV <t> text <c> id <t> text </t> TV_series <c> Weekly_Rank <t> number <c> Channel <t> text <c> Viewers_m <t> text <c> Episode <t> text <c> Rating <t> text <c> id <t> number <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Air_Date <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Original_air_date <t> text <c> Channel <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Production_code <t> number <i> find the pixel aspect ratio and nation of the tv channels that do not use English. <s> SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English' </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> What is the pixel aspect ratio and country of origin for all TV channels that do not use English? <s> SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English' </s>
--SEPARATOR--
Cartoon <c> Written_by <t> text <c> Directed_by <t> text <c> Title <t> text <c> id <t> number <c> Production_code <t> number <c> Original_air_date <t> text <c> Channel <t> text </t> TV_Channel <c> Country <t> text <c> id <t> text <c> Pay_per_view_PPV <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> series_name <t> text <c> Package_Option <t> text <c> Content <t> text <c> Hight_definition_TV <t> text <c> Language <t> text </t> TV_series <c> Share <t> number <c> Channel <t> text <c> Episode <t> text <c> 18_49_Rating_Share <t> text <c> id <t> number <c> Rating <t> text <c> Weekly_Rank <t> number <c> Air_Date <t> text <c> Viewers_m <t> text <i> What is the pixel aspect ratio and country of origin for all TV channels that do not use English? <s> SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English' </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> find id of the tv channels that from the countries where have more than two tv channels. <s> SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2 </s>
--SEPARATOR--
TV_series <c> Episode <t> text <c> Weekly_Rank <t> number <c> Viewers_m <t> text <c> Air_Date <t> text <c> Share <t> number <c> Rating <t> text <c> id <t> number <c> 18_49_Rating_Share <t> text <c> Channel <t> text </t> Cartoon <c> Original_air_date <t> text <c> Written_by <t> text <c> Channel <t> text <c> Directed_by <t> text <c> Production_code <t> number <c> id <t> number <c> Title <t> text </t> TV_Channel <c> Language <t> text <c> series_name <t> text <c> Hight_definition_TV <t> text <c> Package_Option <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Content <t> text <c> Country <t> text <c> Pay_per_view_PPV <t> text <c> id <t> text <i> find id of the tv channels that from the countries where have more than two tv channels. <s> SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2 </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> What are the ids of all tv channels that have more than 2 TV channels? <s> SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2 </s>
--SEPARATOR--
TV_Channel <c> Hight_definition_TV <t> text <c> Package_Option <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Country <t> text <c> Pay_per_view_PPV <t> text <c> series_name <t> text <c> id <t> text <c> Language <t> text </t> TV_series <c> Episode <t> text <c> Channel <t> text <c> Viewers_m <t> text <c> Rating <t> text <c> id <t> number <c> Share <t> number <c> Air_Date <t> text <c> Weekly_Rank <t> number <c> 18_49_Rating_Share <t> text </t> Cartoon <c> Directed_by <t> text <c> Channel <t> text <c> Written_by <t> text <c> id <t> number <c> Title <t> text <c> Original_air_date <t> text <c> Production_code <t> number <i> What are the ids of all tv channels that have more than 2 TV channels? <s> SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2 </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> find the id of tv channels that do not play any cartoon directed by Ben Jones. <s> SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones' </s>
--SEPARATOR--
Cartoon <c> id <t> number <c> Written_by <t> text <c> Production_code <t> number <c> Title <t> text <c> Original_air_date <t> text <c> Directed_by <t> text <c> Channel <t> text </t> TV_series <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> id <t> number <c> Air_Date <t> text <c> Channel <t> text <c> Weekly_Rank <t> number <c> Rating <t> text <c> Share <t> number <c> Episode <t> text </t> TV_Channel <c> Language <t> text <c> Package_Option <t> text <c> Hight_definition_TV <t> text <c> Country <t> text <c> id <t> text <c> Pay_per_view_PPV <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Content <t> text <c> series_name <t> text <i> find the id of tv channels that do not play any cartoon directed by Ben Jones. <s> SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones' </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> What are the ids of the TV channels that do not have any cartoons directed by Ben Jones? <s> SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones' </s>
--SEPARATOR--
Cartoon <c> Written_by <t> text <c> Production_code <t> number <c> Original_air_date <t> text <c> Title <t> text <c> id <t> number <c> Directed_by <t> text <c> Channel <t> text </t> TV_series <c> Share <t> number <c> Rating <t> text <c> 18_49_Rating_Share <t> text <c> Episode <t> text <c> Channel <t> text <c> Weekly_Rank <t> number <c> id <t> number <c> Viewers_m <t> text <c> Air_Date <t> text </t> TV_Channel <c> Package_Option <t> text <c> Language <t> text <c> series_name <t> text <c> Country <t> text <c> Content <t> text <c> id <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <i> What are the ids of the TV channels that do not have any cartoons directed by Ben Jones? <s> SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones' </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> find the package option of the tv channel that do not have any cartoon directed by Ben Jones. <s> SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones') </s>
--SEPARATOR--
Cartoon <c> Original_air_date <t> text <c> Directed_by <t> text <c> id <t> number <c> Production_code <t> number <c> Written_by <t> text <c> Title <t> text <c> Channel <t> text </t> TV_series <c> Channel <t> text <c> Air_Date <t> text <c> 18_49_Rating_Share <t> text <c> Episode <t> text <c> Weekly_Rank <t> number <c> id <t> number <c> Rating <t> text <c> Share <t> number <c> Viewers_m <t> text </t> TV_Channel <c> id <t> text <c> Content <t> text <c> Package_Option <t> text <c> series_name <t> text <c> Language <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Country <t> text <i> find the package option of the tv channel that do not have any cartoon directed by Ben Jones. <s> SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones') </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Country <t> text <c> Language <t> text <c> Content <t> text <c> Pixel_aspect_ratio_PAR <t> text <c> Hight_definition_TV <t> text <c> Pay_per_view_PPV <t> text <c> Package_Option <t> text </t> TV_series <c> id <t> number <c> Episode <t> text <c> Air_Date <t> text <c> Rating <t> text <c> Share <t> number <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> Channel <t> text </t> Cartoon <c> id <t> number <c> Title <t> text <c> Directed_by <t> text <c> Written_by <t> text <c> Original_air_date <t> text <c> Production_code <t> number <c> Channel <t> text <i> What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones? <s> SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones') </s>
--SEPARATOR--
TV_Channel <c> id <t> text <c> series_name <t> text <c> Pay_per_view_PPV <t> text <c> Country <t> text <c> Hight_definition_TV <t> text <c> Package_Option <t> text <c> Content <t> text <c> Language <t> text <c> Pixel_aspect_ratio_PAR <t> text </t> Cartoon <c> Written_by <t> text <c> Original_air_date <t> text <c> Directed_by <t> text <c> Channel <t> text <c> Title <t> text <c> id <t> number <c> Production_code <t> number </t> TV_series <c> 18_49_Rating_Share <t> text <c> Viewers_m <t> text <c> Weekly_Rank <t> number <c> id <t> number <c> Share <t> number <c> Rating <t> text <c> Episode <t> text <c> Channel <t> text <c> Air_Date <t> text <i> What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones? <s> SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones') </s>
--SEPARATOR--
poker_player <c> Poker_Player_ID <t> number <c> People_ID <t> number <c> Final_Table_Made <t> number <c> Best_Finish <t> number <c> Money_Rank <t> number <c> Earnings <t> number </t> people <c> People_ID <t> number <c> Nationality <t> text <c> Name <t> text <c> Birth_Date <t> text <c> Height <t> number <i> How many poker players are there? <s> SELECT count(*) FROM poker_player </s>
--SEPARATOR--
poker_player <c> Final_Table_Made <t> number <c> Earnings <t> number <c> Money_Rank <t> number <c> People_ID <t> number <c> Best_Finish <t> number <c> Poker_Player_ID <t> number </t> people <c> People_ID <t> number <c> Height <t> number <c> Birth_Date <t> text <c> Name <t> text <c> Nationality <t> text <i> How many poker players are there? <s> SELECT count(*) FROM poker_player </s>
--SEPARATOR--
poker_player <c> Poker_Player_ID <t> number <c> People_ID <t> number <c> Final_Table_Made <t> number <c> Best_Finish <t> number <c> Money_Rank <t> number <c> Earnings <t> number </t> people <c> People_ID <t> number <c> Nationality <t> text <c> Name <t> text <c> Birth_Date <t> text <c> Height <t> number <i> Count the number of poker players. <s> SELECT count(*) FROM poker_player </s>
--SEPARATOR--
people <c> Nationality <t> text <c> Name <t> text <c> Height <t> number <c> Birth_Date <t> text <c> People_ID <t> number </t> poker_player <c> Earnings <t> number <c> Money_Rank <t> number <c> Poker_Player_ID <t> number <c> People_ID <t> number <c> Final_Table_Made <t> number <c> Best_Finish <t> number <i> Count the number of poker players. <s> SELECT count(*) FROM poker_player </s>
--SEPARATOR--
poker_player <c> Poker_Player_ID <t> number <c> People_ID <t> number <c> Final_Table_Made <t> number <c> Best_Finish <t> number <c> Money_Rank <t> number <c> Earnings <t> number </t> people <c> People_ID <t> number <c> Nationality <t> text <c> Name <t> text <c> Birth_Date <t> text <c> Height <t> number <i> List the earnings of poker players in descending order. <s> SELECT Earnings FROM poker_player ORDER BY Earnings DESC </s>
--SEPARATOR--
people <c> People_ID <t> number <c> Name <t> text <c> Nationality <t> text <c> Birth_Date <t> text <c> Height <t> number </t> poker_player <c> People_ID <t> number <c> Poker_Player_ID <t> number <c> Best_Finish <t> number <c> Earnings <t> number <c> Money_Rank <t> number <c> Final_Table_Made <t> number <i> List the earnings of poker players in descending order. <s> SELECT Earnings FROM poker_player ORDER BY Earnings DESC </s>
--SEPARATOR--
poker_player <c> Poker_Player_ID <t> number <c> People_ID <t> number <c> Final_Table_Made <t> number <c> Best_Finish <t> number <c> Money_Rank <t> number <c> Earnings <t> number </t> people <c> People_ID <t> number <c> Nationality <t> text <c> Name <t> text <c> Birth_Date <t> text <c> Height <t> number <i> What are the earnings of poker players, ordered descending by value? <s> SELECT Earnings FROM poker_player ORDER BY Earnings DESC </s>
--SEPARATOR--
poker_player <c> Money_Rank <t> number <c> People_ID <t> number <c> Earnings <t> number <c> Poker_Player_ID <t> number <c> Final_Table_Made <t> number <c> Best_Finish <t> number </t> people <c> People_ID <t> number <c> Height <t> number <c> Name <t> text <c> Birth_Date <t> text <c> Nationality <t> text <i> What are the earnings of poker players, ordered descending by value? <s> SELECT Earnings FROM poker_player ORDER BY Earnings DESC </s>
--SEPARATOR--
poker_player <c> Poker_Player_ID <t> number <c> People_ID <t> number <c> Final_Table_Made <t> number <c> Best_Finish <t> number <c> Money_Rank <t> number <c> Earnings <t> number </t> people <c> People_ID <t> number <c> Nationality <t> text <c> Name <t> text <c> Birth_Date <t> text <c> Height <t> number <i> List the final tables made and the best finishes of poker players. <s> SELECT Final_Table_Made ,  Best_Finish FROM poker_player </s>
--SEPARATOR--
people <c> Birth_Date <t> text <c> Height <t> number <c> People_ID <t> number <c> Nationality <t> text <c> Name <t> text </t> poker_player <c> People_ID <t> number <c> Poker_Player_ID <t> number <c> Best_Finish <t> number <c> Final_Table_Made <t> number <c> Earnings <t> number <c> Money_Rank <t> number <i> List the final tables made and the best finishes of poker players. <s> SELECT Final_Table_Made ,  Best_Finish FROM poker_player </s>
--SEPARATOR--
poker_player <c> Poker_Player_ID <t> number <c> People_ID <t> number <c> Final_Table_Made <t> number <c> Best_Finish <t> number <c> Money_Rank <t> number <c> Earnings <t> number </t> people <c> People_ID <t> number <c> Nationality <t> text <c> Name <t> text <c> Birth_Date <t> text <c> Height <t> number <i> What are the final tables made and best finishes for all poker players? <s> SELECT Final_Table_Made ,  Best_Finish FROM poker_player </s>
--SEPARATOR--
poker_player <c> Best_Finish <t> number <c> Poker_Player_ID <t> number <c> Final_Table_Made <t> number <c> People_ID <t> number <c> Money_Rank <t> number <c> Earnings <t> number </t> people <c> People_ID <t> number <c> Birth_Date <t> text <c> Nationality <t> text <c> Height <t> number <c> Name <t> text <i> What are the final tables made and best finishes for all poker players? <s> SELECT Final_Table_Made ,  Best_Finish FROM poker_player </s>
--SEPARATOR--
poker_player <c> Poker_Player_ID <t> number <c> People_ID <t> number <c> Final_Table_Made <t> number <c> Best_Finish <t> number <c> Money_Rank <t> number <c> Earnings <t> number </t> people <c> People_ID <t> number <c> Nationality <t> text <c> Name <t> text <c> Birth_Date <t> text <c> Height <t> number <i> What is the average earnings of poker players? <s> SELECT avg(Earnings) FROM poker_player </s>
--SEPARATOR--
poker_player <c> People_ID <t> number <c> Final_Table_Made <t> number <c> Money_Rank <t> number <c> Earnings <t> number <c> Poker_Player_ID <t> number <c> Best_Finish <t> number </t> people <c> Height <t> number <c> People_ID <t> number <c> Birth_Date <t> text <c> Name <t> text <c> Nationality <t> text <i> What is the average earnings of poker players? <s> SELECT avg(Earnings) FROM poker_player </s>
--SEPARATOR--
poker_player <c> Poker_Player_ID <t> number <c> People_ID <t> number <c> Final_Table_Made <t> number <c> Best_Finish <t> number <c> Money_Rank <t> number <c> Earnings <t> number </t> people <c> People_ID <t> number <c> Nationality <t> text <c> Name <t> text <c> Birth_Date <t> text <c> Height <t> number <i> Return the average earnings across all poker players. <s> SELECT avg(Earnings) FROM poker_player </s>
--SEPARATOR--
people <c> Nationality <t> text <c> Name <t> text <c> Height <t> number <c> People_ID <t> number <c> Birth_Date <t> text </t> poker_player <c> Money_Rank <t> number <c> Earnings <t> number <c> Final_Table_Made <t> number <c> Poker_Player_ID <t> number <c> People_ID <t> number <c> Best_Finish <t> number <i> Return the average earnings across all poker players. <s> SELECT avg(Earnings) FROM poker_player </s>
--SEPARATOR--
poker_player <c> Poker_Player_ID <t> number <c> People_ID <t> number <c> Final_Table_Made <t> number <c> Best_Finish <t> number <c> Money_Rank <t> number <c> Earnings <t> number </t> people <c> People_ID <t> number <c> Nationality <t> text <c> Name <t> text <c> Birth_Date <t> text <c> Height <t> number <i> What is the money rank of the poker player with the highest earnings? <s> SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1 </s>
--SEPARATOR--
poker_player <c> Money_Rank <t> number <c> Best_Finish <t> number <c> People_ID <t> number <c> Poker_Player_ID <t> number <c> Earnings <t> number <c> Final_Table_Made <t> number </t> people <c> People_ID <t> number <c> Height <t> number <c> Nationality <t> text <c> Name <t> text <c> Birth_Date <t> text <i> What is the money rank of the poker player with the highest earnings? <s> SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1 </s>
--SEPARATOR--
poker_player <c> Poker_Player_ID <t> number <c> People_ID <t> number <c> Final_Table_Made <t> number <c> Best_Finish <t> number <c> Money_Rank <t> number <c> Earnings <t> number </t> people <c> People_ID <t> number <c> Nationality <t> text <c> Name <t> text <c> Birth_Date <t> text <c> Height <t> number <i> Return the money rank of the player with the greatest earnings. <s> SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1 </s>
--SEPARATOR--
people <c> Height <t> number <c> Name <t> text <c> Nationality <t> text <c> People_ID <t> number <c> Birth_Date <t> text </t> poker_player <c> Earnings <t> number <c> Money_Rank <t> number <c> Poker_Player_ID <t> number <c> Final_Table_Made <t> number <c> Best_Finish <t> number <c> People_ID <t> number <i> Return the money rank of the player with the greatest earnings. <s> SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1 </s>
--SEPARATOR--
poker_player <c> Poker_Player_ID <t> number <c> People_ID <t> number <c> Final_Table_Made <t> number <c> Best_Finish <t> number <c> Money_Rank <t> number <c> Earnings <t> number </t> people <c> People_ID <t> number <c> Nationality <t> text <c> Name <t> text <c> Birth_Date <t> text <c> Height <t> number <i> What is the maximum number of final tables made among poker players with earnings less than 200000? <s> SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000 </s>
--SEPARATOR--
poker_player <c> People_ID <t> number <c> Money_Rank <t> number <c> Final_Table_Made <t> number <c> Earnings <t> number <c> Best_Finish <t> number <c> Poker_Player_ID <t> number </t> people <c> Height <t> number <c> Name <t> text <c> Birth_Date <t> text <c> Nationality <t> text <c> People_ID <t> number <i> What is the maximum number of final tables made among poker players with earnings less than 200000? <s> SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000 </s>
--SEPARATOR--
poker_player <c> Poker_Player_ID <t> number <c> People_ID <t> number <c> Final_Table_Made <t> number <c> Best_Finish <t> number <c> Money_Rank <t> number <c> Earnings <t> number </t> people <c> People_ID <t> number <c> Nationality <t> text <c> Name <t> text <c> Birth_Date <t> text <c> Height <t> number <i> Return the maximum final tables made across all poker players who have earnings below 200000. <s> SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000 </s>
--SEPARATOR--
people <c> People_ID <t> number <c> Height <t> number <c> Nationality <t> text <c> Birth_Date <t> text <c> Name <t> text </t> poker_player <c> Final_Table_Made <t> number <c> Money_Rank <t> number <c> Poker_Player_ID <t> number <c> People_ID <t> number <c> Earnings <t> number <c> Best_Finish <t> number <i> Return the maximum final tables made across all poker players who have earnings below 200000. <s> SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000 </s>
--SEPARATOR--
poker_player <c> Poker_Player_ID <t> number <c> People_ID <t> number <c> Final_Table_Made <t> number <c> Best_Finish <t> number <c> Money_Rank <t> number <c> Earnings <t> number </t> people <c> People_ID <t> number <c> Nationality <t> text <c> Name <t> text <c> Birth_Date <t> text <c> Height <t> number <i> What are the names of poker players? <s> SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID </s>
--SEPARATOR--
poker_player <c> Best_Finish <t> number <c> Final_Table_Made <t> number <c> Money_Rank <t> number <c> Earnings <t> number <c> Poker_Player_ID <t> number <c> People_ID <t> number </t> people <c> Nationality <t> text <c> Birth_Date <t> text <c> People_ID <t> number <c> Height <t> number <c> Name <t> text <i> What are the names of poker players? <s> SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID </s>
--SEPARATOR--
poker_player <c> Poker_Player_ID <t> number <c> People_ID <t> number <c> Final_Table_Made <t> number <c> Best_Finish <t> number <c> Money_Rank <t> number <c> Earnings <t> number </t> people <c> People_ID <t> number <c> Nationality <t> text <c> Name <t> text <c> Birth_Date <t> text <c> Height <t> number <i> Return the names of all the poker players. <s> SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID </s>
--SEPARATOR--
poker_player <c> Poker_Player_ID <t> number <c> Final_Table_Made <t> number <c> People_ID <t> number <c> Best_Finish <t> number <c> Earnings <t> number <c> Money_Rank <t> number </t> people <c> People_ID <t> number <c> Height <t> number <c> Birth_Date <t> text <c> Nationality <t> text <c> Name <t> text <i> Return the names of all the poker players. <s> SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID </s>
--SEPARATOR--
poker_player <c> Poker_Player_ID <t> number <c> People_ID <t> number <c> Final_Table_Made <t> number <c> Best_Finish <t> number <c> Money_Rank <t> number <c> Earnings <t> number </t> people <c> People_ID <t> number <c> Nationality <t> text <c> Name <t> text <c> Birth_Date <t> text <c> Height <t> number <i> What are the names of poker players whose earnings is higher than 300000? <s> SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000 </s>
--SEPARATOR--
people <c> Birth_Date <t> text <c> Nationality <t> text <c> Name <t> text <c> Height <t> number <c> People_ID <t> number </t> poker_player <c> People_ID <t> number <c> Money_Rank <t> number <c> Best_Finish <t> number <c> Poker_Player_ID <t> number <c> Earnings <t> number <c> Final_Table_Made <t> number <i> What are the names of poker players whose earnings is higher than 300000? <s> SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000 </s>
--SEPARATOR--
poker_player <c> Poker_Player_ID <t> number <c> People_ID <t> number <c> Final_Table_Made <t> number <c> Best_Finish <t> number <c> Money_Rank <t> number <c> Earnings <t> number </t> people <c> People_ID <t> number <c> Nationality <t> text <c> Name <t> text <c> Birth_Date <t> text <c> Height <t> number <i> Give the names of poker players who have earnings above 300000. <s> SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000 </s>
--SEPARATOR--
poker_player <c> People_ID <t> number <c> Best_Finish <t> number <c> Poker_Player_ID <t> number <c> Earnings <t> number <c> Money_Rank <t> number <c> Final_Table_Made <t> number </t> people <c> People_ID <t> number <c> Height <t> number <c> Name <t> text <c> Nationality <t> text <c> Birth_Date <t> text <i> Give the names of poker players who have earnings above 300000. <s> SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000 </s>
--SEPARATOR--
poker_player <c> Poker_Player_ID <t> number <c> People_ID <t> number <c> Final_Table_Made <t> number <c> Best_Finish <t> number <c> Money_Rank <t> number <c> Earnings <t> number </t> people <c> People_ID <t> number <c> Nationality <t> text <c> Name <t> text <c> Birth_Date <t> text <c> Height <t> number <i> List the names of poker players ordered by the final tables made in ascending order. <s> SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made </s>
--SEPARATOR--
poker_player <c> Final_Table_Made <t> number <c> Earnings <t> number <c> Money_Rank <t> number <c> Best_Finish <t> number <c> People_ID <t> number <c> Poker_Player_ID <t> number </t> people <c> People_ID <t> number <c> Height <t> number <c> Nationality <t> text <c> Birth_Date <t> text <c> Name <t> text <i> List the names of poker players ordered by the final tables made in ascending order. <s> SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made </s>
--SEPARATOR--
poker_player <c> Poker_Player_ID <t> number <c> People_ID <t> number <c> Final_Table_Made <t> number <c> Best_Finish <t> number <c> Money_Rank <t> number <c> Earnings <t> number </t> people <c> People_ID <t> number <c> Nationality <t> text <c> Name <t> text <c> Birth_Date <t> text <c> Height <t> number <i> What are the names of poker players, ordered ascending by the number of final tables they have made? <s> SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made </s>
--SEPARATOR--
poker_player <c> People_ID <t> number <c> Earnings <t> number <c> Poker_Player_ID <t> number <c> Best_Finish <t> number <c> Money_Rank <t> number <c> Final_Table_Made <t> number </t> people <c> People_ID <t> number <c> Nationality <t> text <c> Height <t> number <c> Birth_Date <t> text <c> Name <t> text <i> What are the names of poker players, ordered ascending by the number of final tables they have made? <s> SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made </s>
--SEPARATOR--
poker_player <c> Poker_Player_ID <t> number <c> People_ID <t> number <c> Final_Table_Made <t> number <c> Best_Finish <t> number <c> Money_Rank <t> number <c> Earnings <t> number </t> people <c> People_ID <t> number <c> Nationality <t> text <c> Name <t> text <c> Birth_Date <t> text <c> Height <t> number <i> What is the birth date of the poker player with the lowest earnings? <s> SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1 </s>
--SEPARATOR--
poker_player <c> Poker_Player_ID <t> number <c> Money_Rank <t> number <c> Final_Table_Made <t> number <c> Earnings <t> number <c> People_ID <t> number <c> Best_Finish <t> number </t> people <c> People_ID <t> number <c> Birth_Date <t> text <c> Height <t> number <c> Name <t> text <c> Nationality <t> text <i> What is the birth date of the poker player with the lowest earnings? <s> SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1 </s>
--SEPARATOR--
poker_player <c> Poker_Player_ID <t> number <c> People_ID <t> number <c> Final_Table_Made <t> number <c> Best_Finish <t> number <c> Money_Rank <t> number <c> Earnings <t> number </t> people <c> People_ID <t> number <c> Nationality <t> text <c> Name <t> text <c> Birth_Date <t> text <c> Height <t> number <i> Return the birth date of the poker player with the lowest earnings. <s> SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1 </s>
--SEPARATOR--
people <c> Name <t> text <c> Birth_Date <t> text <c> People_ID <t> number <c> Nationality <t> text <c> Height <t> number </t> poker_player <c> Best_Finish <t> number <c> Money_Rank <t> number <c> Final_Table_Made <t> number <c> People_ID <t> number <c> Poker_Player_ID <t> number <c> Earnings <t> number <i> Return the birth date of the poker player with the lowest earnings. <s> SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1 </s>
--SEPARATOR--
poker_player <c> Poker_Player_ID <t> number <c> People_ID <t> number <c> Final_Table_Made <t> number <c> Best_Finish <t> number <c> Money_Rank <t> number <c> Earnings <t> number </t> people <c> People_ID <t> number <c> Nationality <t> text <c> Name <t> text <c> Birth_Date <t> text <c> Height <t> number <i> What is the money rank of the tallest poker player? <s> SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1 </s>
--SEPARATOR--
people <c> Name <t> text <c> Birth_Date <t> text <c> Height <t> number <c> People_ID <t> number <c> Nationality <t> text </t> poker_player <c> Money_Rank <t> number <c> Poker_Player_ID <t> number <c> Final_Table_Made <t> number <c> People_ID <t> number <c> Earnings <t> number <c> Best_Finish <t> number <i> What is the money rank of the tallest poker player? <s> SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1 </s>
--SEPARATOR--
poker_player <c> Poker_Player_ID <t> number <c> People_ID <t> number <c> Final_Table_Made <t> number <c> Best_Finish <t> number <c> Money_Rank <t> number <c> Earnings <t> number </t> people <c> People_ID <t> number <c> Nationality <t> text <c> Name <t> text <c> Birth_Date <t> text <c> Height <t> number <i> Return the money rank of the poker player with the greatest height. <s> SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1 </s>
--SEPARATOR--
people <c> People_ID <t> number <c> Nationality <t> text <c> Height <t> number <c> Birth_Date <t> text <c> Name <t> text </t> poker_player <c> Earnings <t> number <c> Poker_Player_ID <t> number <c> Final_Table_Made <t> number <c> People_ID <t> number <c> Money_Rank <t> number <c> Best_Finish <t> number <i> Return the money rank of the poker player with the greatest height. <s> SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1 </s>
--SEPARATOR--
poker_player <c> Poker_Player_ID <t> number <c> People_ID <t> number <c> Final_Table_Made <t> number <c> Best_Finish <t> number <c> Money_Rank <t> number <c> Earnings <t> number </t> people <c> People_ID <t> number <c> Nationality <t> text <c> Name <t> text <c> Birth_Date <t> text <c> Height <t> number <i> What is the average earnings of poker players with height higher than 200? <s> SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200 </s>
--SEPARATOR--
poker_player <c> Earnings <t> number <c> Poker_Player_ID <t> number <c> Final_Table_Made <t> number <c> Best_Finish <t> number <c> People_ID <t> number <c> Money_Rank <t> number </t> people <c> People_ID <t> number <c> Nationality <t> text <c> Height <t> number <c> Birth_Date <t> text <c> Name <t> text <i> What is the average earnings of poker players with height higher than 200? <s> SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200 </s>
--SEPARATOR--
poker_player <c> Poker_Player_ID <t> number <c> People_ID <t> number <c> Final_Table_Made <t> number <c> Best_Finish <t> number <c> Money_Rank <t> number <c> Earnings <t> number </t> people <c> People_ID <t> number <c> Nationality <t> text <c> Name <t> text <c> Birth_Date <t> text <c> Height <t> number <i> Give average earnings of poker players who are taller than 200. <s> SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200 </s>
--SEPARATOR--
poker_player <c> Final_Table_Made <t> number <c> Earnings <t> number <c> Money_Rank <t> number <c> Best_Finish <t> number <c> Poker_Player_ID <t> number <c> People_ID <t> number </t> people <c> People_ID <t> number <c> Nationality <t> text <c> Birth_Date <t> text <c> Height <t> number <c> Name <t> text <i> Give average earnings of poker players who are taller than 200. <s> SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200 </s>
--SEPARATOR--
poker_player <c> Poker_Player_ID <t> number <c> People_ID <t> number <c> Final_Table_Made <t> number <c> Best_Finish <t> number <c> Money_Rank <t> number <c> Earnings <t> number </t> people <c> People_ID <t> number <c> Nationality <t> text <c> Name <t> text <c> Birth_Date <t> text <c> Height <t> number <i> What are the names of poker players in descending order of earnings? <s> SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC </s>
--SEPARATOR--
people <c> Height <t> number <c> Nationality <t> text <c> Name <t> text <c> People_ID <t> number <c> Birth_Date <t> text </t> poker_player <c> People_ID <t> number <c> Earnings <t> number <c> Poker_Player_ID <t> number <c> Final_Table_Made <t> number <c> Best_Finish <t> number <c> Money_Rank <t> number <i> What are the names of poker players in descending order of earnings? <s> SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC </s>
--SEPARATOR--
poker_player <c> Poker_Player_ID <t> number <c> People_ID <t> number <c> Final_Table_Made <t> number <c> Best_Finish <t> number <c> Money_Rank <t> number <c> Earnings <t> number </t> people <c> People_ID <t> number <c> Nationality <t> text <c> Name <t> text <c> Birth_Date <t> text <c> Height <t> number <i> Return the names of poker players sorted by their earnings descending. <s> SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC </s>
--SEPARATOR--
poker_player <c> Final_Table_Made <t> number <c> Money_Rank <t> number <c> Earnings <t> number <c> Poker_Player_ID <t> number <c> People_ID <t> number <c> Best_Finish <t> number </t> people <c> Birth_Date <t> text <c> Nationality <t> text <c> People_ID <t> number <c> Name <t> text <c> Height <t> number <i> Return the names of poker players sorted by their earnings descending. <s> SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC </s>
--SEPARATOR--
poker_player <c> Poker_Player_ID <t> number <c> People_ID <t> number <c> Final_Table_Made <t> number <c> Best_Finish <t> number <c> Money_Rank <t> number <c> Earnings <t> number </t> people <c> People_ID <t> number <c> Nationality <t> text <c> Name <t> text <c> Birth_Date <t> text <c> Height <t> number <i> What are different nationalities of people and the corresponding number of people from each nation? <s> SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality </s>
--SEPARATOR--
people <c> Height <t> number <c> Nationality <t> text <c> Name <t> text <c> People_ID <t> number <c> Birth_Date <t> text </t> poker_player <c> Poker_Player_ID <t> number <c> Best_Finish <t> number <c> Earnings <t> number <c> Money_Rank <t> number <c> People_ID <t> number <c> Final_Table_Made <t> number <i> What are different nationalities of people and the corresponding number of people from each nation? <s> SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality </s>
--SEPARATOR--
poker_player <c> Poker_Player_ID <t> number <c> People_ID <t> number <c> Final_Table_Made <t> number <c> Best_Finish <t> number <c> Money_Rank <t> number <c> Earnings <t> number </t> people <c> People_ID <t> number <c> Nationality <t> text <c> Name <t> text <c> Birth_Date <t> text <c> Height <t> number <i> How many people are there of each nationality? <s> SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality </s>
--SEPARATOR--
poker_player <c> Poker_Player_ID <t> number <c> People_ID <t> number <c> Money_Rank <t> number <c> Earnings <t> number <c> Final_Table_Made <t> number <c> Best_Finish <t> number </t> people <c> Height <t> number <c> Nationality <t> text <c> Birth_Date <t> text <c> Name <t> text <c> People_ID <t> number <i> How many people are there of each nationality? <s> SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality </s>
--SEPARATOR--
poker_player <c> Poker_Player_ID <t> number <c> People_ID <t> number <c> Final_Table_Made <t> number <c> Best_Finish <t> number <c> Money_Rank <t> number <c> Earnings <t> number </t> people <c> People_ID <t> number <c> Nationality <t> text <c> Name <t> text <c> Birth_Date <t> text <c> Height <t> number <i> What is the most common nationality of people? <s> SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1 </s>
--SEPARATOR--
people <c> Nationality <t> text <c> Height <t> number <c> Name <t> text <c> People_ID <t> number <c> Birth_Date <t> text </t> poker_player <c> Poker_Player_ID <t> number <c> Final_Table_Made <t> number <c> Money_Rank <t> number <c> People_ID <t> number <c> Earnings <t> number <c> Best_Finish <t> number <i> What is the most common nationality of people? <s> SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1 </s>
--SEPARATOR--
poker_player <c> Poker_Player_ID <t> number <c> People_ID <t> number <c> Final_Table_Made <t> number <c> Best_Finish <t> number <c> Money_Rank <t> number <c> Earnings <t> number </t> people <c> People_ID <t> number <c> Nationality <t> text <c> Name <t> text <c> Birth_Date <t> text <c> Height <t> number <i> Give the nationality that is most common across all people. <s> SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1 </s>
--SEPARATOR--
poker_player <c> Poker_Player_ID <t> number <c> Final_Table_Made <t> number <c> Money_Rank <t> number <c> Earnings <t> number <c> Best_Finish <t> number <c> People_ID <t> number </t> people <c> Height <t> number <c> Birth_Date <t> text <c> Name <t> text <c> Nationality <t> text <c> People_ID <t> number <i> Give the nationality that is most common across all people. <s> SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1 </s>
--SEPARATOR--
poker_player <c> Poker_Player_ID <t> number <c> People_ID <t> number <c> Final_Table_Made <t> number <c> Best_Finish <t> number <c> Money_Rank <t> number <c> Earnings <t> number </t> people <c> People_ID <t> number <c> Nationality <t> text <c> Name <t> text <c> Birth_Date <t> text <c> Height <t> number <i> What are the nationalities that are shared by at least two people? <s> SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2 </s>
--SEPARATOR--
poker_player <c> Final_Table_Made <t> number <c> People_ID <t> number <c> Best_Finish <t> number <c> Earnings <t> number <c> Poker_Player_ID <t> number <c> Money_Rank <t> number </t> people <c> Birth_Date <t> text <c> Nationality <t> text <c> Name <t> text <c> Height <t> number <c> People_ID <t> number <i> What are the nationalities that are shared by at least two people? <s> SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2 </s>
--SEPARATOR--
poker_player <c> Poker_Player_ID <t> number <c> People_ID <t> number <c> Final_Table_Made <t> number <c> Best_Finish <t> number <c> Money_Rank <t> number <c> Earnings <t> number </t> people <c> People_ID <t> number <c> Nationality <t> text <c> Name <t> text <c> Birth_Date <t> text <c> Height <t> number <i> Return the nationalities for which there are two or more people. <s> SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2 </s>
--SEPARATOR--
poker_player <c> Final_Table_Made <t> number <c> Poker_Player_ID <t> number <c> Money_Rank <t> number <c> Best_Finish <t> number <c> Earnings <t> number <c> People_ID <t> number </t> people <c> People_ID <t> number <c> Height <t> number <c> Nationality <t> text <c> Name <t> text <c> Birth_Date <t> text <i> Return the nationalities for which there are two or more people. <s> SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2 </s>
--SEPARATOR--
poker_player <c> Poker_Player_ID <t> number <c> People_ID <t> number <c> Final_Table_Made <t> number <c> Best_Finish <t> number <c> Money_Rank <t> number <c> Earnings <t> number </t> people <c> People_ID <t> number <c> Nationality <t> text <c> Name <t> text <c> Birth_Date <t> text <c> Height <t> number <i> List the names and birth dates of people in ascending alphabetical order of name. <s> SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC </s>
--SEPARATOR--
poker_player <c> Best_Finish <t> number <c> Final_Table_Made <t> number <c> People_ID <t> number <c> Money_Rank <t> number <c> Earnings <t> number <c> Poker_Player_ID <t> number </t> people <c> People_ID <t> number <c> Birth_Date <t> text <c> Name <t> text <c> Nationality <t> text <c> Height <t> number <i> List the names and birth dates of people in ascending alphabetical order of name. <s> SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC </s>
--SEPARATOR--
poker_player <c> Poker_Player_ID <t> number <c> People_ID <t> number <c> Final_Table_Made <t> number <c> Best_Finish <t> number <c> Money_Rank <t> number <c> Earnings <t> number </t> people <c> People_ID <t> number <c> Nationality <t> text <c> Name <t> text <c> Birth_Date <t> text <c> Height <t> number <i> What are the names and birth dates of people, ordered by their names in alphabetical order? <s> SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC </s>
--SEPARATOR--
poker_player <c> Earnings <t> number <c> People_ID <t> number <c> Final_Table_Made <t> number <c> Poker_Player_ID <t> number <c> Money_Rank <t> number <c> Best_Finish <t> number </t> people <c> Birth_Date <t> text <c> Nationality <t> text <c> People_ID <t> number <c> Height <t> number <c> Name <t> text <i> What are the names and birth dates of people, ordered by their names in alphabetical order? <s> SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC </s>
--SEPARATOR--
poker_player <c> Poker_Player_ID <t> number <c> People_ID <t> number <c> Final_Table_Made <t> number <c> Best_Finish <t> number <c> Money_Rank <t> number <c> Earnings <t> number </t> people <c> People_ID <t> number <c> Nationality <t> text <c> Name <t> text <c> Birth_Date <t> text <c> Height <t> number <i> Show names of people whose nationality is not "Russia". <s> SELECT Name FROM people WHERE Nationality != "Russia" </s>
--SEPARATOR--
poker_player <c> Earnings <t> number <c> Money_Rank <t> number <c> Final_Table_Made <t> number <c> People_ID <t> number <c> Best_Finish <t> number <c> Poker_Player_ID <t> number </t> people <c> Birth_Date <t> text <c> People_ID <t> number <c> Height <t> number <c> Name <t> text <c> Nationality <t> text <i> Show names of people whose nationality is not "Russia". <s> SELECT Name FROM people WHERE Nationality != "Russia" </s>
--SEPARATOR--
poker_player <c> Poker_Player_ID <t> number <c> People_ID <t> number <c> Final_Table_Made <t> number <c> Best_Finish <t> number <c> Money_Rank <t> number <c> Earnings <t> number </t> people <c> People_ID <t> number <c> Nationality <t> text <c> Name <t> text <c> Birth_Date <t> text <c> Height <t> number <i> What are the names of people who are not from Russia? <s> SELECT Name FROM people WHERE Nationality != "Russia" </s>
--SEPARATOR--
people <c> Birth_Date <t> text <c> Nationality <t> text <c> Name <t> text <c> People_ID <t> number <c> Height <t> number </t> poker_player <c> Best_Finish <t> number <c> Money_Rank <t> number <c> Poker_Player_ID <t> number <c> Earnings <t> number <c> Final_Table_Made <t> number <c> People_ID <t> number <i> What are the names of people who are not from Russia? <s> SELECT Name FROM people WHERE Nationality != "Russia" </s>
--SEPARATOR--
poker_player <c> Poker_Player_ID <t> number <c> People_ID <t> number <c> Final_Table_Made <t> number <c> Best_Finish <t> number <c> Money_Rank <t> number <c> Earnings <t> number </t> people <c> People_ID <t> number <c> Nationality <t> text <c> Name <t> text <c> Birth_Date <t> text <c> Height <t> number <i> List the names of people that are not poker players. <s> SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player) </s>
--SEPARATOR--
poker_player <c> People_ID <t> number <c> Best_Finish <t> number <c> Money_Rank <t> number <c> Final_Table_Made <t> number <c> Poker_Player_ID <t> number <c> Earnings <t> number </t> people <c> Birth_Date <t> text <c> People_ID <t> number <c> Nationality <t> text <c> Name <t> text <c> Height <t> number <i> List the names of people that are not poker players. <s> SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player) </s>
--SEPARATOR--
poker_player <c> Poker_Player_ID <t> number <c> People_ID <t> number <c> Final_Table_Made <t> number <c> Best_Finish <t> number <c> Money_Rank <t> number <c> Earnings <t> number </t> people <c> People_ID <t> number <c> Nationality <t> text <c> Name <t> text <c> Birth_Date <t> text <c> Height <t> number <i> What are the names of people who do not play poker? <s> SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player) </s>
--SEPARATOR--
poker_player <c> People_ID <t> number <c> Final_Table_Made <t> number <c> Poker_Player_ID <t> number <c> Earnings <t> number <c> Money_Rank <t> number <c> Best_Finish <t> number </t> people <c> People_ID <t> number <c> Name <t> text <c> Nationality <t> text <c> Birth_Date <t> text <c> Height <t> number <i> What are the names of people who do not play poker? <s> SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player) </s>
--SEPARATOR--
poker_player <c> Poker_Player_ID <t> number <c> People_ID <t> number <c> Final_Table_Made <t> number <c> Best_Finish <t> number <c> Money_Rank <t> number <c> Earnings <t> number </t> people <c> People_ID <t> number <c> Nationality <t> text <c> Name <t> text <c> Birth_Date <t> text <c> Height <t> number <i> How many distinct nationalities are there? <s> SELECT count(DISTINCT Nationality) FROM people </s>
--SEPARATOR--
people <c> Birth_Date <t> text <c> People_ID <t> number <c> Nationality <t> text <c> Height <t> number <c> Name <t> text </t> poker_player <c> Best_Finish <t> number <c> Earnings <t> number <c> Money_Rank <t> number <c> People_ID <t> number <c> Poker_Player_ID <t> number <c> Final_Table_Made <t> number <i> How many distinct nationalities are there? <s> SELECT count(DISTINCT Nationality) FROM people </s>
--SEPARATOR--
poker_player <c> Poker_Player_ID <t> number <c> People_ID <t> number <c> Final_Table_Made <t> number <c> Best_Finish <t> number <c> Money_Rank <t> number <c> Earnings <t> number </t> people <c> People_ID <t> number <c> Nationality <t> text <c> Name <t> text <c> Birth_Date <t> text <c> Height <t> number <i> Count the number of different nationalities. <s> SELECT count(DISTINCT Nationality) FROM people </s>
--SEPARATOR--
poker_player <c> People_ID <t> number <c> Best_Finish <t> number <c> Money_Rank <t> number <c> Poker_Player_ID <t> number <c> Final_Table_Made <t> number <c> Earnings <t> number </t> people <c> People_ID <t> number <c> Nationality <t> text <c> Name <t> text <c> Height <t> number <c> Birth_Date <t> text <i> Count the number of different nationalities. <s> SELECT count(DISTINCT Nationality) FROM people </s>
--SEPARATOR--
AREA_CODE_STATE <c> area_code <t> number <c> state <t> text </t> CONTESTANTS <c> contestant_number <t> number <c> contestant_name <t> text </t> VOTES <c> vote_id <t> number <c> phone_number <t> number <c> state <t> text <c> contestant_number <t> number <c> created <t> time <i> How many states are there? <s> SELECT count(*) FROM area_code_state </s>
--SEPARATOR--
AREA_CODE_STATE <c> state <t> text <c> area_code <t> number </t> CONTESTANTS <c> contestant_name <t> text <c> contestant_number <t> number </t> VOTES <c> phone_number <t> number <c> vote_id <t> number <c> contestant_number <t> number <c> created <t> time <c> state <t> text <i> How many states are there? <s> SELECT count(*) FROM area_code_state </s>
--SEPARATOR--
AREA_CODE_STATE <c> area_code <t> number <c> state <t> text </t> CONTESTANTS <c> contestant_number <t> number <c> contestant_name <t> text </t> VOTES <c> vote_id <t> number <c> phone_number <t> number <c> state <t> text <c> contestant_number <t> number <c> created <t> time <i> List the contestant numbers and names, ordered by contestant name descending. <s> SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC </s>
--SEPARATOR--
VOTES <c> created <t> time <c> phone_number <t> number <c> vote_id <t> number <c> contestant_number <t> number <c> state <t> text </t> AREA_CODE_STATE <c> state <t> text <c> area_code <t> number </t> CONTESTANTS <c> contestant_name <t> text <c> contestant_number <t> number <i> List the contestant numbers and names, ordered by contestant name descending. <s> SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC </s>
--SEPARATOR--
AREA_CODE_STATE <c> area_code <t> number <c> state <t> text </t> CONTESTANTS <c> contestant_number <t> number <c> contestant_name <t> text </t> VOTES <c> vote_id <t> number <c> phone_number <t> number <c> state <t> text <c> contestant_number <t> number <c> created <t> time <i> List the vote ids, phone numbers and states of all votes. <s> SELECT vote_id ,  phone_number ,  state FROM votes </s>
--SEPARATOR--
CONTESTANTS <c> contestant_name <t> text <c> contestant_number <t> number </t> VOTES <c> created <t> time <c> vote_id <t> number <c> state <t> text <c> phone_number <t> number <c> contestant_number <t> number </t> AREA_CODE_STATE <c> state <t> text <c> area_code <t> number <i> List the vote ids, phone numbers and states of all votes. <s> SELECT vote_id ,  phone_number ,  state FROM votes </s>
--SEPARATOR--
AREA_CODE_STATE <c> area_code <t> number <c> state <t> text </t> CONTESTANTS <c> contestant_number <t> number <c> contestant_name <t> text </t> VOTES <c> vote_id <t> number <c> phone_number <t> number <c> state <t> text <c> contestant_number <t> number <c> created <t> time <i> What are the maximum and minimum values of area codes? <s> SELECT max(area_code) ,  min(area_code) FROM area_code_state </s>
--SEPARATOR--
CONTESTANTS <c> contestant_number <t> number <c> contestant_name <t> text </t> VOTES <c> created <t> time <c> contestant_number <t> number <c> vote_id <t> number <c> state <t> text <c> phone_number <t> number </t> AREA_CODE_STATE <c> area_code <t> number <c> state <t> text <i> What are the maximum and minimum values of area codes? <s> SELECT max(area_code) ,  min(area_code) FROM area_code_state </s>
--SEPARATOR--
AREA_CODE_STATE <c> area_code <t> number <c> state <t> text </t> CONTESTANTS <c> contestant_number <t> number <c> contestant_name <t> text </t> VOTES <c> vote_id <t> number <c> phone_number <t> number <c> state <t> text <c> contestant_number <t> number <c> created <t> time <i> What is last date created of votes from the state 'CA'? <s> SELECT max(created) FROM votes WHERE state  =  'CA' </s>
--SEPARATOR--
VOTES <c> phone_number <t> number <c> created <t> time <c> state <t> text <c> contestant_number <t> number <c> vote_id <t> number </t> AREA_CODE_STATE <c> area_code <t> number <c> state <t> text </t> CONTESTANTS <c> contestant_number <t> number <c> contestant_name <t> text <i> What is last date created of votes from the state 'CA'? <s> SELECT max(created) FROM votes WHERE state  =  'CA' </s>
--SEPARATOR--
AREA_CODE_STATE <c> area_code <t> number <c> state <t> text </t> CONTESTANTS <c> contestant_number <t> number <c> contestant_name <t> text </t> VOTES <c> vote_id <t> number <c> phone_number <t> number <c> state <t> text <c> contestant_number <t> number <c> created <t> time <i> What are the names of the contestants whose names are not 'Jessie Alloway' <s> SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway' </s>
--SEPARATOR--
AREA_CODE_STATE <c> state <t> text <c> area_code <t> number </t> CONTESTANTS <c> contestant_number <t> number <c> contestant_name <t> text </t> VOTES <c> created <t> time <c> phone_number <t> number <c> state <t> text <c> vote_id <t> number <c> contestant_number <t> number <i> What are the names of the contestants whose names are not 'Jessie Alloway' <s> SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway' </s>
--SEPARATOR--
AREA_CODE_STATE <c> area_code <t> number <c> state <t> text </t> CONTESTANTS <c> contestant_number <t> number <c> contestant_name <t> text </t> VOTES <c> vote_id <t> number <c> phone_number <t> number <c> state <t> text <c> contestant_number <t> number <c> created <t> time <i> What are the distinct states and create time of all votes? <s> SELECT DISTINCT state ,  created FROM votes </s>
--SEPARATOR--
CONTESTANTS <c> contestant_number <t> number <c> contestant_name <t> text </t> VOTES <c> vote_id <t> number <c> phone_number <t> number <c> contestant_number <t> number <c> created <t> time <c> state <t> text </t> AREA_CODE_STATE <c> state <t> text <c> area_code <t> number <i> What are the distinct states and create time of all votes? <s> SELECT DISTINCT state ,  created FROM votes </s>
--SEPARATOR--
AREA_CODE_STATE <c> area_code <t> number <c> state <t> text </t> CONTESTANTS <c> contestant_number <t> number <c> contestant_name <t> text </t> VOTES <c> vote_id <t> number <c> phone_number <t> number <c> state <t> text <c> contestant_number <t> number <c> created <t> time <i> What are the contestant numbers and names of the contestants who had at least two votes? <s> SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2 </s>
--SEPARATOR--
VOTES <c> phone_number <t> number <c> created <t> time <c> contestant_number <t> number <c> state <t> text <c> vote_id <t> number </t> AREA_CODE_STATE <c> area_code <t> number <c> state <t> text </t> CONTESTANTS <c> contestant_name <t> text <c> contestant_number <t> number <i> What are the contestant numbers and names of the contestants who had at least two votes? <s> SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2 </s>
--SEPARATOR--
AREA_CODE_STATE <c> area_code <t> number <c> state <t> text </t> CONTESTANTS <c> contestant_number <t> number <c> contestant_name <t> text </t> VOTES <c> vote_id <t> number <c> phone_number <t> number <c> state <t> text <c> contestant_number <t> number <c> created <t> time <i> Of all the contestants who got voted, what is the contestant number and name of the contestant who got least votes? <s> SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1 </s>
--SEPARATOR--
AREA_CODE_STATE <c> area_code <t> number <c> state <t> text </t> CONTESTANTS <c> contestant_name <t> text <c> contestant_number <t> number </t> VOTES <c> contestant_number <t> number <c> vote_id <t> number <c> created <t> time <c> state <t> text <c> phone_number <t> number <i> Of all the contestants who got voted, what is the contestant number and name of the contestant who got least votes? <s> SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1 </s>
--SEPARATOR--
AREA_CODE_STATE <c> area_code <t> number <c> state <t> text </t> CONTESTANTS <c> contestant_number <t> number <c> contestant_name <t> text </t> VOTES <c> vote_id <t> number <c> phone_number <t> number <c> state <t> text <c> contestant_number <t> number <c> created <t> time <i> What are the number of votes from state 'NY' or 'CA'? <s> SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA' </s>
--SEPARATOR--
CONTESTANTS <c> contestant_number <t> number <c> contestant_name <t> text </t> AREA_CODE_STATE <c> area_code <t> number <c> state <t> text </t> VOTES <c> contestant_number <t> number <c> vote_id <t> number <c> state <t> text <c> phone_number <t> number <c> created <t> time <i> What are the number of votes from state 'NY' or 'CA'? <s> SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA' </s>
--SEPARATOR--
AREA_CODE_STATE <c> area_code <t> number <c> state <t> text </t> CONTESTANTS <c> contestant_number <t> number <c> contestant_name <t> text </t> VOTES <c> vote_id <t> number <c> phone_number <t> number <c> state <t> text <c> contestant_number <t> number <c> created <t> time <i> How many contestants did not get voted? <s> SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes ) </s>
--SEPARATOR--
VOTES <c> state <t> text <c> phone_number <t> number <c> created <t> time <c> contestant_number <t> number <c> vote_id <t> number </t> AREA_CODE_STATE <c> state <t> text <c> area_code <t> number </t> CONTESTANTS <c> contestant_number <t> number <c> contestant_name <t> text <i> How many contestants did not get voted? <s> SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes ) </s>
--SEPARATOR--
AREA_CODE_STATE <c> area_code <t> number <c> state <t> text </t> CONTESTANTS <c> contestant_number <t> number <c> contestant_name <t> text </t> VOTES <c> vote_id <t> number <c> phone_number <t> number <c> state <t> text <c> contestant_number <t> number <c> created <t> time <i> What is the area code in which the most voters voted? <s> SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
VOTES <c> contestant_number <t> number <c> vote_id <t> number <c> created <t> time <c> state <t> text <c> phone_number <t> number </t> AREA_CODE_STATE <c> state <t> text <c> area_code <t> number </t> CONTESTANTS <c> contestant_number <t> number <c> contestant_name <t> text <i> What is the area code in which the most voters voted? <s> SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
AREA_CODE_STATE <c> area_code <t> number <c> state <t> text </t> CONTESTANTS <c> contestant_number <t> number <c> contestant_name <t> text </t> VOTES <c> vote_id <t> number <c> phone_number <t> number <c> state <t> text <c> contestant_number <t> number <c> created <t> time <i> What are the create dates, states, and phone numbers of the votes that were for the contestant named 'Tabatha Gehling'? <s> SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling' </s>
--SEPARATOR--
CONTESTANTS <c> contestant_number <t> number <c> contestant_name <t> text </t> VOTES <c> state <t> text <c> contestant_number <t> number <c> vote_id <t> number <c> created <t> time <c> phone_number <t> number </t> AREA_CODE_STATE <c> state <t> text <c> area_code <t> number <i> What are the create dates, states, and phone numbers of the votes that were for the contestant named 'Tabatha Gehling'? <s> SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling' </s>
--SEPARATOR--
AREA_CODE_STATE <c> area_code <t> number <c> state <t> text </t> CONTESTANTS <c> contestant_number <t> number <c> contestant_name <t> text </t> VOTES <c> vote_id <t> number <c> phone_number <t> number <c> state <t> text <c> contestant_number <t> number <c> created <t> time <i> List the area codes in which voters voted both for the contestant 'Tabatha Gehling' and the contestant 'Kelly Clauss'. <s> SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss' </s>
--SEPARATOR--
CONTESTANTS <c> contestant_name <t> text <c> contestant_number <t> number </t> AREA_CODE_STATE <c> state <t> text <c> area_code <t> number </t> VOTES <c> contestant_number <t> number <c> created <t> time <c> phone_number <t> number <c> vote_id <t> number <c> state <t> text <i> List the area codes in which voters voted both for the contestant 'Tabatha Gehling' and the contestant 'Kelly Clauss'. <s> SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss' </s>
--SEPARATOR--
AREA_CODE_STATE <c> area_code <t> number <c> state <t> text </t> CONTESTANTS <c> contestant_number <t> number <c> contestant_name <t> text </t> VOTES <c> vote_id <t> number <c> phone_number <t> number <c> state <t> text <c> contestant_number <t> number <c> created <t> time <i> Return the names of the contestants whose names contain the substring 'Al' . <s> select contestant_name from contestants where contestant_name like "%al%" </s>
--SEPARATOR--
CONTESTANTS <c> contestant_number <t> number <c> contestant_name <t> text </t> VOTES <c> phone_number <t> number <c> state <t> text <c> created <t> time <c> contestant_number <t> number <c> vote_id <t> number </t> AREA_CODE_STATE <c> area_code <t> number <c> state <t> text <i> Return the names of the contestants whose names contain the substring 'Al' . <s> select contestant_name from contestants where contestant_name like "%al%" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What are the names of all the countries that became independent after 1950? <s> SELECT Name FROM country WHERE IndepYear  >  1950 </s>
--SEPARATOR--
country <c> LifeExpectancy <t> number <c> GNP <t> number <c> Code <t> text <c> Region <t> text <c> Capital <t> number <c> GovernmentForm <t> text <c> GNPOld <t> number <c> Code2 <t> text <c> LocalName <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> HeadOfState <t> text <c> Name <t> text <c> Population <t> number <c> Continent <t> text </t> countrylanguage <c> IsOfficial <t> text <c> Percentage <t> number <c> Language <t> text <c> CountryCode <t> text </t> sqlite_sequence <c> seq <t> text <c> name <t> text </t> city <c> District <t> text <c> ID <t> number <c> Population <t> number <c> CountryCode <t> text <c> Name <t> text <i> What are the names of all the countries that became independent after 1950? <s> SELECT Name FROM country WHERE IndepYear  >  1950 </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> Give the names of the nations that were founded after 1950. <s> SELECT Name FROM country WHERE IndepYear  >  1950 </s>
--SEPARATOR--
countrylanguage <c> IsOfficial <t> text <c> CountryCode <t> text <c> Language <t> text <c> Percentage <t> number </t> sqlite_sequence <c> seq <t> text <c> name <t> text </t> country <c> IndepYear <t> number <c> GNPOld <t> number <c> Region <t> text <c> HeadOfState <t> text <c> GNP <t> number <c> GovernmentForm <t> text <c> LifeExpectancy <t> number <c> Capital <t> number <c> Code2 <t> text <c> Name <t> text <c> Continent <t> text <c> Population <t> number <c> SurfaceArea <t> number <c> Code <t> text <c> LocalName <t> text </t> city <c> Population <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> ID <t> number <i> Give the names of the nations that were founded after 1950. <s> SELECT Name FROM country WHERE IndepYear  >  1950 </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> How many countries have a republic as their form of government? <s> SELECT count(*) FROM country WHERE GovernmentForm  =  "Republic" </s>
--SEPARATOR--
country <c> HeadOfState <t> text <c> Code <t> text <c> Capital <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> IndepYear <t> number <c> GNPOld <t> number <c> Name <t> text <c> GovernmentForm <t> text <c> Continent <t> text <c> LocalName <t> text <c> Population <t> number <c> SurfaceArea <t> number <c> Code2 <t> text <c> Region <t> text </t> city <c> District <t> text <c> Population <t> number <c> CountryCode <t> text <c> ID <t> number <c> Name <t> text </t> countrylanguage <c> IsOfficial <t> text <c> Language <t> text <c> Percentage <t> number <c> CountryCode <t> text </t> sqlite_sequence <c> name <t> text <c> seq <t> text <i> How many countries have a republic as their form of government? <s> SELECT count(*) FROM country WHERE GovernmentForm  =  "Republic" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> How many countries have governments that are republics? <s> SELECT count(*) FROM country WHERE GovernmentForm  =  "Republic" </s>
--SEPARATOR--
sqlite_sequence <c> name <t> text <c> seq <t> text </t> countrylanguage <c> Language <t> text <c> IsOfficial <t> text <c> CountryCode <t> text <c> Percentage <t> number </t> country <c> GovernmentForm <t> text <c> SurfaceArea <t> number <c> Name <t> text <c> Code <t> text <c> Code2 <t> text <c> Region <t> text <c> LifeExpectancy <t> number <c> Population <t> number <c> Continent <t> text <c> Capital <t> number <c> LocalName <t> text <c> IndepYear <t> number <c> HeadOfState <t> text <c> GNPOld <t> number <c> GNP <t> number </t> city <c> District <t> text <c> Population <t> number <c> Name <t> text <c> CountryCode <t> text <c> ID <t> number <i> How many countries have governments that are republics? <s> SELECT count(*) FROM country WHERE GovernmentForm  =  "Republic" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What is the total surface area of the countries in the Caribbean region? <s> SELECT sum(SurfaceArea) FROM country WHERE Region  =  "Caribbean" </s>
--SEPARATOR--
sqlite_sequence <c> seq <t> text <c> name <t> text </t> country <c> Continent <t> text <c> LifeExpectancy <t> number <c> Capital <t> number <c> LocalName <t> text <c> Name <t> text <c> Population <t> number <c> GNP <t> number <c> Code2 <t> text <c> HeadOfState <t> text <c> IndepYear <t> number <c> Code <t> text <c> GovernmentForm <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> GNPOld <t> number </t> countrylanguage <c> CountryCode <t> text <c> IsOfficial <t> text <c> Language <t> text <c> Percentage <t> number </t> city <c> District <t> text <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> Population <t> number <i> What is the total surface area of the countries in the Caribbean region? <s> SELECT sum(SurfaceArea) FROM country WHERE Region  =  "Caribbean" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> How much surface area do the countires in the Carribean cover together? <s> SELECT sum(SurfaceArea) FROM country WHERE Region  =  "Caribbean" </s>
--SEPARATOR--
sqlite_sequence <c> name <t> text <c> seq <t> text </t> countrylanguage <c> Percentage <t> number <c> IsOfficial <t> text <c> Language <t> text <c> CountryCode <t> text </t> country <c> Continent <t> text <c> HeadOfState <t> text <c> SurfaceArea <t> number <c> GNP <t> number <c> Region <t> text <c> Capital <t> number <c> Population <t> number <c> Code2 <t> text <c> Name <t> text <c> GNPOld <t> number <c> LifeExpectancy <t> number <c> Code <t> text <c> IndepYear <t> number <c> LocalName <t> text <c> GovernmentForm <t> text </t> city <c> District <t> text <c> ID <t> number <c> CountryCode <t> text <c> Population <t> number <c> Name <t> text <i> How much surface area do the countires in the Carribean cover together? <s> SELECT sum(SurfaceArea) FROM country WHERE Region  =  "Caribbean" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> Which continent is Anguilla in? <s> SELECT Continent FROM country WHERE Name  =  "Anguilla" </s>
--SEPARATOR--
city <c> CountryCode <t> text <c> Population <t> number <c> ID <t> number <c> District <t> text <c> Name <t> text </t> sqlite_sequence <c> seq <t> text <c> name <t> text </t> countrylanguage <c> Language <t> text <c> Percentage <t> number <c> CountryCode <t> text <c> IsOfficial <t> text </t> country <c> GNP <t> number <c> Capital <t> number <c> Continent <t> text <c> Code <t> text <c> Name <t> text <c> Population <t> number <c> GovernmentForm <t> text <c> IndepYear <t> number <c> HeadOfState <t> text <c> Code2 <t> text <c> SurfaceArea <t> number <c> Region <t> text <c> LifeExpectancy <t> number <c> LocalName <t> text <c> GNPOld <t> number <i> Which continent is Anguilla in? <s> SELECT Continent FROM country WHERE Name  =  "Anguilla" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What is the continent name which Anguilla belongs to? <s> SELECT Continent FROM country WHERE Name  =  "Anguilla" </s>
--SEPARATOR--
sqlite_sequence <c> name <t> text <c> seq <t> text </t> city <c> ID <t> number <c> District <t> text <c> Population <t> number <c> Name <t> text <c> CountryCode <t> text </t> countrylanguage <c> Percentage <t> number <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text </t> country <c> GovernmentForm <t> text <c> Population <t> number <c> HeadOfState <t> text <c> Continent <t> text <c> SurfaceArea <t> number <c> Code <t> text <c> Name <t> text <c> LifeExpectancy <t> number <c> IndepYear <t> number <c> LocalName <t> text <c> Capital <t> number <c> Code2 <t> text <c> Region <t> text <c> GNPOld <t> number <c> GNP <t> number <i> What is the continent name which Anguilla belongs to? <s> SELECT Continent FROM country WHERE Name  =  "Anguilla" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> Which region is the city Kabul located in? <s> SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul" </s>
--SEPARATOR--
country <c> Population <t> number <c> Name <t> text <c> Capital <t> number <c> Continent <t> text <c> GNP <t> number <c> LifeExpectancy <t> number <c> Code2 <t> text <c> LocalName <t> text <c> GovernmentForm <t> text <c> IndepYear <t> number <c> SurfaceArea <t> number <c> GNPOld <t> number <c> Region <t> text <c> Code <t> text <c> HeadOfState <t> text </t> countrylanguage <c> IsOfficial <t> text <c> Percentage <t> number <c> CountryCode <t> text <c> Language <t> text </t> city <c> District <t> text <c> ID <t> number <c> CountryCode <t> text <c> Population <t> number <c> Name <t> text </t> sqlite_sequence <c> name <t> text <c> seq <t> text <i> Which region is the city Kabul located in? <s> SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What region is Kabul in? <s> SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul" </s>
--SEPARATOR--
countrylanguage <c> IsOfficial <t> text <c> Percentage <t> number <c> CountryCode <t> text <c> Language <t> text </t> country <c> Capital <t> number <c> GNPOld <t> number <c> IndepYear <t> number <c> Continent <t> text <c> HeadOfState <t> text <c> LocalName <t> text <c> Name <t> text <c> GNP <t> number <c> Code <t> text <c> LifeExpectancy <t> number <c> SurfaceArea <t> number <c> Population <t> number <c> Region <t> text <c> GovernmentForm <t> text <c> Code2 <t> text </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> city <c> District <t> text <c> Population <t> number <c> CountryCode <t> text <c> ID <t> number <c> Name <t> text <i> What region is Kabul in? <s> SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> Which language is the most popular in Aruba? <s> SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" ORDER BY Percentage DESC LIMIT 1 </s>
--SEPARATOR--
city <c> CountryCode <t> text <c> Population <t> number <c> ID <t> number <c> District <t> text <c> Name <t> text </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> LocalName <t> text <c> Name <t> text <c> Continent <t> text <c> Code <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> GNPOld <t> number <c> Code2 <t> text <c> IndepYear <t> number <c> Region <t> text <c> LifeExpectancy <t> number <c> Population <t> number <c> GNP <t> number <c> SurfaceArea <t> number </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> Percentage <t> number <c> IsOfficial <t> text <i> Which language is the most popular in Aruba? <s> SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" ORDER BY Percentage DESC LIMIT 1 </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What language is predominantly spoken in Aruba? <s> SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" ORDER BY Percentage DESC LIMIT 1 </s>
--SEPARATOR--
countrylanguage <c> IsOfficial <t> text <c> Percentage <t> number <c> Language <t> text <c> CountryCode <t> text </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> city <c> District <t> text <c> ID <t> number <c> Population <t> number <c> Name <t> text <c> CountryCode <t> text </t> country <c> GNPOld <t> number <c> LocalName <t> text <c> LifeExpectancy <t> number <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Code2 <t> text <c> Code <t> text <c> Population <t> number <c> HeadOfState <t> text <c> Region <t> text <c> GNP <t> number <c> Continent <t> text <c> Capital <t> number <c> GovernmentForm <t> text <c> Name <t> text <i> What language is predominantly spoken in Aruba? <s> SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" ORDER BY Percentage DESC LIMIT 1 </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What are the population and life expectancies in Brazil? <s> SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  "Brazil" </s>
--SEPARATOR--
countrylanguage <c> CountryCode <t> text <c> IsOfficial <t> text <c> Percentage <t> number <c> Language <t> text </t> sqlite_sequence <c> seq <t> text <c> name <t> text </t> city <c> CountryCode <t> text <c> Population <t> number <c> Name <t> text <c> District <t> text <c> ID <t> number </t> country <c> LifeExpectancy <t> number <c> Region <t> text <c> Continent <t> text <c> GNPOld <t> number <c> LocalName <t> text <c> Population <t> number <c> HeadOfState <t> text <c> Code <t> text <c> IndepYear <t> number <c> Capital <t> number <c> SurfaceArea <t> number <c> GNP <t> number <c> Code2 <t> text <c> GovernmentForm <t> text <c> Name <t> text <i> What are the population and life expectancies in Brazil? <s> SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  "Brazil" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> Give me Brazil’s population and life expectancies. <s> SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  "Brazil" </s>
--SEPARATOR--
city <c> Population <t> number <c> Name <t> text <c> District <t> text <c> CountryCode <t> text <c> ID <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> countrylanguage <c> Language <t> text <c> IsOfficial <t> text <c> CountryCode <t> text <c> Percentage <t> number </t> country <c> Population <t> number <c> GNPOld <t> number <c> Code <t> text <c> Capital <t> number <c> Code2 <t> text <c> HeadOfState <t> text <c> GNP <t> number <c> Name <t> text <c> Continent <t> text <c> SurfaceArea <t> number <c> GovernmentForm <t> text <c> LocalName <t> text <c> LifeExpectancy <t> number <c> IndepYear <t> number <c> Region <t> text <i> Give me Brazil’s population and life expectancies. <s> SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  "Brazil" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What are the region and population of Angola? <s> SELECT Population ,  Region FROM country WHERE Name  =  "Angola" </s>
--SEPARATOR--
country <c> GNPOld <t> number <c> Capital <t> number <c> LocalName <t> text <c> SurfaceArea <t> number <c> Region <t> text <c> Name <t> text <c> HeadOfState <t> text <c> GovernmentForm <t> text <c> Continent <t> text <c> Code <t> text <c> GNP <t> number <c> IndepYear <t> number <c> Population <t> number <c> Code2 <t> text <c> LifeExpectancy <t> number </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> city <c> CountryCode <t> text <c> District <t> text <c> ID <t> number <c> Name <t> text <c> Population <t> number <i> What are the region and population of Angola? <s> SELECT Population ,  Region FROM country WHERE Name  =  "Angola" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What region does Angola belong to and what is its population? <s> SELECT Population ,  Region FROM country WHERE Name  =  "Angola" </s>
--SEPARATOR--
countrylanguage <c> CountryCode <t> text <c> IsOfficial <t> text <c> Language <t> text <c> Percentage <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> city <c> Name <t> text <c> Population <t> number <c> District <t> text <c> ID <t> number <c> CountryCode <t> text </t> country <c> GovernmentForm <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Code2 <t> text <c> Capital <t> number <c> LocalName <t> text <c> Region <t> text <c> LifeExpectancy <t> number <c> Name <t> text <c> Code <t> text <c> HeadOfState <t> text <c> Population <t> number <c> GNPOld <t> number <c> GNP <t> number <c> Continent <t> text <i> What region does Angola belong to and what is its population? <s> SELECT Population ,  Region FROM country WHERE Name  =  "Angola" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What is the average expected life expectancy for countries in the region of Central Africa? <s> SELECT avg(LifeExpectancy) FROM country WHERE Region  =  "Central Africa" </s>
--SEPARATOR--
countrylanguage <c> Percentage <t> number <c> Language <t> text <c> IsOfficial <t> text <c> CountryCode <t> text </t> city <c> Name <t> text <c> ID <t> number <c> Population <t> number <c> CountryCode <t> text <c> District <t> text </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> LifeExpectancy <t> number <c> HeadOfState <t> text <c> GNPOld <t> number <c> SurfaceArea <t> number <c> Code <t> text <c> Population <t> number <c> Name <t> text <c> Code2 <t> text <c> Continent <t> text <c> GovernmentForm <t> text <c> LocalName <t> text <c> Region <t> text <c> Capital <t> number <c> IndepYear <t> number <c> GNP <t> number <i> What is the average expected life expectancy for countries in the region of Central Africa? <s> SELECT avg(LifeExpectancy) FROM country WHERE Region  =  "Central Africa" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> How long is the people’s average life expectancy in Central Africa? <s> SELECT avg(LifeExpectancy) FROM country WHERE Region  =  "Central Africa" </s>
--SEPARATOR--
sqlite_sequence <c> seq <t> text <c> name <t> text </t> city <c> Population <t> number <c> Name <t> text <c> ID <t> number <c> District <t> text <c> CountryCode <t> text </t> country <c> Population <t> number <c> GNPOld <t> number <c> Continent <t> text <c> IndepYear <t> number <c> LifeExpectancy <t> number <c> Name <t> text <c> GovernmentForm <t> text <c> GNP <t> number <c> HeadOfState <t> text <c> Region <t> text <c> Capital <t> number <c> Code2 <t> text <c> SurfaceArea <t> number <c> LocalName <t> text <c> Code <t> text </t> countrylanguage <c> IsOfficial <t> text <c> CountryCode <t> text <c> Language <t> text <c> Percentage <t> number <i> How long is the people’s average life expectancy in Central Africa? <s> SELECT avg(LifeExpectancy) FROM country WHERE Region  =  "Central Africa" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What is the name of country that has the shortest life expectancy in Asia? <s> SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy LIMIT 1 </s>
--SEPARATOR--
sqlite_sequence <c> seq <t> text <c> name <t> text </t> city <c> District <t> text <c> CountryCode <t> text <c> ID <t> number <c> Name <t> text <c> Population <t> number </t> countrylanguage <c> IsOfficial <t> text <c> Percentage <t> number <c> CountryCode <t> text <c> Language <t> text </t> country <c> Population <t> number <c> GNP <t> number <c> LifeExpectancy <t> number <c> SurfaceArea <t> number <c> Code <t> text <c> Continent <t> text <c> Region <t> text <c> GovernmentForm <t> text <c> LocalName <t> text <c> Capital <t> number <c> GNPOld <t> number <c> Code2 <t> text <c> IndepYear <t> number <c> HeadOfState <t> text <c> Name <t> text <i> What is the name of country that has the shortest life expectancy in Asia? <s> SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy LIMIT 1 </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> Give the name of the country in Asia with the lowest life expectancy. <s> SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy LIMIT 1 </s>
--SEPARATOR--
city <c> ID <t> number <c> District <t> text <c> CountryCode <t> text <c> Name <t> text <c> Population <t> number </t> countrylanguage <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <c> CountryCode <t> text </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code2 <t> text <c> LocalName <t> text <c> Continent <t> text <c> GovernmentForm <t> text <c> Name <t> text <c> GNP <t> number <c> Region <t> text <c> Capital <t> number <c> SurfaceArea <t> number <c> Code <t> text <c> Population <t> number <c> LifeExpectancy <t> number <c> HeadOfState <t> text <c> GNPOld <t> number <c> IndepYear <t> number <i> Give the name of the country in Asia with the lowest life expectancy. <s> SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy LIMIT 1 </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What is the total population and maximum GNP in Asia? <s> SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  "Asia" </s>
--SEPARATOR--
sqlite_sequence <c> seq <t> text <c> name <t> text </t> city <c> CountryCode <t> text <c> ID <t> number <c> Name <t> text <c> District <t> text <c> Population <t> number </t> country <c> Region <t> text <c> Code <t> text <c> Population <t> number <c> GovernmentForm <t> text <c> IndepYear <t> number <c> HeadOfState <t> text <c> Continent <t> text <c> LocalName <t> text <c> Capital <t> number <c> GNPOld <t> number <c> Code2 <t> text <c> SurfaceArea <t> number <c> GNP <t> number <c> Name <t> text <c> LifeExpectancy <t> number </t> countrylanguage <c> IsOfficial <t> text <c> Percentage <t> number <c> CountryCode <t> text <c> Language <t> text <i> What is the total population and maximum GNP in Asia? <s> SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  "Asia" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> How many people live in Asia, and what is the largest GNP among them? <s> SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  "Asia" </s>
--SEPARATOR--
country <c> IndepYear <t> number <c> Capital <t> number <c> Region <t> text <c> Code <t> text <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> LifeExpectancy <t> number <c> Code2 <t> text <c> SurfaceArea <t> number <c> GovernmentForm <t> text <c> Continent <t> text <c> Population <t> number <c> HeadOfState <t> text <c> Name <t> text </t> city <c> Population <t> number <c> CountryCode <t> text <c> ID <t> number <c> Name <t> text <c> District <t> text </t> countrylanguage <c> Percentage <t> number <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text </t> sqlite_sequence <c> seq <t> text <c> name <t> text <i> How many people live in Asia, and what is the largest GNP among them? <s> SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  "Asia" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What is the average life expectancy in African countries that are republics? <s> SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic" </s>
--SEPARATOR--
country <c> Code <t> text <c> GNP <t> number <c> Region <t> text <c> GovernmentForm <t> text <c> IndepYear <t> number <c> HeadOfState <t> text <c> Code2 <t> text <c> Name <t> text <c> SurfaceArea <t> number <c> Continent <t> text <c> Population <t> number <c> LocalName <t> text <c> GNPOld <t> number <c> Capital <t> number <c> LifeExpectancy <t> number </t> countrylanguage <c> Percentage <t> number <c> IsOfficial <t> text <c> Language <t> text <c> CountryCode <t> text </t> sqlite_sequence <c> seq <t> text <c> name <t> text </t> city <c> ID <t> number <c> CountryCode <t> text <c> District <t> text <c> Name <t> text <c> Population <t> number <i> What is the average life expectancy in African countries that are republics? <s> SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> Give the average life expectancy for countries in Africa which are republics? <s> SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic" </s>
--SEPARATOR--
countrylanguage <c> Language <t> text <c> Percentage <t> number <c> CountryCode <t> text <c> IsOfficial <t> text </t> city <c> Population <t> number <c> Name <t> text <c> District <t> text <c> ID <t> number <c> CountryCode <t> text </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Region <t> text <c> LocalName <t> text <c> SurfaceArea <t> number <c> Name <t> text <c> Population <t> number <c> GNP <t> number <c> Code <t> text <c> GNPOld <t> number <c> Continent <t> text <c> HeadOfState <t> text <c> Code2 <t> text <c> IndepYear <t> number <c> Capital <t> number <c> GovernmentForm <t> text <c> LifeExpectancy <t> number <i> Give the average life expectancy for countries in Africa which are republics? <s> SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What is the total surface area of the continents Asia and Europe? <s> SELECT sum(SurfaceArea) FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe" </s>
--SEPARATOR--
country <c> Population <t> number <c> LocalName <t> text <c> Name <t> text <c> GovernmentForm <t> text <c> Code <t> text <c> Capital <t> number <c> Code2 <t> text <c> GNPOld <t> number <c> LifeExpectancy <t> number <c> Region <t> text <c> SurfaceArea <t> number <c> HeadOfState <t> text <c> Continent <t> text <c> GNP <t> number <c> IndepYear <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> countrylanguage <c> Percentage <t> number <c> Language <t> text <c> IsOfficial <t> text <c> CountryCode <t> text </t> city <c> District <t> text <c> CountryCode <t> text <c> ID <t> number <c> Name <t> text <c> Population <t> number <i> What is the total surface area of the continents Asia and Europe? <s> SELECT sum(SurfaceArea) FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> Give the total surface area covered by countries in Asia or Europe. <s> SELECT sum(SurfaceArea) FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe" </s>
--SEPARATOR--
sqlite_sequence <c> name <t> text <c> seq <t> text </t> countrylanguage <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <c> CountryCode <t> text </t> country <c> IndepYear <t> number <c> Continent <t> text <c> HeadOfState <t> text <c> GovernmentForm <t> text <c> Code <t> text <c> LifeExpectancy <t> number <c> Capital <t> number <c> GNP <t> number <c> Code2 <t> text <c> LocalName <t> text <c> Population <t> number <c> GNPOld <t> number <c> Name <t> text <c> SurfaceArea <t> number <c> Region <t> text </t> city <c> ID <t> number <c> District <t> text <c> Population <t> number <c> CountryCode <t> text <c> Name <t> text <i> Give the total surface area covered by countries in Asia or Europe. <s> SELECT sum(SurfaceArea) FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> How many people live in Gelderland district? <s> SELECT sum(Population) FROM city WHERE District  =  "Gelderland" </s>
--SEPARATOR--
country <c> GNPOld <t> number <c> GNP <t> number <c> LocalName <t> text <c> Code2 <t> text <c> GovernmentForm <t> text <c> Capital <t> number <c> Population <t> number <c> SurfaceArea <t> number <c> Continent <t> text <c> Name <t> text <c> IndepYear <t> number <c> LifeExpectancy <t> number <c> Region <t> text <c> Code <t> text <c> HeadOfState <t> text </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> city <c> District <t> text <c> CountryCode <t> text <c> Population <t> number <c> ID <t> number <c> Name <t> text </t> countrylanguage <c> Percentage <t> number <c> Language <t> text <c> CountryCode <t> text <c> IsOfficial <t> text <i> How many people live in Gelderland district? <s> SELECT sum(Population) FROM city WHERE District  =  "Gelderland" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What is the total population of Gelderland district? <s> SELECT sum(Population) FROM city WHERE District  =  "Gelderland" </s>
--SEPARATOR--
country <c> Code <t> text <c> Code2 <t> text <c> Region <t> text <c> LocalName <t> text <c> Name <t> text <c> Capital <t> number <c> IndepYear <t> number <c> GNP <t> number <c> LifeExpectancy <t> number <c> GNPOld <t> number <c> HeadOfState <t> text <c> Population <t> number <c> GovernmentForm <t> text <c> SurfaceArea <t> number <c> Continent <t> text </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> Percentage <t> number <c> IsOfficial <t> text </t> city <c> CountryCode <t> text <c> District <t> text <c> Name <t> text <c> ID <t> number <c> Population <t> number <i> What is the total population of Gelderland district? <s> SELECT sum(Population) FROM city WHERE District  =  "Gelderland" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What is the average GNP and total population in all nations whose government is US territory? <s> SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  "US Territory" </s>
--SEPARATOR--
country <c> GNP <t> number <c> Name <t> text <c> SurfaceArea <t> number <c> LocalName <t> text <c> Population <t> number <c> Continent <t> text <c> Region <t> text <c> GovernmentForm <t> text <c> Code <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> LifeExpectancy <t> number <c> GNPOld <t> number <c> IndepYear <t> number <c> Code2 <t> text </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> city <c> Population <t> number <c> CountryCode <t> text <c> ID <t> number <c> District <t> text <c> Name <t> text </t> countrylanguage <c> Percentage <t> number <c> IsOfficial <t> text <c> CountryCode <t> text <c> Language <t> text <i> What is the average GNP and total population in all nations whose government is US territory? <s> SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  "US Territory" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> Give the mean GNP and total population of nations which are considered US territory. <s> SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  "US Territory" </s>
--SEPARATOR--
sqlite_sequence <c> name <t> text <c> seq <t> text </t> city <c> Name <t> text <c> Population <t> number <c> CountryCode <t> text <c> ID <t> number <c> District <t> text </t> country <c> Name <t> text <c> SurfaceArea <t> number <c> HeadOfState <t> text <c> Region <t> text <c> Capital <t> number <c> GNP <t> number <c> Continent <t> text <c> Code <t> text <c> Population <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> GNPOld <t> number <c> Code2 <t> text <c> IndepYear <t> number <c> LifeExpectancy <t> number </t> countrylanguage <c> Percentage <t> number <c> IsOfficial <t> text <c> Language <t> text <c> CountryCode <t> text <i> Give the mean GNP and total population of nations which are considered US territory. <s> SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  "US Territory" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> How many unique languages are spoken in the world? <s> SELECT count(DISTINCT LANGUAGE) FROM countrylanguage </s>
--SEPARATOR--
countrylanguage <c> IsOfficial <t> text <c> Percentage <t> number <c> CountryCode <t> text <c> Language <t> text </t> country <c> HeadOfState <t> text <c> Population <t> number <c> GovernmentForm <t> text <c> Code <t> text <c> Code2 <t> text <c> Name <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Capital <t> number <c> LocalName <t> text <c> GNPOld <t> number <c> GNP <t> number <c> LifeExpectancy <t> number <c> Region <t> text <c> Continent <t> text </t> city <c> District <t> text <c> CountryCode <t> text <c> Population <t> number <c> ID <t> number <c> Name <t> text </t> sqlite_sequence <c> name <t> text <c> seq <t> text <i> How many unique languages are spoken in the world? <s> SELECT count(DISTINCT LANGUAGE) FROM countrylanguage </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What is the number of distinct languages used around the world? <s> SELECT count(DISTINCT LANGUAGE) FROM countrylanguage </s>
--SEPARATOR--
countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number </t> country <c> Code2 <t> text <c> Code <t> text <c> Region <t> text <c> Capital <t> number <c> SurfaceArea <t> number <c> LifeExpectancy <t> number <c> GNPOld <t> number <c> Continent <t> text <c> HeadOfState <t> text <c> Name <t> text <c> GovernmentForm <t> text <c> IndepYear <t> number <c> LocalName <t> text <c> GNP <t> number <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> city <c> CountryCode <t> text <c> Population <t> number <c> ID <t> number <c> District <t> text <c> Name <t> text <i> What is the number of distinct languages used around the world? <s> SELECT count(DISTINCT LANGUAGE) FROM countrylanguage </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> How many type of governments are in Africa? <s> SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  "Africa" </s>
--SEPARATOR--
city <c> Population <t> number <c> ID <t> number <c> CountryCode <t> text <c> District <t> text <c> Name <t> text </t> country <c> SurfaceArea <t> number <c> GovernmentForm <t> text <c> LifeExpectancy <t> number <c> Capital <t> number <c> Continent <t> text <c> Code2 <t> text <c> LocalName <t> text <c> GNPOld <t> number <c> Code <t> text <c> Region <t> text <c> IndepYear <t> number <c> Population <t> number <c> HeadOfState <t> text <c> GNP <t> number <c> Name <t> text </t> countrylanguage <c> Language <t> text <c> Percentage <t> number <c> CountryCode <t> text <c> IsOfficial <t> text </t> sqlite_sequence <c> name <t> text <c> seq <t> text <i> How many type of governments are in Africa? <s> SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  "Africa" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> How many different forms of governments are there in Africa? <s> SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  "Africa" </s>
--SEPARATOR--
sqlite_sequence <c> seq <t> text <c> name <t> text </t> country <c> Region <t> text <c> Code2 <t> text <c> HeadOfState <t> text <c> Name <t> text <c> GNPOld <t> number <c> Continent <t> text <c> SurfaceArea <t> number <c> Population <t> number <c> Code <t> text <c> Capital <t> number <c> GovernmentForm <t> text <c> LocalName <t> text <c> LifeExpectancy <t> number <c> GNP <t> number <c> IndepYear <t> number </t> countrylanguage <c> IsOfficial <t> text <c> Percentage <t> number <c> CountryCode <t> text <c> Language <t> text </t> city <c> District <t> text <c> CountryCode <t> text <c> ID <t> number <c> Name <t> text <c> Population <t> number <i> How many different forms of governments are there in Africa? <s> SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  "Africa" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What is the total number of languages used in Aruba? <s> SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" </s>
--SEPARATOR--
sqlite_sequence <c> name <t> text <c> seq <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number </t> city <c> District <t> text <c> CountryCode <t> text <c> Name <t> text <c> Population <t> number <c> ID <t> number </t> country <c> HeadOfState <t> text <c> Name <t> text <c> GNPOld <t> number <c> IndepYear <t> number <c> Region <t> text <c> GovernmentForm <t> text <c> LocalName <t> text <c> SurfaceArea <t> number <c> Code2 <t> text <c> Continent <t> text <c> LifeExpectancy <t> number <c> Code <t> text <c> Population <t> number <c> Capital <t> number <c> GNP <t> number <i> What is the total number of languages used in Aruba? <s> SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> How many languages are spoken in Aruba? <s> SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" </s>
--SEPARATOR--
countrylanguage <c> Percentage <t> number <c> CountryCode <t> text <c> IsOfficial <t> text <c> Language <t> text </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code2 <t> text <c> GNP <t> number <c> Region <t> text <c> SurfaceArea <t> number <c> LocalName <t> text <c> Name <t> text <c> GNPOld <t> number <c> Continent <t> text <c> Code <t> text <c> HeadOfState <t> text <c> LifeExpectancy <t> number <c> IndepYear <t> number <c> GovernmentForm <t> text <c> Population <t> number <c> Capital <t> number </t> city <c> ID <t> number <c> Population <t> number <c> District <t> text <c> CountryCode <t> text <c> Name <t> text <i> How many languages are spoken in Aruba? <s> SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> How many official languages does Afghanistan have? <s> SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan" AND IsOfficial  =  "T" </s>
--SEPARATOR--
sqlite_sequence <c> seq <t> text <c> name <t> text </t> city <c> Population <t> number <c> ID <t> number <c> CountryCode <t> text <c> District <t> text <c> Name <t> text </t> country <c> Code2 <t> text <c> Capital <t> number <c> LifeExpectancy <t> number <c> Region <t> text <c> GNPOld <t> number <c> HeadOfState <t> text <c> GNP <t> number <c> Name <t> text <c> Code <t> text <c> IndepYear <t> number <c> GovernmentForm <t> text <c> SurfaceArea <t> number <c> Continent <t> text <c> Population <t> number <c> LocalName <t> text </t> countrylanguage <c> IsOfficial <t> text <c> Language <t> text <c> CountryCode <t> text <c> Percentage <t> number <i> How many official languages does Afghanistan have? <s> SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan" AND IsOfficial  =  "T" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> How many official languages are spoken in Afghanistan? <s> SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan" AND IsOfficial  =  "T" </s>
--SEPARATOR--
countrylanguage <c> IsOfficial <t> text <c> Percentage <t> number <c> CountryCode <t> text <c> Language <t> text </t> sqlite_sequence <c> seq <t> text <c> name <t> text </t> city <c> District <t> text <c> CountryCode <t> text <c> Population <t> number <c> ID <t> number <c> Name <t> text </t> country <c> GNPOld <t> number <c> HeadOfState <t> text <c> Continent <t> text <c> GovernmentForm <t> text <c> Code <t> text <c> Capital <t> number <c> SurfaceArea <t> number <c> Region <t> text <c> Code2 <t> text <c> IndepYear <t> number <c> Name <t> text <c> GNP <t> number <c> LifeExpectancy <t> number <c> Population <t> number <c> LocalName <t> text <i> How many official languages are spoken in Afghanistan? <s> SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan" AND IsOfficial  =  "T" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What is name of the country that speaks the largest number of languages? <s> SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1 </s>
--SEPARATOR--
countrylanguage <c> IsOfficial <t> text <c> CountryCode <t> text <c> Language <t> text <c> Percentage <t> number </t> sqlite_sequence <c> seq <t> text <c> name <t> text </t> city <c> Population <t> number <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text </t> country <c> Continent <t> text <c> Name <t> text <c> GovernmentForm <t> text <c> Capital <t> number <c> Code2 <t> text <c> GNPOld <t> number <c> HeadOfState <t> text <c> LifeExpectancy <t> number <c> Code <t> text <c> SurfaceArea <t> number <c> Population <t> number <c> GNP <t> number <c> Region <t> text <c> LocalName <t> text <c> IndepYear <t> number <i> What is name of the country that speaks the largest number of languages? <s> SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1 </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> Give the name of the nation that uses the greatest amount of languages. <s> SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1 </s>
--SEPARATOR--
countrylanguage <c> Percentage <t> number <c> Language <t> text <c> CountryCode <t> text <c> IsOfficial <t> text </t> country <c> Code <t> text <c> HeadOfState <t> text <c> SurfaceArea <t> number <c> Continent <t> text <c> GovernmentForm <t> text <c> Code2 <t> text <c> Capital <t> number <c> Population <t> number <c> GNP <t> number <c> Name <t> text <c> LocalName <t> text <c> LifeExpectancy <t> number <c> GNPOld <t> number <c> IndepYear <t> number <c> Region <t> text </t> city <c> ID <t> number <c> Name <t> text <c> District <t> text <c> Population <t> number <c> CountryCode <t> text </t> sqlite_sequence <c> seq <t> text <c> name <t> text <i> Give the name of the nation that uses the greatest amount of languages. <s> SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1 </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> Which continent has the most diverse languages? <s> SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1 </s>
--SEPARATOR--
city <c> Population <t> number <c> ID <t> number <c> District <t> text <c> Name <t> text <c> CountryCode <t> text </t> sqlite_sequence <c> seq <t> text <c> name <t> text </t> country <c> Capital <t> number <c> Continent <t> text <c> SurfaceArea <t> number <c> Code <t> text <c> Population <t> number <c> LocalName <t> text <c> Code2 <t> text <c> GNP <t> number <c> LifeExpectancy <t> number <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> IndepYear <t> number <c> Region <t> text <c> GNPOld <t> number <c> Name <t> text </t> countrylanguage <c> Percentage <t> number <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <i> Which continent has the most diverse languages? <s> SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1 </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> Which continent speaks the most languages? <s> SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1 </s>
--SEPARATOR--
country <c> Continent <t> text <c> LocalName <t> text <c> Code <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Code2 <t> text <c> Name <t> text <c> GNPOld <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> Region <t> text <c> HeadOfState <t> text <c> GovernmentForm <t> text <c> GNP <t> number <c> Capital <t> number </t> countrylanguage <c> IsOfficial <t> text <c> Language <t> text <c> CountryCode <t> text <c> Percentage <t> number </t> sqlite_sequence <c> seq <t> text <c> name <t> text </t> city <c> Population <t> number <c> CountryCode <t> text <c> Name <t> text <c> District <t> text <c> ID <t> number <i> Which continent speaks the most languages? <s> SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1 </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> How many countries speak both English and Dutch? <s> SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch") </s>
--SEPARATOR--
city <c> CountryCode <t> text <c> Name <t> text <c> District <t> text <c> ID <t> number <c> Population <t> number </t> country <c> Code2 <t> text <c> IndepYear <t> number <c> LocalName <t> text <c> GNPOld <t> number <c> LifeExpectancy <t> number <c> Name <t> text <c> GovernmentForm <t> text <c> GNP <t> number <c> Code <t> text <c> Continent <t> text <c> SurfaceArea <t> number <c> HeadOfState <t> text <c> Capital <t> number <c> Region <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> Percentage <t> number <c> IsOfficial <t> text <i> How many countries speak both English and Dutch? <s> SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch") </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What is the number of nations that use English and Dutch? <s> SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch") </s>
--SEPARATOR--
countrylanguage <c> Language <t> text <c> IsOfficial <t> text <c> CountryCode <t> text <c> Percentage <t> number </t> country <c> SurfaceArea <t> number <c> GNPOld <t> number <c> Capital <t> number <c> Code2 <t> text <c> Population <t> number <c> GovernmentForm <t> text <c> IndepYear <t> number <c> LifeExpectancy <t> number <c> HeadOfState <t> text <c> Continent <t> text <c> Code <t> text <c> GNP <t> number <c> LocalName <t> text <c> Region <t> text <c> Name <t> text </t> sqlite_sequence <c> seq <t> text <c> name <t> text </t> city <c> ID <t> number <c> District <t> text <c> Population <t> number <c> Name <t> text <c> CountryCode <t> text <i> What is the number of nations that use English and Dutch? <s> SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch") </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What are the names of nations speak both English and French? <s> SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" </s>
--SEPARATOR--
sqlite_sequence <c> seq <t> text <c> name <t> text </t> city <c> CountryCode <t> text <c> Name <t> text <c> ID <t> number <c> Population <t> number <c> District <t> text </t> country <c> GNP <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> LifeExpectancy <t> number <c> Name <t> text <c> Continent <t> text <c> IndepYear <t> number <c> HeadOfState <t> text <c> SurfaceArea <t> number <c> GNPOld <t> number <c> Capital <t> number <c> Code2 <t> text <c> Population <t> number <c> Code <t> text <c> Region <t> text </t> countrylanguage <c> Percentage <t> number <c> IsOfficial <t> text <c> Language <t> text <c> CountryCode <t> text <i> What are the names of nations speak both English and French? <s> SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> Give the names of nations that speak both English and French. <s> SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" </s>
--SEPARATOR--
country <c> GNPOld <t> number <c> Code2 <t> text <c> GovernmentForm <t> text <c> Region <t> text <c> Continent <t> text <c> Code <t> text <c> IndepYear <t> number <c> SurfaceArea <t> number <c> GNP <t> number <c> HeadOfState <t> text <c> Name <t> text <c> Population <t> number <c> LifeExpectancy <t> number <c> LocalName <t> text <c> Capital <t> number </t> sqlite_sequence <c> seq <t> text <c> name <t> text </t> countrylanguage <c> Percentage <t> number <c> Language <t> text <c> CountryCode <t> text <c> IsOfficial <t> text </t> city <c> Population <t> number <c> District <t> text <c> Name <t> text <c> ID <t> number <c> CountryCode <t> text <i> Give the names of nations that speak both English and French. <s> SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What are the names of nations where both English and French are official languages? <s> SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" AND T2.IsOfficial  =  "T" </s>
--SEPARATOR--
country <c> HeadOfState <t> text <c> LifeExpectancy <t> number <c> Code <t> text <c> Population <t> number <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Code2 <t> text <c> GNP <t> number <c> GovernmentForm <t> text <c> Capital <t> number <c> Continent <t> text <c> LocalName <t> text <c> Name <t> text <c> GNPOld <t> number <c> Region <t> text </t> city <c> Population <t> number <c> CountryCode <t> text <c> Name <t> text <c> District <t> text <c> ID <t> number </t> countrylanguage <c> Language <t> text <c> Percentage <t> number <c> IsOfficial <t> text <c> CountryCode <t> text </t> sqlite_sequence <c> seq <t> text <c> name <t> text <i> What are the names of nations where both English and French are official languages? <s> SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" AND T2.IsOfficial  =  "T" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> Give the names of countries with English and French as official languages. <s> SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" AND T2.IsOfficial  =  "T" </s>
--SEPARATOR--
country <c> HeadOfState <t> text <c> Name <t> text <c> Code <t> text <c> GNPOld <t> number <c> SurfaceArea <t> number <c> GovernmentForm <t> text <c> Capital <t> number <c> Region <t> text <c> LifeExpectancy <t> number <c> Code2 <t> text <c> Population <t> number <c> Continent <t> text <c> LocalName <t> text <c> GNP <t> number <c> IndepYear <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> countrylanguage <c> CountryCode <t> text <c> Percentage <t> number <c> IsOfficial <t> text <c> Language <t> text </t> city <c> Population <t> number <c> CountryCode <t> text <c> Name <t> text <c> ID <t> number <c> District <t> text <i> Give the names of countries with English and French as official languages. <s> SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" AND T2.IsOfficial  =  "T" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What is the number of distinct continents where Chinese is spoken? <s> SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese" </s>
--SEPARATOR--
sqlite_sequence <c> seq <t> text <c> name <t> text </t> country <c> GNPOld <t> number <c> Population <t> number <c> IndepYear <t> number <c> GNP <t> number <c> Capital <t> number <c> LocalName <t> text <c> Region <t> text <c> LifeExpectancy <t> number <c> Continent <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Code <t> text <c> Code2 <t> text <c> Name <t> text <c> SurfaceArea <t> number </t> city <c> CountryCode <t> text <c> Population <t> number <c> ID <t> number <c> District <t> text <c> Name <t> text </t> countrylanguage <c> IsOfficial <t> text <c> Percentage <t> number <c> CountryCode <t> text <c> Language <t> text <i> What is the number of distinct continents where Chinese is spoken? <s> SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> How many continents speak Chinese? <s> SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese" </s>
--SEPARATOR--
country <c> Code2 <t> text <c> Region <t> text <c> LifeExpectancy <t> number <c> GovernmentForm <t> text <c> Continent <t> text <c> Population <t> number <c> Name <t> text <c> HeadOfState <t> text <c> Code <t> text <c> IndepYear <t> number <c> GNP <t> number <c> Capital <t> number <c> SurfaceArea <t> number <c> LocalName <t> text <c> GNPOld <t> number </t> countrylanguage <c> CountryCode <t> text <c> Percentage <t> number <c> Language <t> text <c> IsOfficial <t> text </t> city <c> District <t> text <c> Name <t> text <c> CountryCode <t> text <c> Population <t> number <c> ID <t> number </t> sqlite_sequence <c> seq <t> text <c> name <t> text <i> How many continents speak Chinese? <s> SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What are the regions that use English or Dutch? <s> SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" OR T2.Language  =  "Dutch" </s>
--SEPARATOR--
countrylanguage <c> IsOfficial <t> text <c> Language <t> text <c> CountryCode <t> text <c> Percentage <t> number </t> country <c> Capital <t> number <c> HeadOfState <t> text <c> GNP <t> number <c> LifeExpectancy <t> number <c> Population <t> number <c> LocalName <t> text <c> Code2 <t> text <c> GovernmentForm <t> text <c> Region <t> text <c> Continent <t> text <c> IndepYear <t> number <c> Code <t> text <c> Name <t> text <c> GNPOld <t> number <c> SurfaceArea <t> number </t> sqlite_sequence <c> seq <t> text <c> name <t> text </t> city <c> Population <t> number <c> Name <t> text <c> CountryCode <t> text <c> ID <t> number <c> District <t> text <i> What are the regions that use English or Dutch? <s> SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" OR T2.Language  =  "Dutch" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> Which regions speak Dutch or English? <s> SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" OR T2.Language  =  "Dutch" </s>
--SEPARATOR--
country <c> IndepYear <t> number <c> LifeExpectancy <t> number <c> Capital <t> number <c> GNP <t> number <c> Continent <t> text <c> LocalName <t> text <c> HeadOfState <t> text <c> GovernmentForm <t> text <c> Code2 <t> text <c> Region <t> text <c> Name <t> text <c> Population <t> number <c> SurfaceArea <t> number <c> Code <t> text <c> GNPOld <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> countrylanguage <c> CountryCode <t> text <c> Percentage <t> number <c> IsOfficial <t> text <c> Language <t> text </t> city <c> ID <t> number <c> Population <t> number <c> CountryCode <t> text <c> District <t> text <c> Name <t> text <i> Which regions speak Dutch or English? <s> SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" OR T2.Language  =  "Dutch" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What are the countries where either English or Dutch is the official language ? <s> select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "english" and isofficial  =  "t" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "dutch" and isofficial  =  "t" </s>
--SEPARATOR--
countrylanguage <c> Language <t> text <c> Percentage <t> number <c> IsOfficial <t> text <c> CountryCode <t> text </t> country <c> LifeExpectancy <t> number <c> Code2 <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> Capital <t> number <c> Continent <t> text <c> Code <t> text <c> GNPOld <t> number <c> Population <t> number <c> Name <t> text <c> LocalName <t> text <c> HeadOfState <t> text <c> IndepYear <t> number <c> GNP <t> number <c> GovernmentForm <t> text </t> city <c> Name <t> text <c> ID <t> number <c> Population <t> number <c> CountryCode <t> text <c> District <t> text </t> sqlite_sequence <c> seq <t> text <c> name <t> text <i> What are the countries where either English or Dutch is the official language ? <s> select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "english" and isofficial  =  "t" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "dutch" and isofficial  =  "t" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> Which countries have either English or Dutch as an official language? <s> SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND IsOfficial  =  "T" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch" AND IsOfficial  =  "T" </s>
--SEPARATOR--
country <c> Name <t> text <c> HeadOfState <t> text <c> LifeExpectancy <t> number <c> GovernmentForm <t> text <c> Continent <t> text <c> Code <t> text <c> Population <t> number <c> SurfaceArea <t> number <c> Region <t> text <c> Capital <t> number <c> GNP <t> number <c> IndepYear <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> Code2 <t> text </t> countrylanguage <c> Language <t> text <c> IsOfficial <t> text <c> CountryCode <t> text <c> Percentage <t> number </t> city <c> ID <t> number <c> District <t> text <c> Population <t> number <c> Name <t> text <c> CountryCode <t> text </t> sqlite_sequence <c> seq <t> text <c> name <t> text <i> Which countries have either English or Dutch as an official language? <s> SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND IsOfficial  =  "T" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch" AND IsOfficial  =  "T" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> Which language is the most popular on the Asian continent? <s> SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1 </s>
--SEPARATOR--
city <c> District <t> text <c> Population <t> number <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text </t> countrylanguage <c> CountryCode <t> text <c> Percentage <t> number <c> IsOfficial <t> text <c> Language <t> text </t> country <c> GNP <t> number <c> Population <t> number <c> Code <t> text <c> LifeExpectancy <t> number <c> Region <t> text <c> IndepYear <t> number <c> Capital <t> number <c> HeadOfState <t> text <c> Name <t> text <c> Continent <t> text <c> Code2 <t> text <c> LocalName <t> text <c> GNPOld <t> number <c> SurfaceArea <t> number <c> GovernmentForm <t> text </t> sqlite_sequence <c> seq <t> text <c> name <t> text <i> Which language is the most popular on the Asian continent? <s> SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1 </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What is the language that is used by the largest number of Asian nations? <s> SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1 </s>
--SEPARATOR--
country <c> Code2 <t> text <c> LifeExpectancy <t> number <c> Region <t> text <c> HeadOfState <t> text <c> GovernmentForm <t> text <c> Capital <t> number <c> GNPOld <t> number <c> Population <t> number <c> GNP <t> number <c> Continent <t> text <c> Code <t> text <c> IndepYear <t> number <c> LocalName <t> text <c> SurfaceArea <t> number <c> Name <t> text </t> sqlite_sequence <c> seq <t> text <c> name <t> text </t> city <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number <c> ID <t> number </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What is the language that is used by the largest number of Asian nations? <s> SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1 </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> Which languages are spoken by only one country in republic governments? <s> SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  "Republic" GROUP BY T2.Language HAVING COUNT(*)  =  1 </s>
--SEPARATOR--
countrylanguage <c> IsOfficial <t> text <c> CountryCode <t> text <c> Language <t> text <c> Percentage <t> number </t> country <c> Region <t> text <c> Capital <t> number <c> GovernmentForm <t> text <c> IndepYear <t> number <c> Code2 <t> text <c> LocalName <t> text <c> Continent <t> text <c> GNPOld <t> number <c> Code <t> text <c> Name <t> text <c> Population <t> number <c> LifeExpectancy <t> number <c> SurfaceArea <t> number <c> HeadOfState <t> text <c> GNP <t> number </t> city <c> Population <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> ID <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text <i> Which languages are spoken by only one country in republic governments? <s> SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  "Republic" GROUP BY T2.Language HAVING COUNT(*)  =  1 </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What languages are only used by a single country with a republic government? <s> SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  "Republic" GROUP BY T2.Language HAVING COUNT(*)  =  1 </s>
--SEPARATOR--
country <c> Continent <t> text <c> GovernmentForm <t> text <c> GNPOld <t> number <c> Capital <t> number <c> Region <t> text <c> Code <t> text <c> GNP <t> number <c> IndepYear <t> number <c> LocalName <t> text <c> Code2 <t> text <c> SurfaceArea <t> number <c> LifeExpectancy <t> number <c> HeadOfState <t> text <c> Population <t> number <c> Name <t> text </t> countrylanguage <c> Percentage <t> number <c> IsOfficial <t> text <c> CountryCode <t> text <c> Language <t> text </t> sqlite_sequence <c> seq <t> text <c> name <t> text </t> city <c> ID <t> number <c> CountryCode <t> text <c> Name <t> text <c> District <t> text <c> Population <t> number <i> What languages are only used by a single country with a republic government? <s> SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  "Republic" GROUP BY T2.Language HAVING COUNT(*)  =  1 </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> Find the city with the largest population that uses English. <s> SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English" ORDER BY T1.Population DESC LIMIT 1 </s>
--SEPARATOR--
city <c> Name <t> text <c> District <t> text <c> ID <t> number <c> Population <t> number <c> CountryCode <t> text </t> countrylanguage <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <c> CountryCode <t> text </t> country <c> Population <t> number <c> Continent <t> text <c> IndepYear <t> number <c> Code2 <t> text <c> Name <t> text <c> GovernmentForm <t> text <c> Capital <t> number <c> HeadOfState <t> text <c> GNP <t> number <c> Code <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> LifeExpectancy <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text <i> Find the city with the largest population that uses English. <s> SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English" ORDER BY T1.Population DESC LIMIT 1 </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What is the most populace city that speaks English? <s> SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English" ORDER BY T1.Population DESC LIMIT 1 </s>
--SEPARATOR--
country <c> Code2 <t> text <c> GNP <t> number <c> Population <t> number <c> LocalName <t> text <c> GNPOld <t> number <c> Code <t> text <c> SurfaceArea <t> number <c> Continent <t> text <c> IndepYear <t> number <c> Name <t> text <c> Region <t> text <c> Capital <t> number <c> GovernmentForm <t> text <c> LifeExpectancy <t> number <c> HeadOfState <t> text </t> city <c> Population <t> number <c> CountryCode <t> text <c> ID <t> number <c> Name <t> text <c> District <t> text </t> countrylanguage <c> IsOfficial <t> text <c> Percentage <t> number <c> Language <t> text <c> CountryCode <t> text </t> sqlite_sequence <c> seq <t> text <c> name <t> text <i> What is the most populace city that speaks English? <s> SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English" ORDER BY T1.Population DESC LIMIT 1 </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> Find the name, population and expected life length of asian country with the largest area? <s> SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  "Asia" ORDER BY SurfaceArea DESC LIMIT 1 </s>
--SEPARATOR--
sqlite_sequence <c> seq <t> text <c> name <t> text </t> city <c> ID <t> number <c> CountryCode <t> text <c> Population <t> number <c> Name <t> text <c> District <t> text </t> countrylanguage <c> CountryCode <t> text <c> IsOfficial <t> text <c> Percentage <t> number <c> Language <t> text </t> country <c> IndepYear <t> number <c> Code2 <t> text <c> Capital <t> number <c> GNP <t> number <c> SurfaceArea <t> number <c> HeadOfState <t> text <c> Population <t> number <c> Name <t> text <c> Code <t> text <c> GNPOld <t> number <c> GovernmentForm <t> text <c> Continent <t> text <c> Region <t> text <c> LocalName <t> text <c> LifeExpectancy <t> number <i> Find the name, population and expected life length of asian country with the largest area? <s> SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  "Asia" ORDER BY SurfaceArea DESC LIMIT 1 </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What are the name, population, and life expectancy of the largest Asian country by land? <s> SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  "Asia" ORDER BY SurfaceArea DESC LIMIT 1 </s>
--SEPARATOR--
countrylanguage <c> Language <t> text <c> Percentage <t> number <c> IsOfficial <t> text <c> CountryCode <t> text </t> city <c> District <t> text <c> ID <t> number <c> Population <t> number <c> CountryCode <t> text <c> Name <t> text </t> country <c> Capital <t> number <c> LifeExpectancy <t> number <c> SurfaceArea <t> number <c> Name <t> text <c> Code2 <t> text <c> GNP <t> number <c> GNPOld <t> number <c> Code <t> text <c> LocalName <t> text <c> HeadOfState <t> text <c> Region <t> text <c> IndepYear <t> number <c> GovernmentForm <t> text <c> Population <t> number <c> Continent <t> text </t> sqlite_sequence <c> name <t> text <c> seq <t> text <i> What are the name, population, and life expectancy of the largest Asian country by land? <s> SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  "Asia" ORDER BY SurfaceArea DESC LIMIT 1 </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What is average life expectancy in the countries where English is not the official language? <s> SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T") </s>
--SEPARATOR--
city <c> Name <t> text <c> CountryCode <t> text <c> ID <t> number <c> Population <t> number <c> District <t> text </t> countrylanguage <c> Percentage <t> number <c> IsOfficial <t> text <c> Language <t> text <c> CountryCode <t> text </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> SurfaceArea <t> number <c> GNPOld <t> number <c> Region <t> text <c> LifeExpectancy <t> number <c> Code2 <t> text <c> IndepYear <t> number <c> Continent <t> text <c> LocalName <t> text <c> GNP <t> number <c> HeadOfState <t> text <c> GovernmentForm <t> text <c> Name <t> text <c> Capital <t> number <c> Code <t> text <c> Population <t> number <i> What is average life expectancy in the countries where English is not the official language? <s> SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T") </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> Give the mean life expectancy of countries in which English is not the official language. <s> SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T") </s>
--SEPARATOR--
countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> city <c> Name <t> text <c> ID <t> number <c> Population <t> number <c> CountryCode <t> text <c> District <t> text </t> country <c> Capital <t> number <c> SurfaceArea <t> number <c> Continent <t> text <c> Region <t> text <c> LifeExpectancy <t> number <c> Population <t> number <c> Name <t> text <c> GNP <t> number <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Code <t> text <c> LocalName <t> text <c> IndepYear <t> number <c> Code2 <t> text <c> GNPOld <t> number <i> Give the mean life expectancy of countries in which English is not the official language. <s> SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T") </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What is the total number of people living in the nations that do not use English? <s> SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English") </s>
--SEPARATOR--
country <c> Code2 <t> text <c> Name <t> text <c> LifeExpectancy <t> number <c> GNPOld <t> number <c> IndepYear <t> number <c> Capital <t> number <c> Code <t> text <c> Region <t> text <c> GNP <t> number <c> LocalName <t> text <c> HeadOfState <t> text <c> Population <t> number <c> GovernmentForm <t> text <c> Continent <t> text <c> SurfaceArea <t> number </t> countrylanguage <c> Percentage <t> number <c> IsOfficial <t> text <c> Language <t> text <c> CountryCode <t> text </t> sqlite_sequence <c> seq <t> text <c> name <t> text </t> city <c> Name <t> text <c> Population <t> number <c> ID <t> number <c> CountryCode <t> text <c> District <t> text <i> What is the total number of people living in the nations that do not use English? <s> SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English") </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> How many people live in countries that do not speak English? <s> SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English") </s>
--SEPARATOR--
sqlite_sequence <c> seq <t> text <c> name <t> text </t> country <c> Code2 <t> text <c> LocalName <t> text <c> Region <t> text <c> GovernmentForm <t> text <c> Capital <t> number <c> GNPOld <t> number <c> Population <t> number <c> HeadOfState <t> text <c> Name <t> text <c> GNP <t> number <c> IndepYear <t> number <c> Code <t> text <c> Continent <t> text <c> LifeExpectancy <t> number <c> SurfaceArea <t> number </t> countrylanguage <c> Percentage <t> number <c> Language <t> text <c> CountryCode <t> text <c> IsOfficial <t> text </t> city <c> ID <t> number <c> Population <t> number <c> District <t> text <c> Name <t> text <c> CountryCode <t> text <i> How many people live in countries that do not speak English? <s> SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English") </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What is the official language spoken in the country whose head of state is Beatrix? <s> SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix" AND T2.IsOfficial  =  "T" </s>
--SEPARATOR--
countrylanguage <c> Percentage <t> number <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text </t> sqlite_sequence <c> seq <t> text <c> name <t> text </t> city <c> District <t> text <c> ID <t> number <c> CountryCode <t> text <c> Population <t> number <c> Name <t> text </t> country <c> IndepYear <t> number <c> GNP <t> number <c> Code <t> text <c> Region <t> text <c> Capital <t> number <c> Continent <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Name <t> text <c> GNPOld <t> number <c> LocalName <t> text <c> Code2 <t> text <c> SurfaceArea <t> number <c> Population <t> number <c> LifeExpectancy <t> number <i> What is the official language spoken in the country whose head of state is Beatrix? <s> SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix" AND T2.IsOfficial  =  "T" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What is the official language used in the country the name of whose head of state is Beatrix. <s> SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix" AND T2.IsOfficial  =  "T" </s>
--SEPARATOR--
countrylanguage <c> Percentage <t> number <c> CountryCode <t> text <c> IsOfficial <t> text <c> Language <t> text </t> sqlite_sequence <c> seq <t> text <c> name <t> text </t> country <c> Code2 <t> text <c> Capital <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> IndepYear <t> number <c> SurfaceArea <t> number <c> Population <t> number <c> Continent <t> text <c> Region <t> text <c> LifeExpectancy <t> number <c> HeadOfState <t> text <c> Code <t> text <c> GNP <t> number <c> GovernmentForm <t> text <c> Name <t> text </t> city <c> CountryCode <t> text <c> District <t> text <c> Name <t> text <c> Population <t> number <c> ID <t> number <i> What is the official language used in the country the name of whose head of state is Beatrix. <s> SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix" AND T2.IsOfficial  =  "T" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What is the total number of unique official languages spoken in the countries that are founded before 1930? <s> SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  "T" </s>
--SEPARATOR--
country <c> LifeExpectancy <t> number <c> IndepYear <t> number <c> GNPOld <t> number <c> Code <t> text <c> Capital <t> number <c> SurfaceArea <t> number <c> LocalName <t> text <c> Code2 <t> text <c> HeadOfState <t> text <c> GNP <t> number <c> GovernmentForm <t> text <c> Population <t> number <c> Continent <t> text <c> Region <t> text <c> Name <t> text </t> city <c> Population <t> number <c> District <t> text <c> CountryCode <t> text <c> ID <t> number <c> Name <t> text </t> sqlite_sequence <c> seq <t> text <c> name <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> Percentage <t> number <c> IsOfficial <t> text <i> What is the total number of unique official languages spoken in the countries that are founded before 1930? <s> SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  "T" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> For the countries founded before 1930, what is the total number of distinct official languages? <s> SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  "T" </s>
--SEPARATOR--
city <c> Name <t> text <c> CountryCode <t> text <c> Population <t> number <c> ID <t> number <c> District <t> text </t> sqlite_sequence <c> seq <t> text <c> name <t> text </t> country <c> IndepYear <t> number <c> SurfaceArea <t> number <c> GNPOld <t> number <c> HeadOfState <t> text <c> LifeExpectancy <t> number <c> Population <t> number <c> Continent <t> text <c> Code2 <t> text <c> Region <t> text <c> GovernmentForm <t> text <c> LocalName <t> text <c> Code <t> text <c> Name <t> text <c> GNP <t> number <c> Capital <t> number </t> countrylanguage <c> Language <t> text <c> CountryCode <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> For the countries founded before 1930, what is the total number of distinct official languages? <s> SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  "T" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What are the countries that have greater surface area than any country in Europe? <s> SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe") </s>
--SEPARATOR--
sqlite_sequence <c> name <t> text <c> seq <t> text </t> countrylanguage <c> Language <t> text <c> Percentage <t> number <c> IsOfficial <t> text <c> CountryCode <t> text </t> city <c> ID <t> number <c> CountryCode <t> text <c> District <t> text <c> Population <t> number <c> Name <t> text </t> country <c> Continent <t> text <c> Code2 <t> text <c> Population <t> number <c> GovernmentForm <t> text <c> GNP <t> number <c> Name <t> text <c> GNPOld <t> number <c> IndepYear <t> number <c> Region <t> text <c> SurfaceArea <t> number <c> LocalName <t> text <c> Code <t> text <c> Capital <t> number <c> LifeExpectancy <t> number <c> HeadOfState <t> text <i> What are the countries that have greater surface area than any country in Europe? <s> SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe") </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> Which countries have greater area than that of any country in Europe? <s> SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe") </s>
--SEPARATOR--
countrylanguage <c> Percentage <t> number <c> CountryCode <t> text <c> IsOfficial <t> text <c> Language <t> text </t> sqlite_sequence <c> seq <t> text <c> name <t> text </t> country <c> Name <t> text <c> Capital <t> number <c> LocalName <t> text <c> Region <t> text <c> GNPOld <t> number <c> Code2 <t> text <c> Continent <t> text <c> SurfaceArea <t> number <c> GNP <t> number <c> IndepYear <t> number <c> Population <t> number <c> GovernmentForm <t> text <c> LifeExpectancy <t> number <c> Code <t> text <c> HeadOfState <t> text </t> city <c> ID <t> number <c> District <t> text <c> Population <t> number <c> CountryCode <t> text <c> Name <t> text <i> Which countries have greater area than that of any country in Europe? <s> SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe") </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What are the African countries that have a  population less than any country in Asia? <s> SELECT Name FROM country WHERE Continent  =  "Africa"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  "Asia") </s>
--SEPARATOR--
country <c> Capital <t> number <c> IndepYear <t> number <c> Continent <t> text <c> Population <t> number <c> HeadOfState <t> text <c> Code2 <t> text <c> Name <t> text <c> SurfaceArea <t> number <c> GNPOld <t> number <c> LifeExpectancy <t> number <c> LocalName <t> text <c> Code <t> text <c> GNP <t> number <c> Region <t> text <c> GovernmentForm <t> text </t> city <c> ID <t> number <c> Population <t> number <c> CountryCode <t> text <c> Name <t> text <c> District <t> text </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> countrylanguage <c> IsOfficial <t> text <c> CountryCode <t> text <c> Language <t> text <c> Percentage <t> number <i> What are the African countries that have a  population less than any country in Asia? <s> SELECT Name FROM country WHERE Continent  =  "Africa"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  "Asia") </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> Which African countries have a smaller population than that of any country in Asia? <s> SELECT Name FROM country WHERE Continent  =  "Africa"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  "Asia") </s>
--SEPARATOR--
countrylanguage <c> Percentage <t> number <c> IsOfficial <t> text <c> Language <t> text <c> CountryCode <t> text </t> country <c> Name <t> text <c> SurfaceArea <t> number <c> GNP <t> number <c> Region <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> LifeExpectancy <t> number <c> Code <t> text <c> GovernmentForm <t> text <c> IndepYear <t> number <c> LocalName <t> text <c> GNPOld <t> number <c> Code2 <t> text <c> Continent <t> text <c> Population <t> number </t> sqlite_sequence <c> seq <t> text <c> name <t> text </t> city <c> Population <t> number <c> CountryCode <t> text <c> District <t> text <c> Name <t> text <c> ID <t> number <i> Which African countries have a smaller population than that of any country in Asia? <s> SELECT Name FROM country WHERE Continent  =  "Africa"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  "Asia") </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> Which Asian countries have a population that is larger than any country in Africa? <s> SELECT Name FROM country WHERE Continent  =  "Asia"  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  "Africa") </s>
--SEPARATOR--
city <c> District <t> text <c> ID <t> number <c> CountryCode <t> text <c> Population <t> number <c> Name <t> text </t> sqlite_sequence <c> seq <t> text <c> name <t> text </t> countrylanguage <c> IsOfficial <t> text <c> Percentage <t> number <c> Language <t> text <c> CountryCode <t> text </t> country <c> IndepYear <t> number <c> Code2 <t> text <c> GovernmentForm <t> text <c> SurfaceArea <t> number <c> HeadOfState <t> text <c> GNP <t> number <c> Code <t> text <c> Capital <t> number <c> Population <t> number <c> Continent <t> text <c> LifeExpectancy <t> number <c> LocalName <t> text <c> GNPOld <t> number <c> Name <t> text <c> Region <t> text <i> Which Asian countries have a population that is larger than any country in Africa? <s> SELECT Name FROM country WHERE Continent  =  "Asia"  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  "Africa") </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What are the Asian countries which have a population larger than that of any country in Africa? <s> SELECT Name FROM country WHERE Continent  =  "Asia"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  "Africa") </s>
--SEPARATOR--
city <c> Name <t> text <c> ID <t> number <c> District <t> text <c> Population <t> number <c> CountryCode <t> text </t> countrylanguage <c> Percentage <t> number <c> Language <t> text <c> CountryCode <t> text <c> IsOfficial <t> text </t> sqlite_sequence <c> seq <t> text <c> name <t> text </t> country <c> Population <t> number <c> Region <t> text <c> LifeExpectancy <t> number <c> GNPOld <t> number <c> Name <t> text <c> Continent <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> GovernmentForm <t> text <c> Code <t> text <c> LocalName <t> text <c> Capital <t> number <c> GNP <t> number <c> HeadOfState <t> text <c> Code2 <t> text <i> What are the Asian countries which have a population larger than that of any country in Africa? <s> SELECT Name FROM country WHERE Continent  =  "Asia"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  "Africa") </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What are the country codes for countries that do not speak English? <s> SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English" </s>
--SEPARATOR--
countrylanguage <c> IsOfficial <t> text <c> Language <t> text <c> Percentage <t> number <c> CountryCode <t> text </t> city <c> Population <t> number <c> CountryCode <t> text <c> ID <t> number <c> Name <t> text <c> District <t> text </t> country <c> Capital <t> number <c> LifeExpectancy <t> number <c> SurfaceArea <t> number <c> Code2 <t> text <c> Population <t> number <c> GNP <t> number <c> GNPOld <t> number <c> HeadOfState <t> text <c> Region <t> text <c> GovernmentForm <t> text <c> Continent <t> text <c> IndepYear <t> number <c> LocalName <t> text <c> Name <t> text <c> Code <t> text </t> sqlite_sequence <c> seq <t> text <c> name <t> text <i> What are the country codes for countries that do not speak English? <s> SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> Return the country codes for countries that do not speak English. <s> SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English" </s>
--SEPARATOR--
country <c> Code2 <t> text <c> SurfaceArea <t> number <c> HeadOfState <t> text <c> Code <t> text <c> GovernmentForm <t> text <c> GNP <t> number <c> Capital <t> number <c> Region <t> text <c> LocalName <t> text <c> Continent <t> text <c> Population <t> number <c> LifeExpectancy <t> number <c> GNPOld <t> number <c> IndepYear <t> number <c> Name <t> text </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> countrylanguage <c> Percentage <t> number <c> IsOfficial <t> text <c> CountryCode <t> text <c> Language <t> text </t> city <c> CountryCode <t> text <c> Name <t> text <c> District <t> text <c> Population <t> number <c> ID <t> number <i> Return the country codes for countries that do not speak English. <s> SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What are the country codes of countries where people use languages other than English? <s> SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != "English" </s>
--SEPARATOR--
sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code2 <t> text <c> GNPOld <t> number <c> HeadOfState <t> text <c> LifeExpectancy <t> number <c> Continent <t> text <c> GNP <t> number <c> IndepYear <t> number <c> Population <t> number <c> Name <t> text <c> LocalName <t> text <c> GovernmentForm <t> text <c> SurfaceArea <t> number <c> Code <t> text <c> Capital <t> number <c> Region <t> text </t> city <c> Name <t> text <c> Population <t> number <c> District <t> text <c> CountryCode <t> text <c> ID <t> number </t> countrylanguage <c> IsOfficial <t> text <c> Language <t> text <c> Percentage <t> number <c> CountryCode <t> text <i> What are the country codes of countries where people use languages other than English? <s> SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != "English" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> Give the country codes for countries in which people speak langauges that are not English. <s> SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != "English" </s>
--SEPARATOR--
country <c> Capital <t> number <c> Population <t> number <c> Name <t> text <c> GNP <t> number <c> GNPOld <t> number <c> GovernmentForm <t> text <c> LocalName <t> text <c> SurfaceArea <t> number <c> Code <t> text <c> IndepYear <t> number <c> Region <t> text <c> Code2 <t> text <c> Continent <t> text <c> HeadOfState <t> text <c> LifeExpectancy <t> number </t> countrylanguage <c> CountryCode <t> text <c> Percentage <t> number <c> IsOfficial <t> text <c> Language <t> text </t> city <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number <c> ID <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text <i> Give the country codes for countries in which people speak langauges that are not English. <s> SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != "English" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What are the codes of the countries that do not speak English and whose government forms are not Republic? <s> SELECT Code FROM country WHERE GovernmentForm != "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English" </s>
--SEPARATOR--
countrylanguage <c> CountryCode <t> text <c> Percentage <t> number <c> IsOfficial <t> text <c> Language <t> text </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> GNPOld <t> number <c> GNP <t> number <c> Code <t> text <c> IndepYear <t> number <c> SurfaceArea <t> number <c> GovernmentForm <t> text <c> Capital <t> number <c> LocalName <t> text <c> Continent <t> text <c> Name <t> text <c> LifeExpectancy <t> number <c> Code2 <t> text <c> HeadOfState <t> text <c> Region <t> text <c> Population <t> number </t> city <c> District <t> text <c> Name <t> text <c> CountryCode <t> text <c> Population <t> number <c> ID <t> number <i> What are the codes of the countries that do not speak English and whose government forms are not Republic? <s> SELECT Code FROM country WHERE GovernmentForm != "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> Return the codes of countries that do not speak English and do not have Republics for governments. <s> SELECT Code FROM country WHERE GovernmentForm != "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English" </s>
--SEPARATOR--
country <c> LocalName <t> text <c> Name <t> text <c> Continent <t> text <c> LifeExpectancy <t> number <c> Code2 <t> text <c> HeadOfState <t> text <c> GNP <t> number <c> Code <t> text <c> Population <t> number <c> Capital <t> number <c> GovernmentForm <t> text <c> SurfaceArea <t> number <c> Region <t> text <c> IndepYear <t> number <c> GNPOld <t> number </t> city <c> Name <t> text <c> ID <t> number <c> District <t> text <c> Population <t> number <c> CountryCode <t> text </t> countrylanguage <c> Percentage <t> number <c> IsOfficial <t> text <c> Language <t> text <c> CountryCode <t> text </t> sqlite_sequence <c> name <t> text <c> seq <t> text <i> Return the codes of countries that do not speak English and do not have Republics for governments. <s> SELECT Code FROM country WHERE GovernmentForm != "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> Which cities are in European countries where English is not the official language? <s> SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English') </s>
--SEPARATOR--
city <c> ID <t> number <c> Population <t> number <c> District <t> text <c> CountryCode <t> text <c> Name <t> text </t> countrylanguage <c> CountryCode <t> text <c> IsOfficial <t> text <c> Percentage <t> number <c> Language <t> text </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Continent <t> text <c> LifeExpectancy <t> number <c> Name <t> text <c> IndepYear <t> number <c> Population <t> number <c> GNPOld <t> number <c> Code <t> text <c> Capital <t> number <c> HeadOfState <t> text <c> Region <t> text <c> LocalName <t> text <c> GovernmentForm <t> text <c> Code2 <t> text <c> SurfaceArea <t> number <c> GNP <t> number <i> Which cities are in European countries where English is not the official language? <s> SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English') </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What are the names of cities in Europe for which English is not the official language? <s> SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English') </s>
--SEPARATOR--
sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> GNPOld <t> number <c> Name <t> text <c> GNP <t> number <c> HeadOfState <t> text <c> Region <t> text <c> GovernmentForm <t> text <c> Code2 <t> text <c> Capital <t> number <c> SurfaceArea <t> number <c> Population <t> number <c> Continent <t> text <c> Code <t> text <c> LifeExpectancy <t> number <c> IndepYear <t> number <c> LocalName <t> text </t> city <c> CountryCode <t> text <c> ID <t> number <c> Population <t> number <c> Name <t> text <c> District <t> text </t> countrylanguage <c> IsOfficial <t> text <c> Percentage <t> number <c> CountryCode <t> text <c> Language <t> text <i> What are the names of cities in Europe for which English is not the official language? <s> SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English') </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> Which unique cities are in Asian countries where Chinese is the official language ? <s> select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  't' and t2.language  =  'chinese' and t1.continent  =  "asia" </s>
--SEPARATOR--
sqlite_sequence <c> seq <t> text <c> name <t> text </t> city <c> Name <t> text <c> CountryCode <t> text <c> ID <t> number <c> District <t> text <c> Population <t> number </t> country <c> Continent <t> text <c> HeadOfState <t> text <c> Region <t> text <c> Name <t> text <c> Code2 <t> text <c> SurfaceArea <t> number <c> LocalName <t> text <c> GNP <t> number <c> GovernmentForm <t> text <c> IndepYear <t> number <c> Code <t> text <c> Population <t> number <c> Capital <t> number <c> LifeExpectancy <t> number <c> GNPOld <t> number </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> Percentage <t> number <c> IsOfficial <t> text <i> Which unique cities are in Asian countries where Chinese is the official language ? <s> select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  't' and t2.language  =  'chinese' and t1.continent  =  "asia" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> Return the different names of cities that are in Asia and for which Chinese is the official language. <s> SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  "Asia" </s>
--SEPARATOR--
city <c> Population <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> ID <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Continent <t> text <c> IndepYear <t> number <c> Code <t> text <c> GovernmentForm <t> text <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> Name <t> text <c> HeadOfState <t> text <c> SurfaceArea <t> number <c> LifeExpectancy <t> number <c> Population <t> number <c> Code2 <t> text <c> Capital <t> number <c> Region <t> text </t> countrylanguage <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <c> CountryCode <t> text <i> Return the different names of cities that are in Asia and for which Chinese is the official language. <s> SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  "Asia" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What are the name, independence year, and surface area of the country with the smallest population? <s> SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1 </s>
--SEPARATOR--
sqlite_sequence <c> seq <t> text <c> name <t> text </t> country <c> GNP <t> number <c> HeadOfState <t> text <c> Region <t> text <c> Continent <t> text <c> GovernmentForm <t> text <c> Name <t> text <c> LocalName <t> text <c> GNPOld <t> number <c> LifeExpectancy <t> number <c> Population <t> number <c> Code2 <t> text <c> Capital <t> number <c> Code <t> text <c> IndepYear <t> number <c> SurfaceArea <t> number </t> countrylanguage <c> Language <t> text <c> CountryCode <t> text <c> IsOfficial <t> text <c> Percentage <t> number </t> city <c> District <t> text <c> ID <t> number <c> CountryCode <t> text <c> Name <t> text <c> Population <t> number <i> What are the name, independence year, and surface area of the country with the smallest population? <s> SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1 </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> Give the name, year of independence, and surface area of the country that has the lowest population. <s> SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1 </s>
--SEPARATOR--
sqlite_sequence <c> name <t> text <c> seq <t> text </t> countrylanguage <c> CountryCode <t> text <c> IsOfficial <t> text <c> Percentage <t> number <c> Language <t> text </t> city <c> CountryCode <t> text <c> District <t> text <c> Name <t> text <c> ID <t> number <c> Population <t> number </t> country <c> LocalName <t> text <c> Continent <t> text <c> HeadOfState <t> text <c> IndepYear <t> number <c> SurfaceArea <t> number <c> GovernmentForm <t> text <c> LifeExpectancy <t> number <c> Region <t> text <c> Population <t> number <c> Name <t> text <c> Code <t> text <c> Capital <t> number <c> GNPOld <t> number <c> GNP <t> number <c> Code2 <t> text <i> Give the name, year of independence, and surface area of the country that has the lowest population. <s> SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1 </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What are the population, name and leader of the country with the largest area? <s> SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1 </s>
--SEPARATOR--
sqlite_sequence <c> seq <t> text <c> name <t> text </t> city <c> ID <t> number <c> CountryCode <t> text <c> Name <t> text <c> District <t> text <c> Population <t> number </t> country <c> LifeExpectancy <t> number <c> Continent <t> text <c> Capital <t> number <c> SurfaceArea <t> number <c> GovernmentForm <t> text <c> Code <t> text <c> Population <t> number <c> LocalName <t> text <c> IndepYear <t> number <c> HeadOfState <t> text <c> GNPOld <t> number <c> Region <t> text <c> Name <t> text <c> GNP <t> number <c> Code2 <t> text </t> countrylanguage <c> Percentage <t> number <c> CountryCode <t> text <c> IsOfficial <t> text <c> Language <t> text <i> What are the population, name and leader of the country with the largest area? <s> SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1 </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> Give the name, population, and head of state for the country that has the largest area. <s> SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1 </s>
--SEPARATOR--
sqlite_sequence <c> seq <t> text <c> name <t> text </t> city <c> CountryCode <t> text <c> Name <t> text <c> ID <t> number <c> District <t> text <c> Population <t> number </t> countrylanguage <c> CountryCode <t> text <c> Percentage <t> number <c> IsOfficial <t> text <c> Language <t> text </t> country <c> Population <t> number <c> SurfaceArea <t> number <c> LocalName <t> text <c> IndepYear <t> number <c> GNP <t> number <c> Continent <t> text <c> LifeExpectancy <t> number <c> GNPOld <t> number <c> Name <t> text <c> Capital <t> number <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Region <t> text <c> Code2 <t> text <c> Code <t> text <i> Give the name, population, and head of state for the country that has the largest area. <s> SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1 </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> Return the country name and the numbers of languages spoken for each country that speaks at least 3 languages. <s> SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2 </s>
--SEPARATOR--
sqlite_sequence <c> name <t> text <c> seq <t> text </t> city <c> CountryCode <t> text <c> Population <t> number <c> ID <t> number <c> Name <t> text <c> District <t> text </t> country <c> LocalName <t> text <c> SurfaceArea <t> number <c> Capital <t> number <c> GovernmentForm <t> text <c> GNPOld <t> number <c> GNP <t> number <c> LifeExpectancy <t> number <c> IndepYear <t> number <c> Population <t> number <c> Code2 <t> text <c> HeadOfState <t> text <c> Code <t> text <c> Name <t> text <c> Region <t> text <c> Continent <t> text </t> countrylanguage <c> CountryCode <t> text <c> Percentage <t> number <c> Language <t> text <c> IsOfficial <t> text <i> Return the country name and the numbers of languages spoken for each country that speaks at least 3 languages. <s> SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2 </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What are the names of countries that speak more than 2 languages, as well as how many languages they speak? <s> SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2 </s>
--SEPARATOR--
city <c> ID <t> number <c> District <t> text <c> Population <t> number <c> CountryCode <t> text <c> Name <t> text </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> SurfaceArea <t> number <c> Population <t> number <c> GNPOld <t> number <c> Capital <t> number <c> LocalName <t> text <c> Code2 <t> text <c> GovernmentForm <t> text <c> LifeExpectancy <t> number <c> Continent <t> text <c> Region <t> text <c> Code <t> text <c> Name <t> text <c> IndepYear <t> number <c> HeadOfState <t> text <c> GNP <t> number </t> countrylanguage <c> IsOfficial <t> text <c> Language <t> text <c> CountryCode <t> text <c> Percentage <t> number <i> What are the names of countries that speak more than 2 languages, as well as how many languages they speak? <s> SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2 </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> Find the number of cities in each district whose population is greater than the average population of cities? <s> SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District </s>
--SEPARATOR--
city <c> Population <t> number <c> ID <t> number <c> Name <t> text <c> District <t> text <c> CountryCode <t> text </t> country <c> Code <t> text <c> GovernmentForm <t> text <c> Name <t> text <c> IndepYear <t> number <c> GNP <t> number <c> Capital <t> number <c> Continent <t> text <c> Population <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> LifeExpectancy <t> number <c> HeadOfState <t> text <c> Code2 <t> text </t> sqlite_sequence <c> seq <t> text <c> name <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> Percentage <t> number <c> IsOfficial <t> text <i> Find the number of cities in each district whose population is greater than the average population of cities? <s> SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> How many cities in each district have a population that is above the average population across all cities? <s> SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District </s>
--SEPARATOR--
sqlite_sequence <c> seq <t> text <c> name <t> text </t> country <c> SurfaceArea <t> number <c> Code <t> text <c> GovernmentForm <t> text <c> Name <t> text <c> Population <t> number <c> HeadOfState <t> text <c> GNPOld <t> number <c> Continent <t> text <c> Code2 <t> text <c> Capital <t> number <c> LifeExpectancy <t> number <c> IndepYear <t> number <c> GNP <t> number <c> LocalName <t> text <c> Region <t> text </t> countrylanguage <c> IsOfficial <t> text <c> CountryCode <t> text <c> Percentage <t> number <c> Language <t> text </t> city <c> Name <t> text <c> CountryCode <t> text <c> Population <t> number <c> District <t> text <c> ID <t> number <i> How many cities in each district have a population that is above the average population across all cities? <s> SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> Find the government form name and total population for each government form whose average life expectancy is longer than 72. <s> SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72 </s>
--SEPARATOR--
sqlite_sequence <c> seq <t> text <c> name <t> text </t> countrylanguage <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <c> CountryCode <t> text </t> country <c> Region <t> text <c> Population <t> number <c> Code2 <t> text <c> LifeExpectancy <t> number <c> IndepYear <t> number <c> HeadOfState <t> text <c> Code <t> text <c> LocalName <t> text <c> Name <t> text <c> Continent <t> text <c> GNP <t> number <c> Capital <t> number <c> GNPOld <t> number <c> SurfaceArea <t> number <c> GovernmentForm <t> text </t> city <c> CountryCode <t> text <c> Name <t> text <c> District <t> text <c> ID <t> number <c> Population <t> number <i> Find the government form name and total population for each government form whose average life expectancy is longer than 72. <s> SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72 </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72? <s> SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72 </s>
--SEPARATOR--
country <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> Code2 <t> text <c> Capital <t> number <c> LocalName <t> text <c> Continent <t> text <c> Region <t> text <c> Name <t> text <c> Code <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number </t> countrylanguage <c> CountryCode <t> text <c> IsOfficial <t> text <c> Percentage <t> number <c> Language <t> text </t> sqlite_sequence <c> seq <t> text <c> name <t> text </t> city <c> CountryCode <t> text <c> District <t> text <c> ID <t> number <c> Name <t> text <c> Population <t> number <i> What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72? <s> SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72 </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 72? <s> SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72 </s>
--SEPARATOR--
countrylanguage <c> Language <t> text <c> CountryCode <t> text <c> Percentage <t> number <c> IsOfficial <t> text </t> city <c> District <t> text <c> CountryCode <t> text <c> Name <t> text <c> Population <t> number <c> ID <t> number </t> sqlite_sequence <c> seq <t> text <c> name <t> text </t> country <c> GNPOld <t> number <c> LocalName <t> text <c> Name <t> text <c> LifeExpectancy <t> number <c> SurfaceArea <t> number <c> Region <t> text <c> GovernmentForm <t> text <c> Population <t> number <c> HeadOfState <t> text <c> IndepYear <t> number <c> Continent <t> text <c> Capital <t> number <c> GNP <t> number <c> Code <t> text <c> Code2 <t> text <i> Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 72? <s> SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72 </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What are the different continents and the total popuation and average life expectancy corresponding to each, for continents that have an average life expectancy less than 72? <s> SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72 </s>
--SEPARATOR--
country <c> Population <t> number <c> Code2 <t> text <c> GovernmentForm <t> text <c> Code <t> text <c> HeadOfState <t> text <c> SurfaceArea <t> number <c> LifeExpectancy <t> number <c> LocalName <t> text <c> Continent <t> text <c> GNP <t> number <c> IndepYear <t> number <c> GNPOld <t> number <c> Name <t> text <c> Capital <t> number <c> Region <t> text </t> city <c> ID <t> number <c> CountryCode <t> text <c> Name <t> text <c> Population <t> number <c> District <t> text </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> countrylanguage <c> CountryCode <t> text <c> IsOfficial <t> text <c> Percentage <t> number <c> Language <t> text <i> What are the different continents and the total popuation and average life expectancy corresponding to each, for continents that have an average life expectancy less than 72? <s> SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72 </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What are the names and areas of countries with the top 5 largest area? <s> SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5 </s>
--SEPARATOR--
countrylanguage <c> Percentage <t> number <c> CountryCode <t> text <c> IsOfficial <t> text <c> Language <t> text </t> country <c> HeadOfState <t> text <c> Capital <t> number <c> GNP <t> number <c> Region <t> text <c> GNPOld <t> number <c> IndepYear <t> number <c> Code2 <t> text <c> GovernmentForm <t> text <c> LifeExpectancy <t> number <c> Population <t> number <c> Code <t> text <c> LocalName <t> text <c> Name <t> text <c> Continent <t> text <c> SurfaceArea <t> number </t> city <c> District <t> text <c> Name <t> text <c> ID <t> number <c> CountryCode <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text <i> What are the names and areas of countries with the top 5 largest area? <s> SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5 </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> Return the names and surface areas of the 5 largest countries. <s> SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5 </s>
--SEPARATOR--
country <c> IndepYear <t> number <c> Region <t> text <c> Name <t> text <c> GNP <t> number <c> HeadOfState <t> text <c> Continent <t> text <c> Code <t> text <c> GNPOld <t> number <c> Population <t> number <c> Capital <t> number <c> LocalName <t> text <c> Code2 <t> text <c> LifeExpectancy <t> number <c> GovernmentForm <t> text <c> SurfaceArea <t> number </t> countrylanguage <c> Language <t> text <c> Percentage <t> number <c> IsOfficial <t> text <c> CountryCode <t> text </t> city <c> ID <t> number <c> District <t> text <c> Population <t> number <c> CountryCode <t> text <c> Name <t> text </t> sqlite_sequence <c> name <t> text <c> seq <t> text <i> Return the names and surface areas of the 5 largest countries. <s> SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5 </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What are names of countries with the top 3 largest population? <s> SELECT Name FROM country ORDER BY Population DESC LIMIT 3 </s>
--SEPARATOR--
city <c> ID <t> number <c> District <t> text <c> Population <t> number <c> CountryCode <t> text <c> Name <t> text </t> country <c> LifeExpectancy <t> number <c> Name <t> text <c> HeadOfState <t> text <c> IndepYear <t> number <c> GNPOld <t> number <c> Continent <t> text <c> GovernmentForm <t> text <c> LocalName <t> text <c> Population <t> number <c> Capital <t> number <c> Code <t> text <c> SurfaceArea <t> number <c> Region <t> text <c> Code2 <t> text <c> GNP <t> number </t> countrylanguage <c> IsOfficial <t> text <c> CountryCode <t> text <c> Language <t> text <c> Percentage <t> number </t> sqlite_sequence <c> seq <t> text <c> name <t> text <i> What are names of countries with the top 3 largest population? <s> SELECT Name FROM country ORDER BY Population DESC LIMIT 3 </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> Return the names of the 3 most populated countries. <s> SELECT Name FROM country ORDER BY Population DESC LIMIT 3 </s>
--SEPARATOR--
countrylanguage <c> Language <t> text <c> Percentage <t> number <c> CountryCode <t> text <c> IsOfficial <t> text </t> country <c> Continent <t> text <c> LifeExpectancy <t> number <c> GNPOld <t> number <c> Region <t> text <c> Population <t> number <c> Capital <t> number <c> GNP <t> number <c> IndepYear <t> number <c> Name <t> text <c> SurfaceArea <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> Code <t> text <c> Code2 <t> text <c> HeadOfState <t> text </t> city <c> District <t> text <c> Population <t> number <c> Name <t> text <c> CountryCode <t> text <c> ID <t> number </t> sqlite_sequence <c> seq <t> text <c> name <t> text <i> Return the names of the 3 most populated countries. <s> SELECT Name FROM country ORDER BY Population DESC LIMIT 3 </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What are the names of the nations with the 3 lowest populations? <s> SELECT Name FROM country ORDER BY Population ASC LIMIT 3 </s>
--SEPARATOR--
country <c> Continent <t> text <c> IndepYear <t> number <c> Population <t> number <c> Name <t> text <c> GovernmentForm <t> text <c> LifeExpectancy <t> number <c> Code2 <t> text <c> Code <t> text <c> LocalName <t> text <c> Capital <t> number <c> HeadOfState <t> text <c> Region <t> text <c> GNP <t> number <c> GNPOld <t> number <c> SurfaceArea <t> number </t> countrylanguage <c> Percentage <t> number <c> Language <t> text <c> CountryCode <t> text <c> IsOfficial <t> text </t> sqlite_sequence <c> seq <t> text <c> name <t> text </t> city <c> Population <t> number <c> ID <t> number <c> District <t> text <c> CountryCode <t> text <c> Name <t> text <i> What are the names of the nations with the 3 lowest populations? <s> SELECT Name FROM country ORDER BY Population ASC LIMIT 3 </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> Return the names of the 3 countries with the fewest people. <s> SELECT Name FROM country ORDER BY Population ASC LIMIT 3 </s>
--SEPARATOR--
city <c> ID <t> number <c> Population <t> number <c> District <t> text <c> CountryCode <t> text <c> Name <t> text </t> sqlite_sequence <c> seq <t> text <c> name <t> text </t> country <c> LocalName <t> text <c> Code2 <t> text <c> SurfaceArea <t> number <c> GovernmentForm <t> text <c> GNP <t> number <c> Capital <t> number <c> GNPOld <t> number <c> Region <t> text <c> Continent <t> text <c> Population <t> number <c> HeadOfState <t> text <c> LifeExpectancy <t> number <c> Name <t> text <c> IndepYear <t> number <c> Code <t> text </t> countrylanguage <c> CountryCode <t> text <c> Percentage <t> number <c> IsOfficial <t> text <c> Language <t> text <i> Return the names of the 3 countries with the fewest people. <s> SELECT Name FROM country ORDER BY Population ASC LIMIT 3 </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> how many countries are in Asia? <s> SELECT count(*) FROM country WHERE continent  =  "Asia" </s>
--SEPARATOR--
city <c> District <t> text <c> Name <t> text <c> CountryCode <t> text <c> ID <t> number <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Continent <t> text <c> GovernmentForm <t> text <c> Name <t> text <c> Code2 <t> text <c> IndepYear <t> number <c> GNP <t> number <c> Capital <t> number <c> LocalName <t> text <c> LifeExpectancy <t> number <c> Code <t> text <c> SurfaceArea <t> number <c> GNPOld <t> number <c> Population <t> number <c> Region <t> text <c> HeadOfState <t> text </t> countrylanguage <c> Language <t> text <c> Percentage <t> number <c> IsOfficial <t> text <c> CountryCode <t> text <i> how many countries are in Asia? <s> SELECT count(*) FROM country WHERE continent  =  "Asia" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> Count the number of countries in Asia. <s> SELECT count(*) FROM country WHERE continent  =  "Asia" </s>
--SEPARATOR--
countrylanguage <c> IsOfficial <t> text <c> Language <t> text <c> Percentage <t> number <c> CountryCode <t> text </t> country <c> Name <t> text <c> LocalName <t> text <c> GNP <t> number <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> Capital <t> number <c> Continent <t> text <c> GNPOld <t> number <c> HeadOfState <t> text <c> Code <t> text <c> Region <t> text <c> GovernmentForm <t> text <c> Code2 <t> text <c> LifeExpectancy <t> number </t> city <c> CountryCode <t> text <c> Name <t> text <c> ID <t> number <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> seq <t> text <c> name <t> text <i> Count the number of countries in Asia. <s> SELECT count(*) FROM country WHERE continent  =  "Asia" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What are the names of the countries that are in the continent of Europe and have a population of 80000? <s> SELECT Name FROM country WHERE continent  =  "Europe" AND Population  =  "80000" </s>
--SEPARATOR--
sqlite_sequence <c> name <t> text <c> seq <t> text </t> countrylanguage <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <c> CountryCode <t> text </t> city <c> CountryCode <t> text <c> District <t> text <c> ID <t> number <c> Name <t> text <c> Population <t> number </t> country <c> Region <t> text <c> Name <t> text <c> HeadOfState <t> text <c> GNPOld <t> number <c> Capital <t> number <c> Code <t> text <c> IndepYear <t> number <c> Population <t> number <c> Code2 <t> text <c> LocalName <t> text <c> GovernmentForm <t> text <c> GNP <t> number <c> SurfaceArea <t> number <c> Continent <t> text <c> LifeExpectancy <t> number <i> What are the names of the countries that are in the continent of Europe and have a population of 80000? <s> SELECT Name FROM country WHERE continent  =  "Europe" AND Population  =  "80000" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> Give the names of countries that are in Europe and have a population equal to 80000. <s> SELECT Name FROM country WHERE continent  =  "Europe" AND Population  =  "80000" </s>
--SEPARATOR--
sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Population <t> number <c> GNP <t> number <c> HeadOfState <t> text <c> GNPOld <t> number <c> LocalName <t> text <c> Code <t> text <c> IndepYear <t> number <c> LifeExpectancy <t> number <c> SurfaceArea <t> number <c> Name <t> text <c> Region <t> text <c> GovernmentForm <t> text <c> Code2 <t> text <c> Capital <t> number <c> Continent <t> text </t> countrylanguage <c> Percentage <t> number <c> Language <t> text <c> CountryCode <t> text <c> IsOfficial <t> text </t> city <c> CountryCode <t> text <c> District <t> text <c> ID <t> number <c> Population <t> number <c> Name <t> text <i> Give the names of countries that are in Europe and have a population equal to 80000. <s> SELECT Name FROM country WHERE continent  =  "Europe" AND Population  =  "80000" </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What is the total population and average area of countries in the continent of North America whose area is bigger than 3000 ? <s> select sum(population) ,  avg(surfacearea) from country where continent  =  "north america" and surfacearea  >  3000 </s>
--SEPARATOR--
city <c> CountryCode <t> text <c> ID <t> number <c> Population <t> number <c> District <t> text <c> Name <t> text </t> countrylanguage <c> IsOfficial <t> text <c> CountryCode <t> text <c> Language <t> text <c> Percentage <t> number </t> country <c> IndepYear <t> number <c> LocalName <t> text <c> GNPOld <t> number <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> LifeExpectancy <t> number <c> SurfaceArea <t> number <c> Name <t> text <c> Code <t> text <c> Continent <t> text <c> GNP <t> number <c> Population <t> number <c> Region <t> text <c> Capital <t> number <c> Code2 <t> text </t> sqlite_sequence <c> seq <t> text <c> name <t> text <i> What is the total population and average area of countries in the continent of North America whose area is bigger than 3000 ? <s> select sum(population) ,  avg(surfacearea) from country where continent  =  "north america" and surfacearea  >  3000 </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> Give the total population and average surface area corresponding to countries in North America that have a surface area greater than 3000 . <s> select sum(population) ,  avg(surfacearea) from country where continent  =  "north america" and surfacearea  >  3000 </s>
--SEPARATOR--
sqlite_sequence <c> name <t> text <c> seq <t> text </t> city <c> CountryCode <t> text <c> District <t> text <c> Population <t> number <c> ID <t> number <c> Name <t> text </t> countrylanguage <c> CountryCode <t> text <c> IsOfficial <t> text <c> Percentage <t> number <c> Language <t> text </t> country <c> GNPOld <t> number <c> Code <t> text <c> Code2 <t> text <c> GovernmentForm <t> text <c> LocalName <t> text <c> GNP <t> number <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> HeadOfState <t> text <c> Capital <t> number <c> Population <t> number <c> Name <t> text <c> LifeExpectancy <t> number <c> Continent <t> text <i> Give the total population and average surface area corresponding to countries in North America that have a surface area greater than 3000 . <s> select sum(population) ,  avg(surfacearea) from country where continent  =  "north america" and surfacearea  >  3000 </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What are the cities whose population is between 160000 and 900000? <s> SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000 </s>
--SEPARATOR--
sqlite_sequence <c> seq <t> text <c> name <t> text </t> country <c> Name <t> text <c> IndepYear <t> number <c> GNPOld <t> number <c> GovernmentForm <t> text <c> LocalName <t> text <c> Code2 <t> text <c> LifeExpectancy <t> number <c> SurfaceArea <t> number <c> Code <t> text <c> GNP <t> number <c> Continent <t> text <c> Region <t> text <c> Capital <t> number <c> HeadOfState <t> text <c> Population <t> number </t> countrylanguage <c> IsOfficial <t> text <c> Percentage <t> number <c> CountryCode <t> text <c> Language <t> text </t> city <c> District <t> text <c> Name <t> text <c> CountryCode <t> text <c> ID <t> number <c> Population <t> number <i> What are the cities whose population is between 160000 and 900000? <s> SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000 </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> Return the names of cities that have a population between 160000 and 900000 . <s> select name from city where population between 160000 and 900000 </s>
--SEPARATOR--
countrylanguage <c> IsOfficial <t> text <c> Percentage <t> number <c> Language <t> text <c> CountryCode <t> text </t> country <c> SurfaceArea <t> number <c> Name <t> text <c> Region <t> text <c> LocalName <t> text <c> Code <t> text <c> GovernmentForm <t> text <c> Population <t> number <c> Continent <t> text <c> GNP <t> number <c> GNPOld <t> number <c> Code2 <t> text <c> LifeExpectancy <t> number <c> Capital <t> number <c> IndepYear <t> number <c> HeadOfState <t> text </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> city <c> ID <t> number <c> Name <t> text <c> District <t> text <c> Population <t> number <c> CountryCode <t> text <i> Return the names of cities that have a population between 160000 and 900000 . <s> select name from city where population between 160000 and 900000 </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> Which language is spoken by the largest number of countries? <s> SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
countrylanguage <c> Language <t> text <c> IsOfficial <t> text <c> CountryCode <t> text <c> Percentage <t> number </t> country <c> HeadOfState <t> text <c> GNPOld <t> number <c> Code <t> text <c> GovernmentForm <t> text <c> Continent <t> text <c> LifeExpectancy <t> number <c> Capital <t> number <c> Population <t> number <c> LocalName <t> text <c> Name <t> text <c> Region <t> text <c> IndepYear <t> number <c> GNP <t> number <c> Code2 <t> text <c> SurfaceArea <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> city <c> District <t> text <c> CountryCode <t> text <c> Population <t> number <c> ID <t> number <c> Name <t> text <i> Which language is spoken by the largest number of countries? <s> SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> Give the language that is spoken in the most countries. <s> SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
country <c> HeadOfState <t> text <c> Capital <t> number <c> Region <t> text <c> SurfaceArea <t> number <c> Continent <t> text <c> GNP <t> number <c> Code2 <t> text <c> Code <t> text <c> GNPOld <t> number <c> LifeExpectancy <t> number <c> Name <t> text <c> LocalName <t> text <c> IndepYear <t> number <c> Population <t> number <c> GovernmentForm <t> text </t> city <c> Population <t> number <c> CountryCode <t> text <c> Name <t> text <c> ID <t> number <c> District <t> text </t> countrylanguage <c> Language <t> text <c> Percentage <t> number <c> CountryCode <t> text <c> IsOfficial <t> text </t> sqlite_sequence <c> name <t> text <c> seq <t> text <i> Give the language that is spoken in the most countries. <s> SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What is the language spoken by the largest percentage of people in each country? <s> SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode </s>
--SEPARATOR--
country <c> Code <t> text <c> Region <t> text <c> LifeExpectancy <t> number <c> Code2 <t> text <c> Continent <t> text <c> LocalName <t> text <c> Population <t> number <c> GNP <t> number <c> HeadOfState <t> text <c> GovernmentForm <t> text <c> Capital <t> number <c> Name <t> text <c> SurfaceArea <t> number <c> GNPOld <t> number <c> IndepYear <t> number </t> city <c> Name <t> text <c> ID <t> number <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> seq <t> text <c> name <t> text </t> countrylanguage <c> Percentage <t> number <c> IsOfficial <t> text <c> CountryCode <t> text <c> Language <t> text <i> What is the language spoken by the largest percentage of people in each country? <s> SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What are the country codes of the different countries, and what are the languages spoken by the greatest percentage of people for each? <s> SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode </s>
--SEPARATOR--
sqlite_sequence <c> seq <t> text <c> name <t> text </t> country <c> LocalName <t> text <c> IndepYear <t> number <c> Name <t> text <c> HeadOfState <t> text <c> GovernmentForm <t> text <c> Population <t> number <c> SurfaceArea <t> number <c> GNP <t> number <c> Continent <t> text <c> Code <t> text <c> LifeExpectancy <t> number <c> Code2 <t> text <c> Capital <t> number <c> GNPOld <t> number <c> Region <t> text </t> countrylanguage <c> IsOfficial <t> text <c> Percentage <t> number <c> Language <t> text <c> CountryCode <t> text </t> city <c> District <t> text <c> Name <t> text <c> ID <t> number <c> Population <t> number <c> CountryCode <t> text <i> What are the country codes of the different countries, and what are the languages spoken by the greatest percentage of people for each? <s> SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What is the total number of countries where Spanish is spoken by the largest percentage of people? <s> SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> District <t> text <c> CountryCode <t> text <c> Population <t> number </t> sqlite_sequence <c> seq <t> text <c> name <t> text </t> country <c> IndepYear <t> number <c> Capital <t> number <c> Continent <t> text <c> GNPOld <t> number <c> Population <t> number <c> GovernmentForm <t> text <c> Code <t> text <c> HeadOfState <t> text <c> Code2 <t> text <c> GNP <t> number <c> LifeExpectancy <t> number <c> Region <t> text <c> SurfaceArea <t> number <c> Name <t> text <c> LocalName <t> text </t> countrylanguage <c> IsOfficial <t> text <c> Percentage <t> number <c> CountryCode <t> text <c> Language <t> text <i> What is the total number of countries where Spanish is spoken by the largest percentage of people? <s> SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> Count the number of countries for which Spanish is the predominantly spoken language. <s> SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode </s>
--SEPARATOR--
countrylanguage <c> Language <t> text <c> IsOfficial <t> text <c> CountryCode <t> text <c> Percentage <t> number </t> country <c> SurfaceArea <t> number <c> GNPOld <t> number <c> Continent <t> text <c> Population <t> number <c> IndepYear <t> number <c> Name <t> text <c> LifeExpectancy <t> number <c> GovernmentForm <t> text <c> Capital <t> number <c> LocalName <t> text <c> GNP <t> number <c> Code2 <t> text <c> HeadOfState <t> text <c> Region <t> text <c> Code <t> text </t> city <c> CountryCode <t> text <c> Population <t> number <c> District <t> text <c> Name <t> text <c> ID <t> number </t> sqlite_sequence <c> seq <t> text <c> name <t> text <i> Count the number of countries for which Spanish is the predominantly spoken language. <s> SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> What are the codes of countries where Spanish is spoken by the largest percentage of people? <s> SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode </s>
--SEPARATOR--
sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> HeadOfState <t> text <c> GNPOld <t> number <c> Capital <t> number <c> LocalName <t> text <c> SurfaceArea <t> number <c> Name <t> text <c> Region <t> text <c> GNP <t> number <c> IndepYear <t> number <c> GovernmentForm <t> text <c> Population <t> number <c> Code <t> text <c> Continent <t> text <c> Code2 <t> text <c> LifeExpectancy <t> number </t> city <c> District <t> text <c> Population <t> number <c> Name <t> text <c> ID <t> number <c> CountryCode <t> text </t> countrylanguage <c> Language <t> text <c> IsOfficial <t> text <c> CountryCode <t> text <c> Percentage <t> number <i> What are the codes of countries where Spanish is spoken by the largest percentage of people? <s> SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode </s>
--SEPARATOR--
city <c> ID <t> number <c> Name <t> text <c> CountryCode <t> text <c> District <t> text <c> Population <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text </t> country <c> Code <t> text <c> Name <t> text <c> Continent <t> text <c> Region <t> text <c> SurfaceArea <t> number <c> IndepYear <t> number <c> Population <t> number <c> LifeExpectancy <t> number <c> GNP <t> number <c> GNPOld <t> number <c> LocalName <t> text <c> GovernmentForm <t> text <c> HeadOfState <t> text <c> Capital <t> number <c> Code2 <t> text </t> countrylanguage <c> CountryCode <t> text <c> Language <t> text <c> IsOfficial <t> text <c> Percentage <t> number <i> Return the codes of countries for which Spanish is the predominantly spoken language. <s> SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode </s>
--SEPARATOR--
countrylanguage <c> Language <t> text <c> IsOfficial <t> text <c> CountryCode <t> text <c> Percentage <t> number </t> city <c> District <t> text <c> Name <t> text <c> Population <t> number <c> CountryCode <t> text <c> ID <t> number </t> country <c> LifeExpectancy <t> number <c> Population <t> number <c> SurfaceArea <t> number <c> Code <t> text <c> Capital <t> number <c> IndepYear <t> number <c> Continent <t> text <c> GovernmentForm <t> text <c> GNPOld <t> number <c> Code2 <t> text <c> HeadOfState <t> text <c> LocalName <t> text <c> Region <t> text <c> Name <t> text <c> GNP <t> number </t> sqlite_sequence <c> name <t> text <c> seq <t> text <i> Return the codes of countries for which Spanish is the predominantly spoken language. <s> SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode </s>
--SEPARATOR--
conductor <c> Conductor_ID <t> number <c> Name <t> text <c> Age <t> number <c> Nationality <t> text <c> Year_of_Work <t> number </t> orchestra <c> Orchestra_ID <t> number <c> Orchestra <t> text <c> Conductor_ID <t> number <c> Record_Company <t> text <c> Year_of_Founded <t> number <c> Major_Record_Format <t> text </t> performance <c> Performance_ID <t> number <c> Orchestra_ID <t> number <c> Type <t> text <c> Date <t> text <c> Official_ratings_(millions) <t> number <c> Weekly_rank <t> text <c> Share <t> text </t> show <c> Show_ID <t> number <c> Performance_ID <t> number <c> If_first_show <t> others <c> Result <t> text <c> Attendance <t> number <i> How many conductors are there? <s> SELECT count(*) FROM conductor </s>
--SEPARATOR--
orchestra <c> Major_Record_Format <t> text <c> Orchestra_ID <t> number <c> Year_of_Founded <t> number <c> Conductor_ID <t> number <c> Record_Company <t> text <c> Orchestra <t> text </t> performance <c> Official_ratings_(millions) <t> number <c> Weekly_rank <t> text <c> Date <t> text <c> Type <t> text <c> Orchestra_ID <t> number <c> Performance_ID <t> number <c> Share <t> text </t> conductor <c> Age <t> number <c> Nationality <t> text <c> Conductor_ID <t> number <c> Year_of_Work <t> number <c> Name <t> text </t> show <c> If_first_show <t> others <c> Attendance <t> number <c> Performance_ID <t> number <c> Result <t> text <c> Show_ID <t> number <i> How many conductors are there? <s> SELECT count(*) FROM conductor </s>
--SEPARATOR--
conductor <c> Conductor_ID <t> number <c> Name <t> text <c> Age <t> number <c> Nationality <t> text <c> Year_of_Work <t> number </t> orchestra <c> Orchestra_ID <t> number <c> Orchestra <t> text <c> Conductor_ID <t> number <c> Record_Company <t> text <c> Year_of_Founded <t> number <c> Major_Record_Format <t> text </t> performance <c> Performance_ID <t> number <c> Orchestra_ID <t> number <c> Type <t> text <c> Date <t> text <c> Official_ratings_(millions) <t> number <c> Weekly_rank <t> text <c> Share <t> text </t> show <c> Show_ID <t> number <c> Performance_ID <t> number <c> If_first_show <t> others <c> Result <t> text <c> Attendance <t> number <i> Count the number of conductors. <s> SELECT count(*) FROM conductor </s>
--SEPARATOR--
show <c> Show_ID <t> number <c> Performance_ID <t> number <c> If_first_show <t> others <c> Result <t> text <c> Attendance <t> number </t> conductor <c> Name <t> text <c> Conductor_ID <t> number <c> Nationality <t> text <c> Year_of_Work <t> number <c> Age <t> number </t> performance <c> Weekly_rank <t> text <c> Type <t> text <c> Date <t> text <c> Share <t> text <c> Orchestra_ID <t> number <c> Performance_ID <t> number <c> Official_ratings_(millions) <t> number </t> orchestra <c> Year_of_Founded <t> number <c> Record_Company <t> text <c> Major_Record_Format <t> text <c> Conductor_ID <t> number <c> Orchestra_ID <t> number <c> Orchestra <t> text <i> Count the number of conductors. <s> SELECT count(*) FROM conductor </s>
--SEPARATOR--
conductor <c> Conductor_ID <t> number <c> Name <t> text <c> Age <t> number <c> Nationality <t> text <c> Year_of_Work <t> number </t> orchestra <c> Orchestra_ID <t> number <c> Orchestra <t> text <c> Conductor_ID <t> number <c> Record_Company <t> text <c> Year_of_Founded <t> number <c> Major_Record_Format <t> text </t> performance <c> Performance_ID <t> number <c> Orchestra_ID <t> number <c> Type <t> text <c> Date <t> text <c> Official_ratings_(millions) <t> number <c> Weekly_rank <t> text <c> Share <t> text </t> show <c> Show_ID <t> number <c> Performance_ID <t> number <c> If_first_show <t> others <c> Result <t> text <c> Attendance <t> number <i> List the names of conductors in ascending order of age. <s> SELECT Name FROM conductor ORDER BY Age ASC </s>
--SEPARATOR--
show <c> Show_ID <t> number <c> Result <t> text <c> If_first_show <t> others <c> Attendance <t> number <c> Performance_ID <t> number </t> orchestra <c> Orchestra_ID <t> number <c> Record_Company <t> text <c> Conductor_ID <t> number <c> Major_Record_Format <t> text <c> Year_of_Founded <t> number <c> Orchestra <t> text </t> performance <c> Orchestra_ID <t> number <c> Date <t> text <c> Official_ratings_(millions) <t> number <c> Share <t> text <c> Type <t> text <c> Performance_ID <t> number <c> Weekly_rank <t> text </t> conductor <c> Year_of_Work <t> number <c> Conductor_ID <t> number <c> Nationality <t> text <c> Name <t> text <c> Age <t> number <i> List the names of conductors in ascending order of age. <s> SELECT Name FROM conductor ORDER BY Age ASC </s>
--SEPARATOR--
conductor <c> Conductor_ID <t> number <c> Name <t> text <c> Age <t> number <c> Nationality <t> text <c> Year_of_Work <t> number </t> orchestra <c> Orchestra_ID <t> number <c> Orchestra <t> text <c> Conductor_ID <t> number <c> Record_Company <t> text <c> Year_of_Founded <t> number <c> Major_Record_Format <t> text </t> performance <c> Performance_ID <t> number <c> Orchestra_ID <t> number <c> Type <t> text <c> Date <t> text <c> Official_ratings_(millions) <t> number <c> Weekly_rank <t> text <c> Share <t> text </t> show <c> Show_ID <t> number <c> Performance_ID <t> number <c> If_first_show <t> others <c> Result <t> text <c> Attendance <t> number <i> What are the names of conductors, ordered by age? <s> SELECT Name FROM conductor ORDER BY Age ASC </s>
--SEPARATOR--
performance <c> Share <t> text <c> Orchestra_ID <t> number <c> Date <t> text <c> Performance_ID <t> number <c> Official_ratings_(millions) <t> number <c> Weekly_rank <t> text <c> Type <t> text </t> conductor <c> Age <t> number <c> Conductor_ID <t> number <c> Nationality <t> text <c> Name <t> text <c> Year_of_Work <t> number </t> orchestra <c> Major_Record_Format <t> text <c> Orchestra_ID <t> number <c> Record_Company <t> text <c> Orchestra <t> text <c> Conductor_ID <t> number <c> Year_of_Founded <t> number </t> show <c> Show_ID <t> number <c> Attendance <t> number <c> Performance_ID <t> number <c> If_first_show <t> others <c> Result <t> text <i> What are the names of conductors, ordered by age? <s> SELECT Name FROM conductor ORDER BY Age ASC </s>
--SEPARATOR--
conductor <c> Conductor_ID <t> number <c> Name <t> text <c> Age <t> number <c> Nationality <t> text <c> Year_of_Work <t> number </t> orchestra <c> Orchestra_ID <t> number <c> Orchestra <t> text <c> Conductor_ID <t> number <c> Record_Company <t> text <c> Year_of_Founded <t> number <c> Major_Record_Format <t> text </t> performance <c> Performance_ID <t> number <c> Orchestra_ID <t> number <c> Type <t> text <c> Date <t> text <c> Official_ratings_(millions) <t> number <c> Weekly_rank <t> text <c> Share <t> text </t> show <c> Show_ID <t> number <c> Performance_ID <t> number <c> If_first_show <t> others <c> Result <t> text <c> Attendance <t> number <i> What are the names of conductors whose nationalities are not "USA"? <s> SELECT Name FROM conductor WHERE Nationality != 'USA' </s>
--SEPARATOR--
conductor <c> Year_of_Work <t> number <c> Nationality <t> text <c> Conductor_ID <t> number <c> Name <t> text <c> Age <t> number </t> show <c> Attendance <t> number <c> Show_ID <t> number <c> If_first_show <t> others <c> Performance_ID <t> number <c> Result <t> text </t> orchestra <c> Conductor_ID <t> number <c> Major_Record_Format <t> text <c> Year_of_Founded <t> number <c> Record_Company <t> text <c> Orchestra_ID <t> number <c> Orchestra <t> text </t> performance <c> Type <t> text <c> Orchestra_ID <t> number <c> Share <t> text <c> Performance_ID <t> number <c> Date <t> text <c> Official_ratings_(millions) <t> number <c> Weekly_rank <t> text <i> What are the names of conductors whose nationalities are not "USA"? <s> SELECT Name FROM conductor WHERE Nationality != 'USA' </s>
--SEPARATOR--
conductor <c> Conductor_ID <t> number <c> Name <t> text <c> Age <t> number <c> Nationality <t> text <c> Year_of_Work <t> number </t> orchestra <c> Orchestra_ID <t> number <c> Orchestra <t> text <c> Conductor_ID <t> number <c> Record_Company <t> text <c> Year_of_Founded <t> number <c> Major_Record_Format <t> text </t> performance <c> Performance_ID <t> number <c> Orchestra_ID <t> number <c> Type <t> text <c> Date <t> text <c> Official_ratings_(millions) <t> number <c> Weekly_rank <t> text <c> Share <t> text </t> show <c> Show_ID <t> number <c> Performance_ID <t> number <c> If_first_show <t> others <c> Result <t> text <c> Attendance <t> number <i> Return the names of conductors that do not have the nationality "USA". <s> SELECT Name FROM conductor WHERE Nationality != 'USA' </s>
--SEPARATOR--
performance <c> Share <t> text <c> Type <t> text <c> Official_ratings_(millions) <t> number <c> Weekly_rank <t> text <c> Performance_ID <t> number <c> Date <t> text <c> Orchestra_ID <t> number </t> conductor <c> Name <t> text <c> Age <t> number <c> Conductor_ID <t> number <c> Nationality <t> text <c> Year_of_Work <t> number </t> show <c> Result <t> text <c> If_first_show <t> others <c> Performance_ID <t> number <c> Attendance <t> number <c> Show_ID <t> number </t> orchestra <c> Orchestra <t> text <c> Record_Company <t> text <c> Orchestra_ID <t> number <c> Year_of_Founded <t> number <c> Conductor_ID <t> number <c> Major_Record_Format <t> text <i> Return the names of conductors that do not have the nationality "USA". <s> SELECT Name FROM conductor WHERE Nationality != 'USA' </s>
--SEPARATOR--
conductor <c> Conductor_ID <t> number <c> Name <t> text <c> Age <t> number <c> Nationality <t> text <c> Year_of_Work <t> number </t> orchestra <c> Orchestra_ID <t> number <c> Orchestra <t> text <c> Conductor_ID <t> number <c> Record_Company <t> text <c> Year_of_Founded <t> number <c> Major_Record_Format <t> text </t> performance <c> Performance_ID <t> number <c> Orchestra_ID <t> number <c> Type <t> text <c> Date <t> text <c> Official_ratings_(millions) <t> number <c> Weekly_rank <t> text <c> Share <t> text </t> show <c> Show_ID <t> number <c> Performance_ID <t> number <c> If_first_show <t> others <c> Result <t> text <c> Attendance <t> number <i> What are the record companies of orchestras in descending order of years in which they were founded? <s> SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC </s>
--SEPARATOR--
conductor <c> Conductor_ID <t> number <c> Nationality <t> text <c> Age <t> number <c> Name <t> text <c> Year_of_Work <t> number </t> orchestra <c> Orchestra <t> text <c> Record_Company <t> text <c> Conductor_ID <t> number <c> Major_Record_Format <t> text <c> Year_of_Founded <t> number <c> Orchestra_ID <t> number </t> performance <c> Official_ratings_(millions) <t> number <c> Performance_ID <t> number <c> Share <t> text <c> Date <t> text <c> Type <t> text <c> Weekly_rank <t> text <c> Orchestra_ID <t> number </t> show <c> Show_ID <t> number <c> Performance_ID <t> number <c> Result <t> text <c> Attendance <t> number <c> If_first_show <t> others <i> What are the record companies of orchestras in descending order of years in which they were founded? <s> SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC </s>
--SEPARATOR--
conductor <c> Conductor_ID <t> number <c> Name <t> text <c> Age <t> number <c> Nationality <t> text <c> Year_of_Work <t> number </t> orchestra <c> Orchestra_ID <t> number <c> Orchestra <t> text <c> Conductor_ID <t> number <c> Record_Company <t> text <c> Year_of_Founded <t> number <c> Major_Record_Format <t> text </t> performance <c> Performance_ID <t> number <c> Orchestra_ID <t> number <c> Type <t> text <c> Date <t> text <c> Official_ratings_(millions) <t> number <c> Weekly_rank <t> text <c> Share <t> text </t> show <c> Show_ID <t> number <c> Performance_ID <t> number <c> If_first_show <t> others <c> Result <t> text <c> Attendance <t> number <i> Return the record companies of orchestras, sorted descending by the years in which they were founded. <s> SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC </s>
--SEPARATOR--
performance <c> Official_ratings_(millions) <t> number <c> Weekly_rank <t> text <c> Type <t> text <c> Share <t> text <c> Performance_ID <t> number <c> Date <t> text <c> Orchestra_ID <t> number </t> conductor <c> Conductor_ID <t> number <c> Name <t> text <c> Age <t> number <c> Year_of_Work <t> number <c> Nationality <t> text </t> orchestra <c> Year_of_Founded <t> number <c> Orchestra <t> text <c> Conductor_ID <t> number <c> Major_Record_Format <t> text <c> Orchestra_ID <t> number <c> Record_Company <t> text </t> show <c> Performance_ID <t> number <c> Attendance <t> number <c> Result <t> text <c> If_first_show <t> others <c> Show_ID <t> number <i> Return the record companies of orchestras, sorted descending by the years in which they were founded. <s> SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC </s>
--SEPARATOR--
conductor <c> Conductor_ID <t> number <c> Name <t> text <c> Age <t> number <c> Nationality <t> text <c> Year_of_Work <t> number </t> orchestra <c> Orchestra_ID <t> number <c> Orchestra <t> text <c> Conductor_ID <t> number <c> Record_Company <t> text <c> Year_of_Founded <t> number <c> Major_Record_Format <t> text </t> performance <c> Performance_ID <t> number <c> Orchestra_ID <t> number <c> Type <t> text <c> Date <t> text <c> Official_ratings_(millions) <t> number <c> Weekly_rank <t> text <c> Share <t> text </t> show <c> Show_ID <t> number <c> Performance_ID <t> number <c> If_first_show <t> others <c> Result <t> text <c> Attendance <t> number <i> What is the average attendance of shows? <s> SELECT avg(Attendance) FROM SHOW </s>
--SEPARATOR--
show <c> Result <t> text <c> Performance_ID <t> number <c> Show_ID <t> number <c> Attendance <t> number <c> If_first_show <t> others </t> performance <c> Weekly_rank <t> text <c> Type <t> text <c> Orchestra_ID <t> number <c> Share <t> text <c> Performance_ID <t> number <c> Official_ratings_(millions) <t> number <c> Date <t> text </t> conductor <c> Year_of_Work <t> number <c> Nationality <t> text <c> Conductor_ID <t> number <c> Name <t> text <c> Age <t> number </t> orchestra <c> Orchestra_ID <t> number <c> Major_Record_Format <t> text <c> Orchestra <t> text <c> Record_Company <t> text <c> Conductor_ID <t> number <c> Year_of_Founded <t> number <i> What is the average attendance of shows? <s> SELECT avg(Attendance) FROM SHOW </s>
--SEPARATOR--
conductor <c> Conductor_ID <t> number <c> Name <t> text <c> Age <t> number <c> Nationality <t> text <c> Year_of_Work <t> number </t> orchestra <c> Orchestra_ID <t> number <c> Orchestra <t> text <c> Conductor_ID <t> number <c> Record_Company <t> text <c> Year_of_Founded <t> number <c> Major_Record_Format <t> text </t> performance <c> Performance_ID <t> number <c> Orchestra_ID <t> number <c> Type <t> text <c> Date <t> text <c> Official_ratings_(millions) <t> number <c> Weekly_rank <t> text <c> Share <t> text </t> show <c> Show_ID <t> number <c> Performance_ID <t> number <c> If_first_show <t> others <c> Result <t> text <c> Attendance <t> number <i> Return the average attendance across all shows. <s> SELECT avg(Attendance) FROM SHOW </s>
--SEPARATOR--
orchestra <c> Major_Record_Format <t> text <c> Orchestra_ID <t> number <c> Orchestra <t> text <c> Record_Company <t> text <c> Conductor_ID <t> number <c> Year_of_Founded <t> number </t> performance <c> Share <t> text <c> Orchestra_ID <t> number <c> Performance_ID <t> number <c> Type <t> text <c> Weekly_rank <t> text <c> Official_ratings_(millions) <t> number <c> Date <t> text </t> show <c> If_first_show <t> others <c> Show_ID <t> number <c> Performance_ID <t> number <c> Result <t> text <c> Attendance <t> number </t> conductor <c> Age <t> number <c> Year_of_Work <t> number <c> Conductor_ID <t> number <c> Name <t> text <c> Nationality <t> text <i> Return the average attendance across all shows. <s> SELECT avg(Attendance) FROM SHOW </s>
--SEPARATOR--
conductor <c> Conductor_ID <t> number <c> Name <t> text <c> Age <t> number <c> Nationality <t> text <c> Year_of_Work <t> number </t> orchestra <c> Orchestra_ID <t> number <c> Orchestra <t> text <c> Conductor_ID <t> number <c> Record_Company <t> text <c> Year_of_Founded <t> number <c> Major_Record_Format <t> text </t> performance <c> Performance_ID <t> number <c> Orchestra_ID <t> number <c> Type <t> text <c> Date <t> text <c> Official_ratings_(millions) <t> number <c> Weekly_rank <t> text <c> Share <t> text </t> show <c> Show_ID <t> number <c> Performance_ID <t> number <c> If_first_show <t> others <c> Result <t> text <c> Attendance <t> number <i> What are the maximum and minimum share of performances whose type is not "Live final". <s> SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != "Live final" </s>
--SEPARATOR--
orchestra <c> Orchestra_ID <t> number <c> Year_of_Founded <t> number <c> Conductor_ID <t> number <c> Major_Record_Format <t> text <c> Record_Company <t> text <c> Orchestra <t> text </t> conductor <c> Conductor_ID <t> number <c> Name <t> text <c> Year_of_Work <t> number <c> Age <t> number <c> Nationality <t> text </t> performance <c> Type <t> text <c> Orchestra_ID <t> number <c> Weekly_rank <t> text <c> Date <t> text <c> Official_ratings_(millions) <t> number <c> Share <t> text <c> Performance_ID <t> number </t> show <c> If_first_show <t> others <c> Attendance <t> number <c> Performance_ID <t> number <c> Result <t> text <c> Show_ID <t> number <i> What are the maximum and minimum share of performances whose type is not "Live final". <s> SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != "Live final" </s>
--SEPARATOR--
conductor <c> Conductor_ID <t> number <c> Name <t> text <c> Age <t> number <c> Nationality <t> text <c> Year_of_Work <t> number </t> orchestra <c> Orchestra_ID <t> number <c> Orchestra <t> text <c> Conductor_ID <t> number <c> Record_Company <t> text <c> Year_of_Founded <t> number <c> Major_Record_Format <t> text </t> performance <c> Performance_ID <t> number <c> Orchestra_ID <t> number <c> Type <t> text <c> Date <t> text <c> Official_ratings_(millions) <t> number <c> Weekly_rank <t> text <c> Share <t> text </t> show <c> Show_ID <t> number <c> Performance_ID <t> number <c> If_first_show <t> others <c> Result <t> text <c> Attendance <t> number <i> Return the maximum and minimum shares for performances that do not have the type "Live final". <s> SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != "Live final" </s>
--SEPARATOR--
conductor <c> Age <t> number <c> Conductor_ID <t> number <c> Name <t> text <c> Year_of_Work <t> number <c> Nationality <t> text </t> orchestra <c> Conductor_ID <t> number <c> Major_Record_Format <t> text <c> Orchestra <t> text <c> Year_of_Founded <t> number <c> Orchestra_ID <t> number <c> Record_Company <t> text </t> performance <c> Performance_ID <t> number <c> Type <t> text <c> Weekly_rank <t> text <c> Date <t> text <c> Official_ratings_(millions) <t> number <c> Share <t> text <c> Orchestra_ID <t> number </t> show <c> If_first_show <t> others <c> Attendance <t> number <c> Performance_ID <t> number <c> Show_ID <t> number <c> Result <t> text <i> Return the maximum and minimum shares for performances that do not have the type "Live final". <s> SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != "Live final" </s>
--SEPARATOR--
conductor <c> Conductor_ID <t> number <c> Name <t> text <c> Age <t> number <c> Nationality <t> text <c> Year_of_Work <t> number </t> orchestra <c> Orchestra_ID <t> number <c> Orchestra <t> text <c> Conductor_ID <t> number <c> Record_Company <t> text <c> Year_of_Founded <t> number <c> Major_Record_Format <t> text </t> performance <c> Performance_ID <t> number <c> Orchestra_ID <t> number <c> Type <t> text <c> Date <t> text <c> Official_ratings_(millions) <t> number <c> Weekly_rank <t> text <c> Share <t> text </t> show <c> Show_ID <t> number <c> Performance_ID <t> number <c> If_first_show <t> others <c> Result <t> text <c> Attendance <t> number <i> How many different nationalities do conductors have? <s> SELECT count(DISTINCT Nationality) FROM conductor </s>
--SEPARATOR--
performance <c> Official_ratings_(millions) <t> number <c> Weekly_rank <t> text <c> Performance_ID <t> number <c> Share <t> text <c> Type <t> text <c> Orchestra_ID <t> number <c> Date <t> text </t> conductor <c> Conductor_ID <t> number <c> Year_of_Work <t> number <c> Nationality <t> text <c> Name <t> text <c> Age <t> number </t> orchestra <c> Conductor_ID <t> number <c> Orchestra_ID <t> number <c> Record_Company <t> text <c> Major_Record_Format <t> text <c> Orchestra <t> text <c> Year_of_Founded <t> number </t> show <c> Result <t> text <c> If_first_show <t> others <c> Performance_ID <t> number <c> Attendance <t> number <c> Show_ID <t> number <i> How many different nationalities do conductors have? <s> SELECT count(DISTINCT Nationality) FROM conductor </s>
--SEPARATOR--
conductor <c> Conductor_ID <t> number <c> Name <t> text <c> Age <t> number <c> Nationality <t> text <c> Year_of_Work <t> number </t> orchestra <c> Orchestra_ID <t> number <c> Orchestra <t> text <c> Conductor_ID <t> number <c> Record_Company <t> text <c> Year_of_Founded <t> number <c> Major_Record_Format <t> text </t> performance <c> Performance_ID <t> number <c> Orchestra_ID <t> number <c> Type <t> text <c> Date <t> text <c> Official_ratings_(millions) <t> number <c> Weekly_rank <t> text <c> Share <t> text </t> show <c> Show_ID <t> number <c> Performance_ID <t> number <c> If_first_show <t> others <c> Result <t> text <c> Attendance <t> number <i> Count the number of different nationalities of conductors. <s> SELECT count(DISTINCT Nationality) FROM conductor </s>
--SEPARATOR--
show <c> Show_ID <t> number <c> If_first_show <t> others <c> Result <t> text <c> Performance_ID <t> number <c> Attendance <t> number </t> conductor <c> Year_of_Work <t> number <c> Nationality <t> text <c> Conductor_ID <t> number <c> Name <t> text <c> Age <t> number </t> orchestra <c> Record_Company <t> text <c> Major_Record_Format <t> text <c> Orchestra <t> text <c> Year_of_Founded <t> number <c> Conductor_ID <t> number <c> Orchestra_ID <t> number </t> performance <c> Official_ratings_(millions) <t> number <c> Weekly_rank <t> text <c> Type <t> text <c> Orchestra_ID <t> number <c> Performance_ID <t> number <c> Share <t> text <c> Date <t> text <i> Count the number of different nationalities of conductors. <s> SELECT count(DISTINCT Nationality) FROM conductor </s>
--SEPARATOR--
conductor <c> Conductor_ID <t> number <c> Name <t> text <c> Age <t> number <c> Nationality <t> text <c> Year_of_Work <t> number </t> orchestra <c> Orchestra_ID <t> number <c> Orchestra <t> text <c> Conductor_ID <t> number <c> Record_Company <t> text <c> Year_of_Founded <t> number <c> Major_Record_Format <t> text </t> performance <c> Performance_ID <t> number <c> Orchestra_ID <t> number <c> Type <t> text <c> Date <t> text <c> Official_ratings_(millions) <t> number <c> Weekly_rank <t> text <c> Share <t> text </t> show <c> Show_ID <t> number <c> Performance_ID <t> number <c> If_first_show <t> others <c> Result <t> text <c> Attendance <t> number <i> List names of conductors in descending order of years of work. <s> SELECT Name FROM conductor ORDER BY Year_of_Work DESC </s>
--SEPARATOR--
show <c> Attendance <t> number <c> If_first_show <t> others <c> Show_ID <t> number <c> Result <t> text <c> Performance_ID <t> number </t> performance <c> Date <t> text <c> Performance_ID <t> number <c> Official_ratings_(millions) <t> number <c> Type <t> text <c> Share <t> text <c> Weekly_rank <t> text <c> Orchestra_ID <t> number </t> orchestra <c> Orchestra <t> text <c> Record_Company <t> text <c> Year_of_Founded <t> number <c> Orchestra_ID <t> number <c> Major_Record_Format <t> text <c> Conductor_ID <t> number </t> conductor <c> Conductor_ID <t> number <c> Age <t> number <c> Nationality <t> text <c> Year_of_Work <t> number <c> Name <t> text <i> List names of conductors in descending order of years of work. <s> SELECT Name FROM conductor ORDER BY Year_of_Work DESC </s>
--SEPARATOR--
conductor <c> Conductor_ID <t> number <c> Name <t> text <c> Age <t> number <c> Nationality <t> text <c> Year_of_Work <t> number </t> orchestra <c> Orchestra_ID <t> number <c> Orchestra <t> text <c> Conductor_ID <t> number <c> Record_Company <t> text <c> Year_of_Founded <t> number <c> Major_Record_Format <t> text </t> performance <c> Performance_ID <t> number <c> Orchestra_ID <t> number <c> Type <t> text <c> Date <t> text <c> Official_ratings_(millions) <t> number <c> Weekly_rank <t> text <c> Share <t> text </t> show <c> Show_ID <t> number <c> Performance_ID <t> number <c> If_first_show <t> others <c> Result <t> text <c> Attendance <t> number <i> What are the names of conductors, sorted descending by the number of years they have worked? <s> SELECT Name FROM conductor ORDER BY Year_of_Work DESC </s>
--SEPARATOR--
conductor <c> Age <t> number <c> Year_of_Work <t> number <c> Name <t> text <c> Nationality <t> text <c> Conductor_ID <t> number </t> orchestra <c> Year_of_Founded <t> number <c> Orchestra <t> text <c> Record_Company <t> text <c> Major_Record_Format <t> text <c> Orchestra_ID <t> number <c> Conductor_ID <t> number </t> show <c> Result <t> text <c> Performance_ID <t> number <c> Attendance <t> number <c> If_first_show <t> others <c> Show_ID <t> number </t> performance <c> Share <t> text <c> Type <t> text <c> Weekly_rank <t> text <c> Performance_ID <t> number <c> Official_ratings_(millions) <t> number <c> Date <t> text <c> Orchestra_ID <t> number <i> What are the names of conductors, sorted descending by the number of years they have worked? <s> SELECT Name FROM conductor ORDER BY Year_of_Work DESC </s>
--SEPARATOR--
conductor <c> Conductor_ID <t> number <c> Name <t> text <c> Age <t> number <c> Nationality <t> text <c> Year_of_Work <t> number </t> orchestra <c> Orchestra_ID <t> number <c> Orchestra <t> text <c> Conductor_ID <t> number <c> Record_Company <t> text <c> Year_of_Founded <t> number <c> Major_Record_Format <t> text </t> performance <c> Performance_ID <t> number <c> Orchestra_ID <t> number <c> Type <t> text <c> Date <t> text <c> Official_ratings_(millions) <t> number <c> Weekly_rank <t> text <c> Share <t> text </t> show <c> Show_ID <t> number <c> Performance_ID <t> number <c> If_first_show <t> others <c> Result <t> text <c> Attendance <t> number <i> List the name of the conductor with the most years of work. <s> SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1 </s>
--SEPARATOR--
orchestra <c> Conductor_ID <t> number <c> Record_Company <t> text <c> Major_Record_Format <t> text <c> Year_of_Founded <t> number <c> Orchestra <t> text <c> Orchestra_ID <t> number </t> show <c> Result <t> text <c> Attendance <t> number <c> Show_ID <t> number <c> Performance_ID <t> number <c> If_first_show <t> others </t> conductor <c> Conductor_ID <t> number <c> Name <t> text <c> Age <t> number <c> Nationality <t> text <c> Year_of_Work <t> number </t> performance <c> Orchestra_ID <t> number <c> Official_ratings_(millions) <t> number <c> Performance_ID <t> number <c> Date <t> text <c> Weekly_rank <t> text <c> Share <t> text <c> Type <t> text <i> List the name of the conductor with the most years of work. <s> SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1 </s>
--SEPARATOR--
conductor <c> Conductor_ID <t> number <c> Name <t> text <c> Age <t> number <c> Nationality <t> text <c> Year_of_Work <t> number </t> orchestra <c> Orchestra_ID <t> number <c> Orchestra <t> text <c> Conductor_ID <t> number <c> Record_Company <t> text <c> Year_of_Founded <t> number <c> Major_Record_Format <t> text </t> performance <c> Performance_ID <t> number <c> Orchestra_ID <t> number <c> Type <t> text <c> Date <t> text <c> Official_ratings_(millions) <t> number <c> Weekly_rank <t> text <c> Share <t> text </t> show <c> Show_ID <t> number <c> Performance_ID <t> number <c> If_first_show <t> others <c> Result <t> text <c> Attendance <t> number <i> What is the name of the conductor who has worked the greatest number of years? <s> SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1 </s>
--SEPARATOR--
performance <c> Performance_ID <t> number <c> Share <t> text <c> Weekly_rank <t> text <c> Official_ratings_(millions) <t> number <c> Date <t> text <c> Type <t> text <c> Orchestra_ID <t> number </t> show <c> Show_ID <t> number <c> If_first_show <t> others <c> Performance_ID <t> number <c> Result <t> text <c> Attendance <t> number </t> orchestra <c> Orchestra <t> text <c> Year_of_Founded <t> number <c> Conductor_ID <t> number <c> Orchestra_ID <t> number <c> Major_Record_Format <t> text <c> Record_Company <t> text </t> conductor <c> Year_of_Work <t> number <c> Name <t> text <c> Conductor_ID <t> number <c> Age <t> number <c> Nationality <t> text <i> What is the name of the conductor who has worked the greatest number of years? <s> SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1 </s>
--SEPARATOR--
conductor <c> Conductor_ID <t> number <c> Name <t> text <c> Age <t> number <c> Nationality <t> text <c> Year_of_Work <t> number </t> orchestra <c> Orchestra_ID <t> number <c> Orchestra <t> text <c> Conductor_ID <t> number <c> Record_Company <t> text <c> Year_of_Founded <t> number <c> Major_Record_Format <t> text </t> performance <c> Performance_ID <t> number <c> Orchestra_ID <t> number <c> Type <t> text <c> Date <t> text <c> Official_ratings_(millions) <t> number <c> Weekly_rank <t> text <c> Share <t> text </t> show <c> Show_ID <t> number <c> Performance_ID <t> number <c> If_first_show <t> others <c> Result <t> text <c> Attendance <t> number <i> Show the names of conductors and the orchestras they have conducted. <s> SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID </s>
--SEPARATOR--
orchestra <c> Record_Company <t> text <c> Conductor_ID <t> number <c> Orchestra_ID <t> number <c> Orchestra <t> text <c> Year_of_Founded <t> number <c> Major_Record_Format <t> text </t> performance <c> Weekly_rank <t> text <c> Orchestra_ID <t> number <c> Performance_ID <t> number <c> Share <t> text <c> Date <t> text <c> Official_ratings_(millions) <t> number <c> Type <t> text </t> conductor <c> Conductor_ID <t> number <c> Name <t> text <c> Year_of_Work <t> number <c> Nationality <t> text <c> Age <t> number </t> show <c> Performance_ID <t> number <c> Show_ID <t> number <c> Result <t> text <c> Attendance <t> number <c> If_first_show <t> others <i> Show the names of conductors and the orchestras they have conducted. <s> SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID </s>
--SEPARATOR--
conductor <c> Conductor_ID <t> number <c> Name <t> text <c> Age <t> number <c> Nationality <t> text <c> Year_of_Work <t> number </t> orchestra <c> Orchestra_ID <t> number <c> Orchestra <t> text <c> Conductor_ID <t> number <c> Record_Company <t> text <c> Year_of_Founded <t> number <c> Major_Record_Format <t> text </t> performance <c> Performance_ID <t> number <c> Orchestra_ID <t> number <c> Type <t> text <c> Date <t> text <c> Official_ratings_(millions) <t> number <c> Weekly_rank <t> text <c> Share <t> text </t> show <c> Show_ID <t> number <c> Performance_ID <t> number <c> If_first_show <t> others <c> Result <t> text <c> Attendance <t> number <i> What are the names of conductors as well as the corresonding orchestras that they have conducted? <s> SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID </s>
--SEPARATOR--
performance <c> Date <t> text <c> Type <t> text <c> Weekly_rank <t> text <c> Orchestra_ID <t> number <c> Share <t> text <c> Performance_ID <t> number <c> Official_ratings_(millions) <t> number </t> show <c> If_first_show <t> others <c> Show_ID <t> number <c> Result <t> text <c> Performance_ID <t> number <c> Attendance <t> number </t> conductor <c> Nationality <t> text <c> Year_of_Work <t> number <c> Name <t> text <c> Age <t> number <c> Conductor_ID <t> number </t> orchestra <c> Orchestra <t> text <c> Record_Company <t> text <c> Conductor_ID <t> number <c> Major_Record_Format <t> text <c> Year_of_Founded <t> number <c> Orchestra_ID <t> number <i> What are the names of conductors as well as the corresonding orchestras that they have conducted? <s> SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID </s>
--SEPARATOR--
conductor <c> Conductor_ID <t> number <c> Name <t> text <c> Age <t> number <c> Nationality <t> text <c> Year_of_Work <t> number </t> orchestra <c> Orchestra_ID <t> number <c> Orchestra <t> text <c> Conductor_ID <t> number <c> Record_Company <t> text <c> Year_of_Founded <t> number <c> Major_Record_Format <t> text </t> performance <c> Performance_ID <t> number <c> Orchestra_ID <t> number <c> Type <t> text <c> Date <t> text <c> Official_ratings_(millions) <t> number <c> Weekly_rank <t> text <c> Share <t> text </t> show <c> Show_ID <t> number <c> Performance_ID <t> number <c> If_first_show <t> others <c> Result <t> text <c> Attendance <t> number <i> Show the names of conductors that have conducted more than one orchestras. <s> SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1 </s>
--SEPARATOR--
show <c> Attendance <t> number <c> Performance_ID <t> number <c> If_first_show <t> others <c> Result <t> text <c> Show_ID <t> number </t> orchestra <c> Orchestra_ID <t> number <c> Year_of_Founded <t> number <c> Major_Record_Format <t> text <c> Record_Company <t> text <c> Conductor_ID <t> number <c> Orchestra <t> text </t> performance <c> Share <t> text <c> Performance_ID <t> number <c> Weekly_rank <t> text <c> Date <t> text <c> Orchestra_ID <t> number <c> Official_ratings_(millions) <t> number <c> Type <t> text </t> conductor <c> Year_of_Work <t> number <c> Conductor_ID <t> number <c> Nationality <t> text <c> Age <t> number <c> Name <t> text <i> Show the names of conductors that have conducted more than one orchestras. <s> SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1 </s>
--SEPARATOR--
conductor <c> Conductor_ID <t> number <c> Name <t> text <c> Age <t> number <c> Nationality <t> text <c> Year_of_Work <t> number </t> orchestra <c> Orchestra_ID <t> number <c> Orchestra <t> text <c> Conductor_ID <t> number <c> Record_Company <t> text <c> Year_of_Founded <t> number <c> Major_Record_Format <t> text </t> performance <c> Performance_ID <t> number <c> Orchestra_ID <t> number <c> Type <t> text <c> Date <t> text <c> Official_ratings_(millions) <t> number <c> Weekly_rank <t> text <c> Share <t> text </t> show <c> Show_ID <t> number <c> Performance_ID <t> number <c> If_first_show <t> others <c> Result <t> text <c> Attendance <t> number <i> What are the names of conductors who have conducted at more than one orchestra? <s> SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1 </s>
--SEPARATOR--
show <c> Result <t> text <c> Attendance <t> number <c> If_first_show <t> others <c> Performance_ID <t> number <c> Show_ID <t> number </t> orchestra <c> Conductor_ID <t> number <c> Year_of_Founded <t> number <c> Orchestra <t> text <c> Major_Record_Format <t> text <c> Orchestra_ID <t> number <c> Record_Company <t> text </t> performance <c> Official_ratings_(millions) <t> number <c> Orchestra_ID <t> number <c> Performance_ID <t> number <c> Type <t> text <c> Date <t> text <c> Share <t> text <c> Weekly_rank <t> text </t> conductor <c> Year_of_Work <t> number <c> Nationality <t> text <c> Age <t> number <c> Conductor_ID <t> number <c> Name <t> text <i> What are the names of conductors who have conducted at more than one orchestra? <s> SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1 </s>
--SEPARATOR--
conductor <c> Conductor_ID <t> number <c> Name <t> text <c> Age <t> number <c> Nationality <t> text <c> Year_of_Work <t> number </t> orchestra <c> Orchestra_ID <t> number <c> Orchestra <t> text <c> Conductor_ID <t> number <c> Record_Company <t> text <c> Year_of_Founded <t> number <c> Major_Record_Format <t> text </t> performance <c> Performance_ID <t> number <c> Orchestra_ID <t> number <c> Type <t> text <c> Date <t> text <c> Official_ratings_(millions) <t> number <c> Weekly_rank <t> text <c> Share <t> text </t> show <c> Show_ID <t> number <c> Performance_ID <t> number <c> If_first_show <t> others <c> Result <t> text <c> Attendance <t> number <i> Show the name of the conductor that has conducted the most number of orchestras. <s> SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1 </s>
--SEPARATOR--
show <c> Performance_ID <t> number <c> Attendance <t> number <c> Result <t> text <c> If_first_show <t> others <c> Show_ID <t> number </t> conductor <c> Nationality <t> text <c> Name <t> text <c> Year_of_Work <t> number <c> Age <t> number <c> Conductor_ID <t> number </t> performance <c> Official_ratings_(millions) <t> number <c> Date <t> text <c> Weekly_rank <t> text <c> Performance_ID <t> number <c> Share <t> text <c> Orchestra_ID <t> number <c> Type <t> text </t> orchestra <c> Orchestra <t> text <c> Record_Company <t> text <c> Orchestra_ID <t> number <c> Year_of_Founded <t> number <c> Major_Record_Format <t> text <c> Conductor_ID <t> number <i> Show the name of the conductor that has conducted the most number of orchestras. <s> SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1 </s>
--SEPARATOR--
conductor <c> Conductor_ID <t> number <c> Name <t> text <c> Age <t> number <c> Nationality <t> text <c> Year_of_Work <t> number </t> orchestra <c> Orchestra_ID <t> number <c> Orchestra <t> text <c> Conductor_ID <t> number <c> Record_Company <t> text <c> Year_of_Founded <t> number <c> Major_Record_Format <t> text </t> performance <c> Performance_ID <t> number <c> Orchestra_ID <t> number <c> Type <t> text <c> Date <t> text <c> Official_ratings_(millions) <t> number <c> Weekly_rank <t> text <c> Share <t> text </t> show <c> Show_ID <t> number <c> Performance_ID <t> number <c> If_first_show <t> others <c> Result <t> text <c> Attendance <t> number <i> What is the name of the conductor who has conducted the most orchestras? <s> SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1 </s>
--SEPARATOR--
orchestra <c> Orchestra_ID <t> number <c> Orchestra <t> text <c> Record_Company <t> text <c> Year_of_Founded <t> number <c> Major_Record_Format <t> text <c> Conductor_ID <t> number </t> conductor <c> Name <t> text <c> Year_of_Work <t> number <c> Nationality <t> text <c> Conductor_ID <t> number <c> Age <t> number </t> performance <c> Orchestra_ID <t> number <c> Type <t> text <c> Official_ratings_(millions) <t> number <c> Performance_ID <t> number <c> Date <t> text <c> Share <t> text <c> Weekly_rank <t> text </t> show <c> Result <t> text <c> If_first_show <t> others <c> Performance_ID <t> number <c> Show_ID <t> number <c> Attendance <t> number <i> What is the name of the conductor who has conducted the most orchestras? <s> SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1 </s>
--SEPARATOR--
conductor <c> Conductor_ID <t> number <c> Name <t> text <c> Age <t> number <c> Nationality <t> text <c> Year_of_Work <t> number </t> orchestra <c> Orchestra_ID <t> number <c> Orchestra <t> text <c> Conductor_ID <t> number <c> Record_Company <t> text <c> Year_of_Founded <t> number <c> Major_Record_Format <t> text </t> performance <c> Performance_ID <t> number <c> Orchestra_ID <t> number <c> Type <t> text <c> Date <t> text <c> Official_ratings_(millions) <t> number <c> Weekly_rank <t> text <c> Share <t> text </t> show <c> Show_ID <t> number <c> Performance_ID <t> number <c> If_first_show <t> others <c> Result <t> text <c> Attendance <t> number <i> Please show the name of the conductor that has conducted orchestras founded after 2008. <s> SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008 </s>
--SEPARATOR--
performance <c> Orchestra_ID <t> number <c> Performance_ID <t> number <c> Type <t> text <c> Weekly_rank <t> text <c> Official_ratings_(millions) <t> number <c> Share <t> text <c> Date <t> text </t> show <c> Show_ID <t> number <c> Attendance <t> number <c> If_first_show <t> others <c> Performance_ID <t> number <c> Result <t> text </t> orchestra <c> Year_of_Founded <t> number <c> Conductor_ID <t> number <c> Orchestra_ID <t> number <c> Orchestra <t> text <c> Major_Record_Format <t> text <c> Record_Company <t> text </t> conductor <c> Nationality <t> text <c> Name <t> text <c> Age <t> number <c> Year_of_Work <t> number <c> Conductor_ID <t> number <i> Please show the name of the conductor that has conducted orchestras founded after 2008. <s> SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008 </s>
--SEPARATOR--
conductor <c> Conductor_ID <t> number <c> Name <t> text <c> Age <t> number <c> Nationality <t> text <c> Year_of_Work <t> number </t> orchestra <c> Orchestra_ID <t> number <c> Orchestra <t> text <c> Conductor_ID <t> number <c> Record_Company <t> text <c> Year_of_Founded <t> number <c> Major_Record_Format <t> text </t> performance <c> Performance_ID <t> number <c> Orchestra_ID <t> number <c> Type <t> text <c> Date <t> text <c> Official_ratings_(millions) <t> number <c> Weekly_rank <t> text <c> Share <t> text </t> show <c> Show_ID <t> number <c> Performance_ID <t> number <c> If_first_show <t> others <c> Result <t> text <c> Attendance <t> number <i> What are the names of conductors who have conducted orchestras founded after the year 2008? <s> SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008 </s>
--SEPARATOR--
show <c> Result <t> text <c> Performance_ID <t> number <c> Show_ID <t> number <c> Attendance <t> number <c> If_first_show <t> others </t> performance <c> Share <t> text <c> Type <t> text <c> Orchestra_ID <t> number <c> Official_ratings_(millions) <t> number <c> Performance_ID <t> number <c> Date <t> text <c> Weekly_rank <t> text </t> conductor <c> Nationality <t> text <c> Conductor_ID <t> number <c> Name <t> text <c> Year_of_Work <t> number <c> Age <t> number </t> orchestra <c> Orchestra <t> text <c> Record_Company <t> text <c> Conductor_ID <t> number <c> Orchestra_ID <t> number <c> Major_Record_Format <t> text <c> Year_of_Founded <t> number <i> What are the names of conductors who have conducted orchestras founded after the year 2008? <s> SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008 </s>
--SEPARATOR--
conductor <c> Conductor_ID <t> number <c> Name <t> text <c> Age <t> number <c> Nationality <t> text <c> Year_of_Work <t> number </t> orchestra <c> Orchestra_ID <t> number <c> Orchestra <t> text <c> Conductor_ID <t> number <c> Record_Company <t> text <c> Year_of_Founded <t> number <c> Major_Record_Format <t> text </t> performance <c> Performance_ID <t> number <c> Orchestra_ID <t> number <c> Type <t> text <c> Date <t> text <c> Official_ratings_(millions) <t> number <c> Weekly_rank <t> text <c> Share <t> text </t> show <c> Show_ID <t> number <c> Performance_ID <t> number <c> If_first_show <t> others <c> Result <t> text <c> Attendance <t> number <i> Please show the different record companies and the corresponding number of orchestras. <s> SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company </s>
--SEPARATOR--
show <c> If_first_show <t> others <c> Attendance <t> number <c> Performance_ID <t> number <c> Show_ID <t> number <c> Result <t> text </t> conductor <c> Name <t> text <c> Age <t> number <c> Conductor_ID <t> number <c> Nationality <t> text <c> Year_of_Work <t> number </t> performance <c> Type <t> text <c> Performance_ID <t> number <c> Weekly_rank <t> text <c> Share <t> text <c> Official_ratings_(millions) <t> number <c> Date <t> text <c> Orchestra_ID <t> number </t> orchestra <c> Year_of_Founded <t> number <c> Orchestra_ID <t> number <c> Conductor_ID <t> number <c> Orchestra <t> text <c> Major_Record_Format <t> text <c> Record_Company <t> text <i> Please show the different record companies and the corresponding number of orchestras. <s> SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company </s>
--SEPARATOR--
conductor <c> Conductor_ID <t> number <c> Name <t> text <c> Age <t> number <c> Nationality <t> text <c> Year_of_Work <t> number </t> orchestra <c> Orchestra_ID <t> number <c> Orchestra <t> text <c> Conductor_ID <t> number <c> Record_Company <t> text <c> Year_of_Founded <t> number <c> Major_Record_Format <t> text </t> performance <c> Performance_ID <t> number <c> Orchestra_ID <t> number <c> Type <t> text <c> Date <t> text <c> Official_ratings_(millions) <t> number <c> Weekly_rank <t> text <c> Share <t> text </t> show <c> Show_ID <t> number <c> Performance_ID <t> number <c> If_first_show <t> others <c> Result <t> text <c> Attendance <t> number <i> How many orchestras does each record company manage? <s> SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company </s>
--SEPARATOR--
performance <c> Official_ratings_(millions) <t> number <c> Weekly_rank <t> text <c> Type <t> text <c> Share <t> text <c> Performance_ID <t> number <c> Date <t> text <c> Orchestra_ID <t> number </t> conductor <c> Age <t> number <c> Conductor_ID <t> number <c> Year_of_Work <t> number <c> Nationality <t> text <c> Name <t> text </t> orchestra <c> Record_Company <t> text <c> Orchestra <t> text <c> Year_of_Founded <t> number <c> Orchestra_ID <t> number <c> Major_Record_Format <t> text <c> Conductor_ID <t> number </t> show <c> Show_ID <t> number <c> Attendance <t> number <c> Result <t> text <c> If_first_show <t> others <c> Performance_ID <t> number <i> How many orchestras does each record company manage? <s> SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company </s>
--SEPARATOR--
conductor <c> Conductor_ID <t> number <c> Name <t> text <c> Age <t> number <c> Nationality <t> text <c> Year_of_Work <t> number </t> orchestra <c> Orchestra_ID <t> number <c> Orchestra <t> text <c> Conductor_ID <t> number <c> Record_Company <t> text <c> Year_of_Founded <t> number <c> Major_Record_Format <t> text </t> performance <c> Performance_ID <t> number <c> Orchestra_ID <t> number <c> Type <t> text <c> Date <t> text <c> Official_ratings_(millions) <t> number <c> Weekly_rank <t> text <c> Share <t> text </t> show <c> Show_ID <t> number <c> Performance_ID <t> number <c> If_first_show <t> others <c> Result <t> text <c> Attendance <t> number <i> Please show the record formats of orchestras in ascending order of count. <s> SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC </s>
--SEPARATOR--
show <c> Show_ID <t> number <c> Result <t> text <c> Attendance <t> number <c> If_first_show <t> others <c> Performance_ID <t> number </t> orchestra <c> Year_of_Founded <t> number <c> Record_Company <t> text <c> Conductor_ID <t> number <c> Major_Record_Format <t> text <c> Orchestra <t> text <c> Orchestra_ID <t> number </t> performance <c> Type <t> text <c> Orchestra_ID <t> number <c> Share <t> text <c> Weekly_rank <t> text <c> Performance_ID <t> number <c> Date <t> text <c> Official_ratings_(millions) <t> number </t> conductor <c> Year_of_Work <t> number <c> Age <t> number <c> Conductor_ID <t> number <c> Nationality <t> text <c> Name <t> text <i> Please show the record formats of orchestras in ascending order of count. <s> SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC </s>
--SEPARATOR--
conductor <c> Conductor_ID <t> number <c> Name <t> text <c> Age <t> number <c> Nationality <t> text <c> Year_of_Work <t> number </t> orchestra <c> Orchestra_ID <t> number <c> Orchestra <t> text <c> Conductor_ID <t> number <c> Record_Company <t> text <c> Year_of_Founded <t> number <c> Major_Record_Format <t> text </t> performance <c> Performance_ID <t> number <c> Orchestra_ID <t> number <c> Type <t> text <c> Date <t> text <c> Official_ratings_(millions) <t> number <c> Weekly_rank <t> text <c> Share <t> text </t> show <c> Show_ID <t> number <c> Performance_ID <t> number <c> If_first_show <t> others <c> Result <t> text <c> Attendance <t> number <i> What are the major record formats of orchestras, sorted by their frequency? <s> SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC </s>
--SEPARATOR--
show <c> Result <t> text <c> Performance_ID <t> number <c> Show_ID <t> number <c> If_first_show <t> others <c> Attendance <t> number </t> orchestra <c> Orchestra <t> text <c> Orchestra_ID <t> number <c> Year_of_Founded <t> number <c> Conductor_ID <t> number <c> Record_Company <t> text <c> Major_Record_Format <t> text </t> performance <c> Date <t> text <c> Weekly_rank <t> text <c> Official_ratings_(millions) <t> number <c> Orchestra_ID <t> number <c> Share <t> text <c> Type <t> text <c> Performance_ID <t> number </t> conductor <c> Conductor_ID <t> number <c> Nationality <t> text <c> Name <t> text <c> Year_of_Work <t> number <c> Age <t> number <i> What are the major record formats of orchestras, sorted by their frequency? <s> SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC </s>
--SEPARATOR--
conductor <c> Conductor_ID <t> number <c> Name <t> text <c> Age <t> number <c> Nationality <t> text <c> Year_of_Work <t> number </t> orchestra <c> Orchestra_ID <t> number <c> Orchestra <t> text <c> Conductor_ID <t> number <c> Record_Company <t> text <c> Year_of_Founded <t> number <c> Major_Record_Format <t> text </t> performance <c> Performance_ID <t> number <c> Orchestra_ID <t> number <c> Type <t> text <c> Date <t> text <c> Official_ratings_(millions) <t> number <c> Weekly_rank <t> text <c> Share <t> text </t> show <c> Show_ID <t> number <c> Performance_ID <t> number <c> If_first_show <t> others <c> Result <t> text <c> Attendance <t> number <i> List the record company shared by the most number of orchestras. <s> SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1 </s>
--SEPARATOR--
performance <c> Performance_ID <t> number <c> Share <t> text <c> Type <t> text <c> Date <t> text <c> Orchestra_ID <t> number <c> Weekly_rank <t> text <c> Official_ratings_(millions) <t> number </t> orchestra <c> Orchestra <t> text <c> Major_Record_Format <t> text <c> Record_Company <t> text <c> Year_of_Founded <t> number <c> Conductor_ID <t> number <c> Orchestra_ID <t> number </t> conductor <c> Conductor_ID <t> number <c> Age <t> number <c> Nationality <t> text <c> Name <t> text <c> Year_of_Work <t> number </t> show <c> Show_ID <t> number <c> If_first_show <t> others <c> Performance_ID <t> number <c> Attendance <t> number <c> Result <t> text <i> List the record company shared by the most number of orchestras. <s> SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1 </s>
--SEPARATOR--
conductor <c> Conductor_ID <t> number <c> Name <t> text <c> Age <t> number <c> Nationality <t> text <c> Year_of_Work <t> number </t> orchestra <c> Orchestra_ID <t> number <c> Orchestra <t> text <c> Conductor_ID <t> number <c> Record_Company <t> text <c> Year_of_Founded <t> number <c> Major_Record_Format <t> text </t> performance <c> Performance_ID <t> number <c> Orchestra_ID <t> number <c> Type <t> text <c> Date <t> text <c> Official_ratings_(millions) <t> number <c> Weekly_rank <t> text <c> Share <t> text </t> show <c> Show_ID <t> number <c> Performance_ID <t> number <c> If_first_show <t> others <c> Result <t> text <c> Attendance <t> number <i> What is the record company used by the greatest number of orchestras? <s> SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1 </s>
--SEPARATOR--
show <c> Performance_ID <t> number <c> Result <t> text <c> Attendance <t> number <c> Show_ID <t> number <c> If_first_show <t> others </t> orchestra <c> Orchestra <t> text <c> Orchestra_ID <t> number <c> Record_Company <t> text <c> Conductor_ID <t> number <c> Major_Record_Format <t> text <c> Year_of_Founded <t> number </t> conductor <c> Conductor_ID <t> number <c> Nationality <t> text <c> Name <t> text <c> Year_of_Work <t> number <c> Age <t> number </t> performance <c> Official_ratings_(millions) <t> number <c> Type <t> text <c> Date <t> text <c> Performance_ID <t> number <c> Orchestra_ID <t> number <c> Weekly_rank <t> text <c> Share <t> text <i> What is the record company used by the greatest number of orchestras? <s> SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1 </s>
--SEPARATOR--
conductor <c> Conductor_ID <t> number <c> Name <t> text <c> Age <t> number <c> Nationality <t> text <c> Year_of_Work <t> number </t> orchestra <c> Orchestra_ID <t> number <c> Orchestra <t> text <c> Conductor_ID <t> number <c> Record_Company <t> text <c> Year_of_Founded <t> number <c> Major_Record_Format <t> text </t> performance <c> Performance_ID <t> number <c> Orchestra_ID <t> number <c> Type <t> text <c> Date <t> text <c> Official_ratings_(millions) <t> number <c> Weekly_rank <t> text <c> Share <t> text </t> show <c> Show_ID <t> number <c> Performance_ID <t> number <c> If_first_show <t> others <c> Result <t> text <c> Attendance <t> number <i> List the names of orchestras that have no performance. <s> SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance) </s>
--SEPARATOR--
performance <c> Official_ratings_(millions) <t> number <c> Type <t> text <c> Weekly_rank <t> text <c> Orchestra_ID <t> number <c> Share <t> text <c> Date <t> text <c> Performance_ID <t> number </t> orchestra <c> Orchestra_ID <t> number <c> Record_Company <t> text <c> Orchestra <t> text <c> Conductor_ID <t> number <c> Major_Record_Format <t> text <c> Year_of_Founded <t> number </t> conductor <c> Year_of_Work <t> number <c> Nationality <t> text <c> Age <t> number <c> Conductor_ID <t> number <c> Name <t> text </t> show <c> Show_ID <t> number <c> Result <t> text <c> If_first_show <t> others <c> Performance_ID <t> number <c> Attendance <t> number <i> List the names of orchestras that have no performance. <s> SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance) </s>
--SEPARATOR--
conductor <c> Conductor_ID <t> number <c> Name <t> text <c> Age <t> number <c> Nationality <t> text <c> Year_of_Work <t> number </t> orchestra <c> Orchestra_ID <t> number <c> Orchestra <t> text <c> Conductor_ID <t> number <c> Record_Company <t> text <c> Year_of_Founded <t> number <c> Major_Record_Format <t> text </t> performance <c> Performance_ID <t> number <c> Orchestra_ID <t> number <c> Type <t> text <c> Date <t> text <c> Official_ratings_(millions) <t> number <c> Weekly_rank <t> text <c> Share <t> text </t> show <c> Show_ID <t> number <c> Performance_ID <t> number <c> If_first_show <t> others <c> Result <t> text <c> Attendance <t> number <i> What are the orchestras that do not have any performances? <s> SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance) </s>
--SEPARATOR--
show <c> Attendance <t> number <c> Result <t> text <c> Performance_ID <t> number <c> Show_ID <t> number <c> If_first_show <t> others </t> conductor <c> Name <t> text <c> Conductor_ID <t> number <c> Age <t> number <c> Nationality <t> text <c> Year_of_Work <t> number </t> performance <c> Performance_ID <t> number <c> Date <t> text <c> Share <t> text <c> Orchestra_ID <t> number <c> Type <t> text <c> Weekly_rank <t> text <c> Official_ratings_(millions) <t> number </t> orchestra <c> Year_of_Founded <t> number <c> Major_Record_Format <t> text <c> Conductor_ID <t> number <c> Record_Company <t> text <c> Orchestra_ID <t> number <c> Orchestra <t> text <i> What are the orchestras that do not have any performances? <s> SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance) </s>
--SEPARATOR--
conductor <c> Conductor_ID <t> number <c> Name <t> text <c> Age <t> number <c> Nationality <t> text <c> Year_of_Work <t> number </t> orchestra <c> Orchestra_ID <t> number <c> Orchestra <t> text <c> Conductor_ID <t> number <c> Record_Company <t> text <c> Year_of_Founded <t> number <c> Major_Record_Format <t> text </t> performance <c> Performance_ID <t> number <c> Orchestra_ID <t> number <c> Type <t> text <c> Date <t> text <c> Official_ratings_(millions) <t> number <c> Weekly_rank <t> text <c> Share <t> text </t> show <c> Show_ID <t> number <c> Performance_ID <t> number <c> If_first_show <t> others <c> Result <t> text <c> Attendance <t> number <i> Show the record companies shared by orchestras founded before 2003 and after 2003. <s> SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003 </s>
--SEPARATOR--
show <c> Attendance <t> number <c> If_first_show <t> others <c> Show_ID <t> number <c> Result <t> text <c> Performance_ID <t> number </t> performance <c> Date <t> text <c> Weekly_rank <t> text <c> Type <t> text <c> Official_ratings_(millions) <t> number <c> Performance_ID <t> number <c> Share <t> text <c> Orchestra_ID <t> number </t> conductor <c> Age <t> number <c> Year_of_Work <t> number <c> Name <t> text <c> Nationality <t> text <c> Conductor_ID <t> number </t> orchestra <c> Major_Record_Format <t> text <c> Conductor_ID <t> number <c> Orchestra <t> text <c> Record_Company <t> text <c> Orchestra_ID <t> number <c> Year_of_Founded <t> number <i> Show the record companies shared by orchestras founded before 2003 and after 2003. <s> SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003 </s>
--SEPARATOR--
conductor <c> Conductor_ID <t> number <c> Name <t> text <c> Age <t> number <c> Nationality <t> text <c> Year_of_Work <t> number </t> orchestra <c> Orchestra_ID <t> number <c> Orchestra <t> text <c> Conductor_ID <t> number <c> Record_Company <t> text <c> Year_of_Founded <t> number <c> Major_Record_Format <t> text </t> performance <c> Performance_ID <t> number <c> Orchestra_ID <t> number <c> Type <t> text <c> Date <t> text <c> Official_ratings_(millions) <t> number <c> Weekly_rank <t> text <c> Share <t> text </t> show <c> Show_ID <t> number <c> Performance_ID <t> number <c> If_first_show <t> others <c> Result <t> text <c> Attendance <t> number <i> What are the record companies that are used by both orchestras founded before 2003 and those founded after 2003? <s> SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003 </s>
--SEPARATOR--
show <c> Result <t> text <c> Show_ID <t> number <c> If_first_show <t> others <c> Performance_ID <t> number <c> Attendance <t> number </t> performance <c> Performance_ID <t> number <c> Date <t> text <c> Weekly_rank <t> text <c> Share <t> text <c> Orchestra_ID <t> number <c> Type <t> text <c> Official_ratings_(millions) <t> number </t> conductor <c> Age <t> number <c> Year_of_Work <t> number <c> Nationality <t> text <c> Name <t> text <c> Conductor_ID <t> number </t> orchestra <c> Orchestra <t> text <c> Record_Company <t> text <c> Major_Record_Format <t> text <c> Conductor_ID <t> number <c> Orchestra_ID <t> number <c> Year_of_Founded <t> number <i> What are the record companies that are used by both orchestras founded before 2003 and those founded after 2003? <s> SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003 </s>
--SEPARATOR--
conductor <c> Conductor_ID <t> number <c> Name <t> text <c> Age <t> number <c> Nationality <t> text <c> Year_of_Work <t> number </t> orchestra <c> Orchestra_ID <t> number <c> Orchestra <t> text <c> Conductor_ID <t> number <c> Record_Company <t> text <c> Year_of_Founded <t> number <c> Major_Record_Format <t> text </t> performance <c> Performance_ID <t> number <c> Orchestra_ID <t> number <c> Type <t> text <c> Date <t> text <c> Official_ratings_(millions) <t> number <c> Weekly_rank <t> text <c> Share <t> text </t> show <c> Show_ID <t> number <c> Performance_ID <t> number <c> If_first_show <t> others <c> Result <t> text <c> Attendance <t> number <i> Find the number of orchestras whose record format is "CD" or "DVD". <s> SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD" </s>
--SEPARATOR--
performance <c> Type <t> text <c> Official_ratings_(millions) <t> number <c> Performance_ID <t> number <c> Share <t> text <c> Weekly_rank <t> text <c> Orchestra_ID <t> number <c> Date <t> text </t> conductor <c> Nationality <t> text <c> Conductor_ID <t> number <c> Year_of_Work <t> number <c> Name <t> text <c> Age <t> number </t> show <c> Show_ID <t> number <c> Result <t> text <c> Performance_ID <t> number <c> If_first_show <t> others <c> Attendance <t> number </t> orchestra <c> Year_of_Founded <t> number <c> Orchestra_ID <t> number <c> Conductor_ID <t> number <c> Major_Record_Format <t> text <c> Record_Company <t> text <c> Orchestra <t> text <i> Find the number of orchestras whose record format is "CD" or "DVD". <s> SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD" </s>
--SEPARATOR--
conductor <c> Conductor_ID <t> number <c> Name <t> text <c> Age <t> number <c> Nationality <t> text <c> Year_of_Work <t> number </t> orchestra <c> Orchestra_ID <t> number <c> Orchestra <t> text <c> Conductor_ID <t> number <c> Record_Company <t> text <c> Year_of_Founded <t> number <c> Major_Record_Format <t> text </t> performance <c> Performance_ID <t> number <c> Orchestra_ID <t> number <c> Type <t> text <c> Date <t> text <c> Official_ratings_(millions) <t> number <c> Weekly_rank <t> text <c> Share <t> text </t> show <c> Show_ID <t> number <c> Performance_ID <t> number <c> If_first_show <t> others <c> Result <t> text <c> Attendance <t> number <i> Count the number of orchestras that have CD or DVD as their record format. <s> SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD" </s>
--SEPARATOR--
orchestra <c> Major_Record_Format <t> text <c> Year_of_Founded <t> number <c> Orchestra_ID <t> number <c> Record_Company <t> text <c> Conductor_ID <t> number <c> Orchestra <t> text </t> show <c> Performance_ID <t> number <c> Result <t> text <c> Attendance <t> number <c> Show_ID <t> number <c> If_first_show <t> others </t> conductor <c> Nationality <t> text <c> Name <t> text <c> Year_of_Work <t> number <c> Age <t> number <c> Conductor_ID <t> number </t> performance <c> Date <t> text <c> Weekly_rank <t> text <c> Performance_ID <t> number <c> Type <t> text <c> Share <t> text <c> Official_ratings_(millions) <t> number <c> Orchestra_ID <t> number <i> Count the number of orchestras that have CD or DVD as their record format. <s> SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD" </s>
--SEPARATOR--
conductor <c> Conductor_ID <t> number <c> Name <t> text <c> Age <t> number <c> Nationality <t> text <c> Year_of_Work <t> number </t> orchestra <c> Orchestra_ID <t> number <c> Orchestra <t> text <c> Conductor_ID <t> number <c> Record_Company <t> text <c> Year_of_Founded <t> number <c> Major_Record_Format <t> text </t> performance <c> Performance_ID <t> number <c> Orchestra_ID <t> number <c> Type <t> text <c> Date <t> text <c> Official_ratings_(millions) <t> number <c> Weekly_rank <t> text <c> Share <t> text </t> show <c> Show_ID <t> number <c> Performance_ID <t> number <c> If_first_show <t> others <c> Result <t> text <c> Attendance <t> number <i> Show the years in which orchestras that have given more than one performance are founded. <s> SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1 </s>
--SEPARATOR--
performance <c> Type <t> text <c> Orchestra_ID <t> number <c> Performance_ID <t> number <c> Weekly_rank <t> text <c> Official_ratings_(millions) <t> number <c> Share <t> text <c> Date <t> text </t> show <c> Attendance <t> number <c> Show_ID <t> number <c> Result <t> text <c> If_first_show <t> others <c> Performance_ID <t> number </t> conductor <c> Age <t> number <c> Conductor_ID <t> number <c> Name <t> text <c> Nationality <t> text <c> Year_of_Work <t> number </t> orchestra <c> Orchestra_ID <t> number <c> Year_of_Founded <t> number <c> Record_Company <t> text <c> Conductor_ID <t> number <c> Major_Record_Format <t> text <c> Orchestra <t> text <i> Show the years in which orchestras that have given more than one performance are founded. <s> SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1 </s>
--SEPARATOR--
conductor <c> Conductor_ID <t> number <c> Name <t> text <c> Age <t> number <c> Nationality <t> text <c> Year_of_Work <t> number </t> orchestra <c> Orchestra_ID <t> number <c> Orchestra <t> text <c> Conductor_ID <t> number <c> Record_Company <t> text <c> Year_of_Founded <t> number <c> Major_Record_Format <t> text </t> performance <c> Performance_ID <t> number <c> Orchestra_ID <t> number <c> Type <t> text <c> Date <t> text <c> Official_ratings_(millions) <t> number <c> Weekly_rank <t> text <c> Share <t> text </t> show <c> Show_ID <t> number <c> Performance_ID <t> number <c> If_first_show <t> others <c> Result <t> text <c> Attendance <t> number <i> What are years of founding for orchestras that have had more than a single performance? <s> SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1 </s>
--SEPARATOR--
orchestra <c> Orchestra <t> text <c> Major_Record_Format <t> text <c> Year_of_Founded <t> number <c> Conductor_ID <t> number <c> Orchestra_ID <t> number <c> Record_Company <t> text </t> conductor <c> Year_of_Work <t> number <c> Conductor_ID <t> number <c> Age <t> number <c> Nationality <t> text <c> Name <t> text </t> show <c> If_first_show <t> others <c> Show_ID <t> number <c> Attendance <t> number <c> Result <t> text <c> Performance_ID <t> number </t> performance <c> Orchestra_ID <t> number <c> Weekly_rank <t> text <c> Performance_ID <t> number <c> Type <t> text <c> Official_ratings_(millions) <t> number <c> Date <t> text <c> Share <t> text <i> What are years of founding for orchestras that have had more than a single performance? <s> SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1 </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> How many high schoolers are there? <s> SELECT count(*) FROM Highschooler </s>
--SEPARATOR--
Likes <c> liked_id <t> number <c> student_id <t> number </t> Highschooler <c> ID <t> number <c> grade <t> number <c> name <t> text </t> Friend <c> friend_id <t> number <c> student_id <t> number <i> How many high schoolers are there? <s> SELECT count(*) FROM Highschooler </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> Count the number of high schoolers. <s> SELECT count(*) FROM Highschooler </s>
--SEPARATOR--
Likes <c> student_id <t> number <c> liked_id <t> number </t> Friend <c> friend_id <t> number <c> student_id <t> number </t> Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number <i> Count the number of high schoolers. <s> SELECT count(*) FROM Highschooler </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> Show the names and grades of each high schooler. <s> SELECT name ,  grade FROM Highschooler </s>
--SEPARATOR--
Highschooler <c> grade <t> number <c> name <t> text <c> ID <t> number </t> Likes <c> liked_id <t> number <c> student_id <t> number </t> Friend <c> friend_id <t> number <c> student_id <t> number <i> Show the names and grades of each high schooler. <s> SELECT name ,  grade FROM Highschooler </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> What are the names and grades for each high schooler? <s> SELECT name ,  grade FROM Highschooler </s>
--SEPARATOR--
Likes <c> student_id <t> number <c> liked_id <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number <i> What are the names and grades for each high schooler? <s> SELECT name ,  grade FROM Highschooler </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> Show all the grades of the high schoolers. <s> SELECT grade FROM Highschooler </s>
--SEPARATOR--
Likes <c> liked_id <t> number <c> student_id <t> number </t> Highschooler <c> grade <t> number <c> name <t> text <c> ID <t> number </t> Friend <c> friend_id <t> number <c> student_id <t> number <i> Show all the grades of the high schoolers. <s> SELECT grade FROM Highschooler </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> What is the grade of each high schooler? <s> SELECT grade FROM Highschooler </s>
--SEPARATOR--
Likes <c> liked_id <t> number <c> student_id <t> number </t> Highschooler <c> name <t> text <c> grade <t> number <c> ID <t> number </t> Friend <c> friend_id <t> number <c> student_id <t> number <i> What is the grade of each high schooler? <s> SELECT grade FROM Highschooler </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> What grade is Kyle in? <s> SELECT grade FROM Highschooler WHERE name  =  "Kyle" </s>
--SEPARATOR--
Friend <c> friend_id <t> number <c> student_id <t> number </t> Highschooler <c> name <t> text <c> grade <t> number <c> ID <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> What grade is Kyle in? <s> SELECT grade FROM Highschooler WHERE name  =  "Kyle" </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> Return the grade for the high schooler named Kyle. <s> SELECT grade FROM Highschooler WHERE name  =  "Kyle" </s>
--SEPARATOR--
Likes <c> liked_id <t> number <c> student_id <t> number </t> Highschooler <c> name <t> text <c> ID <t> number <c> grade <t> number </t> Friend <c> friend_id <t> number <c> student_id <t> number <i> Return the grade for the high schooler named Kyle. <s> SELECT grade FROM Highschooler WHERE name  =  "Kyle" </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> Show the names of all high schoolers in grade 10. <s> SELECT name FROM Highschooler WHERE grade  =  10 </s>
--SEPARATOR--
Friend <c> friend_id <t> number <c> student_id <t> number </t> Highschooler <c> ID <t> number <c> grade <t> number <c> name <t> text </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> Show the names of all high schoolers in grade 10. <s> SELECT name FROM Highschooler WHERE grade  =  10 </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> What are the names of all high schoolers in grade 10? <s> SELECT name FROM Highschooler WHERE grade  =  10 </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> grade <t> number <c> name <t> text </t> Likes <c> liked_id <t> number <c> student_id <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number <i> What are the names of all high schoolers in grade 10? <s> SELECT name FROM Highschooler WHERE grade  =  10 </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> Show the ID of the high schooler named Kyle. <s> SELECT ID FROM Highschooler WHERE name  =  "Kyle" </s>
--SEPARATOR--
Highschooler <c> grade <t> number <c> ID <t> number <c> name <t> text </t> Likes <c> student_id <t> number <c> liked_id <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number <i> Show the ID of the high schooler named Kyle. <s> SELECT ID FROM Highschooler WHERE name  =  "Kyle" </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> What is Kyle's id? <s> SELECT ID FROM Highschooler WHERE name  =  "Kyle" </s>
--SEPARATOR--
Likes <c> liked_id <t> number <c> student_id <t> number </t> Highschooler <c> grade <t> number <c> name <t> text <c> ID <t> number </t> Friend <c> friend_id <t> number <c> student_id <t> number <i> What is Kyle's id? <s> SELECT ID FROM Highschooler WHERE name  =  "Kyle" </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> How many high schoolers are there in grade 9 or 10? <s> SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10 </s>
--SEPARATOR--
Likes <c> student_id <t> number <c> liked_id <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number <i> How many high schoolers are there in grade 9 or 10? <s> SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10 </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> Count the number of high schoolers in grades 9 or 10. <s> SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10 </s>
--SEPARATOR--
Likes <c> liked_id <t> number <c> student_id <t> number </t> Friend <c> friend_id <t> number <c> student_id <t> number </t> Highschooler <c> ID <t> number <c> grade <t> number <c> name <t> text <i> Count the number of high schoolers in grades 9 or 10. <s> SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10 </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> Show the number of high schoolers for each grade. <s> SELECT grade ,  count(*) FROM Highschooler GROUP BY grade </s>
--SEPARATOR--
Friend <c> student_id <t> number <c> friend_id <t> number </t> Highschooler <c> name <t> text <c> ID <t> number <c> grade <t> number </t> Likes <c> liked_id <t> number <c> student_id <t> number <i> Show the number of high schoolers for each grade. <s> SELECT grade ,  count(*) FROM Highschooler GROUP BY grade </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> How many high schoolers are in each grade? <s> SELECT grade ,  count(*) FROM Highschooler GROUP BY grade </s>
--SEPARATOR--
Friend <c> friend_id <t> number <c> student_id <t> number </t> Highschooler <c> grade <t> number <c> ID <t> number <c> name <t> text </t> Likes <c> liked_id <t> number <c> student_id <t> number <i> How many high schoolers are in each grade? <s> SELECT grade ,  count(*) FROM Highschooler GROUP BY grade </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> Which grade has the most high schoolers? <s> SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Highschooler <c> grade <t> number <c> name <t> text <c> ID <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number <i> Which grade has the most high schoolers? <s> SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> Return the grade that has the greatest number of high schoolers. <s> SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Friend <c> student_id <t> number <c> friend_id <t> number </t> Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Likes <c> liked_id <t> number <c> student_id <t> number <i> Return the grade that has the greatest number of high schoolers. <s> SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> Show me all grades that have at least 4 students. <s> SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4 </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> grade <t> number <c> name <t> text </t> Likes <c> liked_id <t> number <c> student_id <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number <i> Show me all grades that have at least 4 students. <s> SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4 </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> Which grades have 4 or more high schoolers? <s> SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4 </s>
--SEPARATOR--
Highschooler <c> name <t> text <c> ID <t> number <c> grade <t> number </t> Friend <c> friend_id <t> number <c> student_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> Which grades have 4 or more high schoolers? <s> SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4 </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> Show the student IDs and numbers of friends corresponding to each. <s> SELECT student_id ,  count(*) FROM Friend GROUP BY student_id </s>
--SEPARATOR--
Likes <c> student_id <t> number <c> liked_id <t> number </t> Friend <c> friend_id <t> number <c> student_id <t> number </t> Highschooler <c> name <t> text <c> grade <t> number <c> ID <t> number <i> Show the student IDs and numbers of friends corresponding to each. <s> SELECT student_id ,  count(*) FROM Friend GROUP BY student_id </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> How many friends does each student have? <s> SELECT student_id ,  count(*) FROM Friend GROUP BY student_id </s>
--SEPARATOR--
Likes <c> student_id <t> number <c> liked_id <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Highschooler <c> grade <t> number <c> name <t> text <c> ID <t> number <i> How many friends does each student have? <s> SELECT student_id ,  count(*) FROM Friend GROUP BY student_id </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> Show the names of high school students and their corresponding number of friends. <s> SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id </s>
--SEPARATOR--
Friend <c> friend_id <t> number <c> student_id <t> number </t> Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> Show the names of high school students and their corresponding number of friends. <s> SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> What are the names of the high schoolers and how many friends does each have? <s> SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id </s>
--SEPARATOR--
Friend <c> friend_id <t> number <c> student_id <t> number </t> Likes <c> liked_id <t> number <c> student_id <t> number </t> Highschooler <c> name <t> text <c> grade <t> number <c> ID <t> number <i> What are the names of the high schoolers and how many friends does each have? <s> SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> What is the name of the high schooler who has the greatest number of friends? <s> SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Friend <c> friend_id <t> number <c> student_id <t> number </t> Highschooler <c> grade <t> number <c> ID <t> number <c> name <t> text </t> Likes <c> liked_id <t> number <c> student_id <t> number <i> What is the name of the high schooler who has the greatest number of friends? <s> SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> Return the name of the high school student with the most friends. <s> SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Likes <c> liked_id <t> number <c> student_id <t> number </t> Friend <c> friend_id <t> number <c> student_id <t> number </t> Highschooler <c> grade <t> number <c> ID <t> number <c> name <t> text <i> Return the name of the high school student with the most friends. <s> SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> Show the names of high schoolers who have at least 3 friends. <s> SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3 </s>
--SEPARATOR--
Highschooler <c> grade <t> number <c> name <t> text <c> ID <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> Show the names of high schoolers who have at least 3 friends. <s> SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3 </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> What are the names of high schoolers who have 3 or more friends? <s> SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3 </s>
--SEPARATOR--
Likes <c> liked_id <t> number <c> student_id <t> number </t> Highschooler <c> ID <t> number <c> grade <t> number <c> name <t> text </t> Friend <c> student_id <t> number <c> friend_id <t> number <i> What are the names of high schoolers who have 3 or more friends? <s> SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3 </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> Show the names of all of the high schooler Kyle's friends. <s> SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle" </s>
--SEPARATOR--
Likes <c> liked_id <t> number <c> student_id <t> number </t> Highschooler <c> name <t> text <c> ID <t> number <c> grade <t> number </t> Friend <c> friend_id <t> number <c> student_id <t> number <i> Show the names of all of the high schooler Kyle's friends. <s> SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle" </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> Return the names of friends of the high school student Kyle. <s> SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle" </s>
--SEPARATOR--
Friend <c> friend_id <t> number <c> student_id <t> number </t> Highschooler <c> grade <t> number <c> name <t> text <c> ID <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> Return the names of friends of the high school student Kyle. <s> SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle" </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> How many friends does the high school student Kyle have? <s> SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle" </s>
--SEPARATOR--
Highschooler <c> name <t> text <c> ID <t> number <c> grade <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number </t> Friend <c> friend_id <t> number <c> student_id <t> number <i> How many friends does the high school student Kyle have? <s> SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle" </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> Count the number of friends Kyle has. <s> SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle" </s>
--SEPARATOR--
Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> liked_id <t> number <c> student_id <t> number </t> Highschooler <c> ID <t> number <c> grade <t> number <c> name <t> text <i> Count the number of friends Kyle has. <s> SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle" </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> Show ids of all students who do not have any friends. <s> SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend </s>
--SEPARATOR--
Friend <c> friend_id <t> number <c> student_id <t> number </t> Highschooler <c> grade <t> number <c> name <t> text <c> ID <t> number </t> Likes <c> liked_id <t> number <c> student_id <t> number <i> Show ids of all students who do not have any friends. <s> SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> What are the ids of high school students who do not have friends? <s> SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend </s>
--SEPARATOR--
Friend <c> student_id <t> number <c> friend_id <t> number </t> Highschooler <c> grade <t> number <c> name <t> text <c> ID <t> number </t> Likes <c> liked_id <t> number <c> student_id <t> number <i> What are the ids of high school students who do not have friends? <s> SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> Show names of all high school students who do not have any friends. <s> SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id </s>
--SEPARATOR--
Friend <c> friend_id <t> number <c> student_id <t> number </t> Likes <c> liked_id <t> number <c> student_id <t> number </t> Highschooler <c> name <t> text <c> ID <t> number <c> grade <t> number <i> Show names of all high school students who do not have any friends. <s> SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> What are the names of students who have no friends? <s> SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id </s>
--SEPARATOR--
Friend <c> friend_id <t> number <c> student_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number </t> Highschooler <c> name <t> text <c> grade <t> number <c> ID <t> number <i> What are the names of students who have no friends? <s> SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> Show the ids of high schoolers who have friends and are also liked by someone else. <s> SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes </s>
--SEPARATOR--
Highschooler <c> name <t> text <c> ID <t> number <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> Show the ids of high schoolers who have friends and are also liked by someone else. <s> SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> What are the ids of students who both have friends and are liked? <s> SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes </s>
--SEPARATOR--
Friend <c> friend_id <t> number <c> student_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number </t> Highschooler <c> name <t> text <c> ID <t> number <c> grade <t> number <i> What are the ids of students who both have friends and are liked? <s> SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> Show name of all students who have some friends and also are liked by someone else. <s> SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id </s>
--SEPARATOR--
Friend <c> student_id <t> number <c> friend_id <t> number </t> Highschooler <c> name <t> text <c> ID <t> number <c> grade <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> Show name of all students who have some friends and also are liked by someone else. <s> SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> What are the names of high schoolers who both have friends and are liked? <s> SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id </s>
--SEPARATOR--
Likes <c> student_id <t> number <c> liked_id <t> number </t> Friend <c> friend_id <t> number <c> student_id <t> number </t> Highschooler <c> grade <t> number <c> name <t> text <c> ID <t> number <i> What are the names of high schoolers who both have friends and are liked? <s> SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> Count the number of likes for each student id. <s> SELECT student_id ,  count(*) FROM Likes GROUP BY student_id </s>
--SEPARATOR--
Likes <c> student_id <t> number <c> liked_id <t> number </t> Highschooler <c> grade <t> number <c> ID <t> number <c> name <t> text </t> Friend <c> friend_id <t> number <c> student_id <t> number <i> Count the number of likes for each student id. <s> SELECT student_id ,  count(*) FROM Likes GROUP BY student_id </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> How many likes correspond to each student id? <s> SELECT student_id ,  count(*) FROM Likes GROUP BY student_id </s>
--SEPARATOR--
Friend <c> student_id <t> number <c> friend_id <t> number </t> Highschooler <c> grade <t> number <c> ID <t> number <c> name <t> text </t> Likes <c> liked_id <t> number <c> student_id <t> number <i> How many likes correspond to each student id? <s> SELECT student_id ,  count(*) FROM Likes GROUP BY student_id </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> Show the names of high schoolers who have likes, and numbers of likes for each. <s> SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id </s>
--SEPARATOR--
Likes <c> liked_id <t> number <c> student_id <t> number </t> Highschooler <c> grade <t> number <c> name <t> text <c> ID <t> number </t> Friend <c> friend_id <t> number <c> student_id <t> number <i> Show the names of high schoolers who have likes, and numbers of likes for each. <s> SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> What are the names of high schoolers who have likes, and how many likes does each have? <s> SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id </s>
--SEPARATOR--
Friend <c> student_id <t> number <c> friend_id <t> number </t> Highschooler <c> grade <t> number <c> ID <t> number <c> name <t> text </t> Likes <c> liked_id <t> number <c> student_id <t> number <i> What are the names of high schoolers who have likes, and how many likes does each have? <s> SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> What is the name of the high schooler who has the greatest number of likes? <s> SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Friend <c> friend_id <t> number <c> student_id <t> number </t> Likes <c> liked_id <t> number <c> student_id <t> number </t> Highschooler <c> grade <t> number <c> name <t> text <c> ID <t> number <i> What is the name of the high schooler who has the greatest number of likes? <s> SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> Give the name of the student with the most likes. <s> SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Friend <c> student_id <t> number <c> friend_id <t> number </t> Highschooler <c> name <t> text <c> grade <t> number <c> ID <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> Give the name of the student with the most likes. <s> SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> Show the names of students who have at least 2 likes. <s> SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2 </s>
--SEPARATOR--
Friend <c> friend_id <t> number <c> student_id <t> number </t> Highschooler <c> ID <t> number <c> grade <t> number <c> name <t> text </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> Show the names of students who have at least 2 likes. <s> SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2 </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> What are the names of students who have 2 or more likes? <s> SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2 </s>
--SEPARATOR--
Likes <c> student_id <t> number <c> liked_id <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Highschooler <c> name <t> text <c> ID <t> number <c> grade <t> number <i> What are the names of students who have 2 or more likes? <s> SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2 </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> Show the names of students who have a grade higher than 5 and have at least 2 friends. <s> SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2 </s>
--SEPARATOR--
Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> liked_id <t> number <c> student_id <t> number </t> Highschooler <c> name <t> text <c> ID <t> number <c> grade <t> number <i> Show the names of students who have a grade higher than 5 and have at least 2 friends. <s> SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2 </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> What are the names of high schoolers who have a grade of over 5 and have 2 or more friends? <s> SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2 </s>
--SEPARATOR--
Friend <c> friend_id <t> number <c> student_id <t> number </t> Likes <c> liked_id <t> number <c> student_id <t> number </t> Highschooler <c> name <t> text <c> ID <t> number <c> grade <t> number <i> What are the names of high schoolers who have a grade of over 5 and have 2 or more friends? <s> SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2 </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> How many likes does Kyle have? <s> SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle" </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> grade <t> number <c> name <t> text </t> Likes <c> student_id <t> number <c> liked_id <t> number </t> Friend <c> friend_id <t> number <c> student_id <t> number <i> How many likes does Kyle have? <s> SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle" </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> Return the number of likes that the high schooler named Kyle has. <s> SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle" </s>
--SEPARATOR--
Highschooler <c> name <t> text <c> grade <t> number <c> ID <t> number </t> Likes <c> liked_id <t> number <c> student_id <t> number </t> Friend <c> friend_id <t> number <c> student_id <t> number <i> Return the number of likes that the high schooler named Kyle has. <s> SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle" </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> Find the average grade of all students who have some friends. <s> SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id) </s>
--SEPARATOR--
Highschooler <c> name <t> text <c> ID <t> number <c> grade <t> number </t> Friend <c> friend_id <t> number <c> student_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> Find the average grade of all students who have some friends. <s> SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id) </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> What is the average grade of students who have friends? <s> SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id) </s>
--SEPARATOR--
Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number </t> Highschooler <c> grade <t> number <c> ID <t> number <c> name <t> text <i> What is the average grade of students who have friends? <s> SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id) </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> Find the minimum grade of students who have no friends. <s> SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id) </s>
--SEPARATOR--
Likes <c> student_id <t> number <c> liked_id <t> number </t> Highschooler <c> name <t> text <c> ID <t> number <c> grade <t> number </t> Friend <c> friend_id <t> number <c> student_id <t> number <i> Find the minimum grade of students who have no friends. <s> SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id) </s>
--SEPARATOR--
Highschooler <c> ID <t> number <c> name <t> text <c> grade <t> number </t> Friend <c> student_id <t> number <c> friend_id <t> number </t> Likes <c> student_id <t> number <c> liked_id <t> number <i> What is the lowest grade of students who do not have any friends? <s> SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id) </s>
--SEPARATOR--
Friend <c> student_id <t> number <c> friend_id <t> number </t> Highschooler <c> ID <t> number <c> grade <t> number <c> name <t> text </t> Likes <c> liked_id <t> number <c> student_id <t> number <i> What is the lowest grade of students who do not have any friends? <s> SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id) </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> Which states have both owners and professionals living there? <s> SELECT state FROM Owners INTERSECT SELECT state FROM Professionals </s>
--SEPARATOR--
Dogs <c> breed_code <t> text <c> date_adopted <t> time <c> gender <t> text <c> age <t> text <c> owner_id <t> number <c> weight <t> text <c> name <t> text <c> dog_id <t> number <c> date_of_birth <t> time <c> date_departed <t> time <c> date_arrived <t> time <c> size_code <t> text <c> abandoned_yn <t> text </t> Professionals <c> last_name <t> text <c> street <t> text <c> first_name <t> text <c> city <t> text <c> role_code <t> text <c> email_address <t> text <c> zip_code <t> text <c> state <t> text <c> professional_id <t> number <c> home_phone <t> text <c> cell_number <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Charges <c> charge_amount <t> number <c> charge_id <t> number <c> charge_type <t> text </t> Treatments <c> professional_id <t> number <c> dog_id <t> number <c> treatment_id <t> number <c> cost_of_treatment <t> number <c> date_of_treatment <t> time <c> treatment_type_code <t> text </t> Owners <c> email_address <t> text <c> city <t> text <c> home_phone <t> text <c> state <t> text <c> first_name <t> text <c> cell_number <t> text <c> last_name <t> text <c> zip_code <t> text <c> street <t> text <c> owner_id <t> number <i> Which states have both owners and professionals living there? <s> SELECT state FROM Owners INTERSECT SELECT state FROM Professionals </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> Find the states where both owners and professionals live. <s> SELECT state FROM Owners INTERSECT SELECT state FROM Professionals </s>
--SEPARATOR--
Treatment_Types <c> treatment_type_description <t> text <c> treatment_type_code <t> text </t> Dogs <c> abandoned_yn <t> text <c> age <t> text <c> weight <t> text <c> name <t> text <c> date_departed <t> time <c> date_adopted <t> time <c> dog_id <t> number <c> owner_id <t> number <c> breed_code <t> text <c> date_arrived <t> time <c> gender <t> text <c> size_code <t> text <c> date_of_birth <t> time </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Professionals <c> zip_code <t> text <c> first_name <t> text <c> email_address <t> text <c> role_code <t> text <c> city <t> text <c> street <t> text <c> professional_id <t> number <c> last_name <t> text <c> home_phone <t> text <c> state <t> text <c> cell_number <t> text </t> Owners <c> city <t> text <c> zip_code <t> text <c> street <t> text <c> first_name <t> text <c> cell_number <t> text <c> last_name <t> text <c> email_address <t> text <c> state <t> text <c> home_phone <t> text <c> owner_id <t> number </t> Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Treatments <c> professional_id <t> number <c> treatment_id <t> number <c> cost_of_treatment <t> number <c> dog_id <t> number <c> date_of_treatment <t> time <c> treatment_type_code <t> text <i> Find the states where both owners and professionals live. <s> SELECT state FROM Owners INTERSECT SELECT state FROM Professionals </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> What is the average age of the dogs who have gone through any treatments? <s> SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments ) </s>
--SEPARATOR--
Sizes <c> size_description <t> text <c> size_code <t> text </t> Professionals <c> city <t> text <c> role_code <t> text <c> email_address <t> text <c> street <t> text <c> cell_number <t> text <c> home_phone <t> text <c> zip_code <t> text <c> state <t> text <c> first_name <t> text <c> professional_id <t> number <c> last_name <t> text </t> Owners <c> last_name <t> text <c> street <t> text <c> first_name <t> text <c> home_phone <t> text <c> city <t> text <c> state <t> text <c> email_address <t> text <c> owner_id <t> number <c> zip_code <t> text <c> cell_number <t> text </t> Treatment_Types <c> treatment_type_description <t> text <c> treatment_type_code <t> text </t> Treatments <c> dog_id <t> number <c> cost_of_treatment <t> number <c> treatment_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time </t> Dogs <c> gender <t> text <c> weight <t> text <c> dog_id <t> number <c> breed_code <t> text <c> abandoned_yn <t> text <c> size_code <t> text <c> date_arrived <t> time <c> date_departed <t> time <c> date_of_birth <t> time <c> name <t> text <c> owner_id <t> number <c> age <t> text <c> date_adopted <t> time </t> Charges <c> charge_id <t> number <c> charge_amount <t> number <c> charge_type <t> text </t> Breeds <c> breed_name <t> text <c> breed_code <t> text <i> What is the average age of the dogs who have gone through any treatments? <s> SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments ) </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> Find the average age of the dogs who went through treatments. <s> SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments ) </s>
--SEPARATOR--
Treatment_Types <c> treatment_type_description <t> text <c> treatment_type_code <t> text </t> Owners <c> zip_code <t> text <c> state <t> text <c> city <t> text <c> cell_number <t> text <c> home_phone <t> text <c> street <t> text <c> first_name <t> text <c> owner_id <t> number <c> email_address <t> text <c> last_name <t> text </t> Professionals <c> first_name <t> text <c> email_address <t> text <c> street <t> text <c> state <t> text <c> last_name <t> text <c> home_phone <t> text <c> role_code <t> text <c> cell_number <t> text <c> professional_id <t> number <c> zip_code <t> text <c> city <t> text </t> Dogs <c> name <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_departed <t> time <c> size_code <t> text <c> date_adopted <t> time <c> breed_code <t> text <c> abandoned_yn <t> text <c> owner_id <t> number <c> dog_id <t> number <c> age <t> text <c> gender <t> text <c> date_of_birth <t> time </t> Breeds <c> breed_name <t> text <c> breed_code <t> text </t> Sizes <c> size_description <t> text <c> size_code <t> text </t> Charges <c> charge_amount <t> number <c> charge_id <t> number <c> charge_type <t> text </t> Treatments <c> cost_of_treatment <t> number <c> date_of_treatment <t> time <c> professional_id <t> number <c> treatment_id <t> number <c> treatment_type_code <t> text <c> dog_id <t> number <i> Find the average age of the dogs who went through treatments. <s> SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments ) </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> Which professionals live in the state of Indiana or have done treatment on more than 2 treatments? List his or her id, last name and cell phone. <s> SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2 </s>
--SEPARATOR--
Sizes <c> size_description <t> text <c> size_code <t> text </t> Professionals <c> first_name <t> text <c> last_name <t> text <c> home_phone <t> text <c> professional_id <t> number <c> street <t> text <c> cell_number <t> text <c> zip_code <t> text <c> email_address <t> text <c> role_code <t> text <c> city <t> text <c> state <t> text </t> Breeds <c> breed_name <t> text <c> breed_code <t> text </t> Charges <c> charge_type <t> text <c> charge_id <t> number <c> charge_amount <t> number </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> state <t> text <c> owner_id <t> number <c> email_address <t> text <c> last_name <t> text <c> zip_code <t> text <c> street <t> text <c> home_phone <t> text <c> first_name <t> text <c> city <t> text <c> cell_number <t> text </t> Dogs <c> date_departed <t> time <c> abandoned_yn <t> text <c> weight <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_adopted <t> time <c> breed_code <t> text <c> gender <t> text <c> owner_id <t> number <c> date_of_birth <t> time <c> date_arrived <t> time <c> dog_id <t> number </t> Treatments <c> date_of_treatment <t> time <c> dog_id <t> number <c> cost_of_treatment <t> number <c> treatment_type_code <t> text <c> professional_id <t> number <c> treatment_id <t> number <i> Which professionals live in the state of Indiana or have done treatment on more than 2 treatments? List his or her id, last name and cell phone. <s> SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2 </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> Find the id, last name and cell phone of the professionals who live in the state of Indiana or have performed more than two treatments. <s> SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2 </s>
--SEPARATOR--
Owners <c> zip_code <t> text <c> home_phone <t> text <c> first_name <t> text <c> state <t> text <c> city <t> text <c> street <t> text <c> cell_number <t> text <c> owner_id <t> number <c> last_name <t> text <c> email_address <t> text </t> Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Dogs <c> date_departed <t> time <c> date_adopted <t> time <c> size_code <t> text <c> date_arrived <t> time <c> breed_code <t> text <c> gender <t> text <c> abandoned_yn <t> text <c> owner_id <t> number <c> age <t> text <c> date_of_birth <t> time <c> weight <t> text <c> dog_id <t> number <c> name <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Professionals <c> zip_code <t> text <c> state <t> text <c> street <t> text <c> first_name <t> text <c> city <t> text <c> role_code <t> text <c> professional_id <t> number <c> home_phone <t> text <c> last_name <t> text <c> email_address <t> text <c> cell_number <t> text </t> Sizes <c> size_description <t> text <c> size_code <t> text </t> Treatments <c> dog_id <t> number <c> professional_id <t> number <c> date_of_treatment <t> time <c> treatment_id <t> number <c> cost_of_treatment <t> number <c> treatment_type_code <t> text </t> Charges <c> charge_amount <t> number <c> charge_id <t> number <c> charge_type <t> text <i> Find the id, last name and cell phone of the professionals who live in the state of Indiana or have performed more than two treatments. <s> SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2 </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> Which dogs have not cost their owner more than 1000 for treatment ? List the dog names . <s> select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 ) </s>
--SEPARATOR--
Treatments <c> professional_id <t> number <c> dog_id <t> number <c> treatment_type_code <t> text <c> treatment_id <t> number <c> date_of_treatment <t> time <c> cost_of_treatment <t> number </t> Dogs <c> size_code <t> text <c> abandoned_yn <t> text <c> date_departed <t> time <c> weight <t> text <c> dog_id <t> number <c> date_of_birth <t> time <c> gender <t> text <c> name <t> text <c> date_adopted <t> time <c> breed_code <t> text <c> owner_id <t> number <c> date_arrived <t> time <c> age <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Owners <c> cell_number <t> text <c> last_name <t> text <c> state <t> text <c> first_name <t> text <c> email_address <t> text <c> owner_id <t> number <c> city <t> text <c> home_phone <t> text <c> street <t> text <c> zip_code <t> text </t> Breeds <c> breed_name <t> text <c> breed_code <t> text </t> Charges <c> charge_amount <t> number <c> charge_type <t> text <c> charge_id <t> number </t> Professionals <c> last_name <t> text <c> first_name <t> text <c> professional_id <t> number <c> city <t> text <c> email_address <t> text <c> state <t> text <c> home_phone <t> text <c> street <t> text <c> zip_code <t> text <c> cell_number <t> text <c> role_code <t> text <i> Which dogs have not cost their owner more than 1000 for treatment ? List the dog names . <s> select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 ) </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> What are the names of the dogs for which the owner has not spend more than 1000 for treatment ? <s> select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 ) </s>
--SEPARATOR--
Sizes <c> size_code <t> text <c> size_description <t> text </t> Professionals <c> state <t> text <c> last_name <t> text <c> city <t> text <c> email_address <t> text <c> role_code <t> text <c> street <t> text <c> professional_id <t> number <c> first_name <t> text <c> cell_number <t> text <c> home_phone <t> text <c> zip_code <t> text </t> Charges <c> charge_amount <t> number <c> charge_type <t> text <c> charge_id <t> number </t> Treatments <c> treatment_type_code <t> text <c> dog_id <t> number <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <c> professional_id <t> number <c> treatment_id <t> number </t> Owners <c> zip_code <t> text <c> owner_id <t> number <c> city <t> text <c> state <t> text <c> email_address <t> text <c> street <t> text <c> first_name <t> text <c> last_name <t> text <c> cell_number <t> text <c> home_phone <t> text </t> Breeds <c> breed_name <t> text <c> breed_code <t> text </t> Dogs <c> gender <t> text <c> weight <t> text <c> breed_code <t> text <c> size_code <t> text <c> owner_id <t> number <c> age <t> text <c> date_arrived <t> time <c> abandoned_yn <t> text <c> dog_id <t> number <c> date_departed <t> time <c> date_adopted <t> time <c> name <t> text <c> date_of_birth <t> time </t> Treatment_Types <c> treatment_type_description <t> text <c> treatment_type_code <t> text <i> What are the names of the dogs for which the owner has not spend more than 1000 for treatment ? <s> select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 ) </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> Which first names are used for professionals or owners but are not used as dog names? <s> SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs </s>
--SEPARATOR--
Charges <c> charge_id <t> number <c> charge_amount <t> number <c> charge_type <t> text </t> Dogs <c> size_code <t> text <c> date_departed <t> time <c> gender <t> text <c> age <t> text <c> date_of_birth <t> time <c> dog_id <t> number <c> name <t> text <c> date_adopted <t> time <c> abandoned_yn <t> text <c> date_arrived <t> time <c> breed_code <t> text <c> owner_id <t> number <c> weight <t> text </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Owners <c> street <t> text <c> last_name <t> text <c> first_name <t> text <c> email_address <t> text <c> state <t> text <c> owner_id <t> number <c> zip_code <t> text <c> home_phone <t> text <c> cell_number <t> text <c> city <t> text </t> Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Professionals <c> last_name <t> text <c> cell_number <t> text <c> state <t> text <c> street <t> text <c> professional_id <t> number <c> zip_code <t> text <c> city <t> text <c> first_name <t> text <c> email_address <t> text <c> role_code <t> text <c> home_phone <t> text </t> Treatment_Types <c> treatment_type_description <t> text <c> treatment_type_code <t> text </t> Treatments <c> cost_of_treatment <t> number <c> treatment_id <t> number <c> date_of_treatment <t> time <c> treatment_type_code <t> text <c> dog_id <t> number <c> professional_id <t> number <i> Which first names are used for professionals or owners but are not used as dog names? <s> SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> Find the first names that are used for professionals or owners but are not used as dog names. <s> SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs </s>
--SEPARATOR--
Professionals <c> professional_id <t> number <c> cell_number <t> text <c> zip_code <t> text <c> email_address <t> text <c> state <t> text <c> last_name <t> text <c> street <t> text <c> first_name <t> text <c> role_code <t> text <c> city <t> text <c> home_phone <t> text </t> Charges <c> charge_amount <t> number <c> charge_type <t> text <c> charge_id <t> number </t> Dogs <c> gender <t> text <c> owner_id <t> number <c> date_arrived <t> time <c> date_adopted <t> time <c> breed_code <t> text <c> name <t> text <c> date_of_birth <t> time <c> date_departed <t> time <c> dog_id <t> number <c> size_code <t> text <c> age <t> text <c> abandoned_yn <t> text <c> weight <t> text </t> Treatment_Types <c> treatment_type_description <t> text <c> treatment_type_code <t> text </t> Treatments <c> treatment_type_code <t> text <c> cost_of_treatment <t> number <c> professional_id <t> number <c> date_of_treatment <t> time <c> dog_id <t> number <c> treatment_id <t> number </t> Owners <c> street <t> text <c> home_phone <t> text <c> cell_number <t> text <c> city <t> text <c> email_address <t> text <c> state <t> text <c> owner_id <t> number <c> zip_code <t> text <c> last_name <t> text <c> first_name <t> text </t> Sizes <c> size_description <t> text <c> size_code <t> text </t> Breeds <c> breed_code <t> text <c> breed_name <t> text <i> Find the first names that are used for professionals or owners but are not used as dog names. <s> SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> Which professional did not operate any treatment on dogs? List the professional's id, role and email. <s> SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id </s>
--SEPARATOR--
Sizes <c> size_description <t> text <c> size_code <t> text </t> Charges <c> charge_amount <t> number <c> charge_id <t> number <c> charge_type <t> text </t> Professionals <c> cell_number <t> text <c> professional_id <t> number <c> home_phone <t> text <c> zip_code <t> text <c> street <t> text <c> first_name <t> text <c> state <t> text <c> email_address <t> text <c> last_name <t> text <c> role_code <t> text <c> city <t> text </t> Dogs <c> date_of_birth <t> time <c> owner_id <t> number <c> gender <t> text <c> age <t> text <c> date_departed <t> time <c> weight <t> text <c> dog_id <t> number <c> name <t> text <c> abandoned_yn <t> text <c> date_arrived <t> time <c> size_code <t> text <c> date_adopted <t> time <c> breed_code <t> text </t> Owners <c> last_name <t> text <c> owner_id <t> number <c> email_address <t> text <c> city <t> text <c> home_phone <t> text <c> cell_number <t> text <c> state <t> text <c> zip_code <t> text <c> street <t> text <c> first_name <t> text </t> Treatment_Types <c> treatment_type_description <t> text <c> treatment_type_code <t> text </t> Treatments <c> date_of_treatment <t> time <c> treatment_id <t> number <c> treatment_type_code <t> text <c> professional_id <t> number <c> cost_of_treatment <t> number <c> dog_id <t> number </t> Breeds <c> breed_name <t> text <c> breed_code <t> text <i> Which professional did not operate any treatment on dogs? List the professional's id, role and email. <s> SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> Give me the id, role and email of the professionals who did not perform any treatment on dogs. <s> SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id </s>
--SEPARATOR--
Owners <c> state <t> text <c> cell_number <t> text <c> home_phone <t> text <c> email_address <t> text <c> first_name <t> text <c> zip_code <t> text <c> city <t> text <c> owner_id <t> number <c> street <t> text <c> last_name <t> text </t> Breeds <c> breed_name <t> text <c> breed_code <t> text </t> Professionals <c> professional_id <t> number <c> street <t> text <c> city <t> text <c> last_name <t> text <c> cell_number <t> text <c> first_name <t> text <c> state <t> text <c> home_phone <t> text <c> zip_code <t> text <c> email_address <t> text <c> role_code <t> text </t> Charges <c> charge_amount <t> number <c> charge_type <t> text <c> charge_id <t> number </t> Dogs <c> name <t> text <c> abandoned_yn <t> text <c> date_of_birth <t> time <c> size_code <t> text <c> date_adopted <t> time <c> weight <t> text <c> dog_id <t> number <c> date_arrived <t> time <c> date_departed <t> time <c> owner_id <t> number <c> gender <t> text <c> breed_code <t> text <c> age <t> text </t> Treatments <c> treatment_type_code <t> text <c> treatment_id <t> number <c> date_of_treatment <t> time <c> dog_id <t> number <c> cost_of_treatment <t> number <c> professional_id <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text <i> Give me the id, role and email of the professionals who did not perform any treatment on dogs. <s> SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> Which owner owns the most dogs? List the owner id, first name and last name. <s> SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Professionals <c> professional_id <t> number <c> city <t> text <c> last_name <t> text <c> home_phone <t> text <c> email_address <t> text <c> state <t> text <c> role_code <t> text <c> cell_number <t> text <c> zip_code <t> text <c> first_name <t> text <c> street <t> text </t> Dogs <c> weight <t> text <c> abandoned_yn <t> text <c> date_arrived <t> time <c> date_departed <t> time <c> owner_id <t> number <c> date_of_birth <t> time <c> age <t> text <c> size_code <t> text <c> dog_id <t> number <c> name <t> text <c> date_adopted <t> time <c> gender <t> text <c> breed_code <t> text </t> Treatments <c> treatment_type_code <t> text <c> treatment_id <t> number <c> dog_id <t> number <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <c> professional_id <t> number </t> Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_type <t> text <c> charge_id <t> number <c> charge_amount <t> number </t> Sizes <c> size_description <t> text <c> size_code <t> text </t> Owners <c> street <t> text <c> email_address <t> text <c> cell_number <t> text <c> city <t> text <c> owner_id <t> number <c> state <t> text <c> zip_code <t> text <c> first_name <t> text <c> home_phone <t> text <c> last_name <t> text <i> Which owner owns the most dogs? List the owner id, first name and last name. <s> SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> Return the owner id, first name and last name of the owner who has the most dogs. <s> SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Professionals <c> home_phone <t> text <c> city <t> text <c> last_name <t> text <c> role_code <t> text <c> zip_code <t> text <c> first_name <t> text <c> email_address <t> text <c> street <t> text <c> state <t> text <c> cell_number <t> text <c> professional_id <t> number </t> Charges <c> charge_amount <t> number <c> charge_id <t> number <c> charge_type <t> text </t> Dogs <c> abandoned_yn <t> text <c> weight <t> text <c> date_departed <t> time <c> name <t> text <c> age <t> text <c> size_code <t> text <c> dog_id <t> number <c> date_adopted <t> time <c> date_of_birth <t> time <c> gender <t> text <c> owner_id <t> number <c> date_arrived <t> time <c> breed_code <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Breeds <c> breed_name <t> text <c> breed_code <t> text </t> Owners <c> city <t> text <c> street <t> text <c> state <t> text <c> home_phone <t> text <c> owner_id <t> number <c> zip_code <t> text <c> first_name <t> text <c> cell_number <t> text <c> last_name <t> text <c> email_address <t> text </t> Sizes <c> size_description <t> text <c> size_code <t> text </t> Treatments <c> cost_of_treatment <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> dog_id <t> number <c> professional_id <t> number <c> treatment_id <t> number <i> Return the owner id, first name and last name of the owner who has the most dogs. <s> SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> Which professionals have done at least two treatments? List the professional's id, role, and first name. <s> SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2 </s>
--SEPARATOR--
Dogs <c> gender <t> text <c> dog_id <t> number <c> size_code <t> text <c> weight <t> text <c> owner_id <t> number <c> date_of_birth <t> time <c> date_departed <t> time <c> abandoned_yn <t> text <c> date_adopted <t> time <c> breed_code <t> text <c> date_arrived <t> time <c> age <t> text <c> name <t> text </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_description <t> text <c> treatment_type_code <t> text </t> Treatments <c> professional_id <t> number <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <c> dog_id <t> number <c> treatment_id <t> number <c> treatment_type_code <t> text </t> Professionals <c> first_name <t> text <c> email_address <t> text <c> last_name <t> text <c> street <t> text <c> cell_number <t> text <c> city <t> text <c> role_code <t> text <c> professional_id <t> number <c> zip_code <t> text <c> state <t> text <c> home_phone <t> text </t> Owners <c> home_phone <t> text <c> city <t> text <c> state <t> text <c> last_name <t> text <c> zip_code <t> text <c> cell_number <t> text <c> street <t> text <c> email_address <t> text <c> first_name <t> text <c> owner_id <t> number </t> Charges <c> charge_type <t> text <c> charge_amount <t> number <c> charge_id <t> number </t> Breeds <c> breed_name <t> text <c> breed_code <t> text <i> Which professionals have done at least two treatments? List the professional's id, role, and first name. <s> SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2 </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> What are the id, role, and first name of the professionals who have performed two or more treatments? <s> SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2 </s>
--SEPARATOR--
Treatments <c> cost_of_treatment <t> number <c> professional_id <t> number <c> treatment_id <t> number <c> treatment_type_code <t> text <c> dog_id <t> number <c> date_of_treatment <t> time </t> Charges <c> charge_id <t> number <c> charge_amount <t> number <c> charge_type <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> email_address <t> text <c> state <t> text <c> city <t> text <c> last_name <t> text <c> first_name <t> text <c> cell_number <t> text <c> zip_code <t> text <c> street <t> text <c> home_phone <t> text <c> owner_id <t> number </t> Professionals <c> first_name <t> text <c> city <t> text <c> street <t> text <c> zip_code <t> text <c> home_phone <t> text <c> email_address <t> text <c> last_name <t> text <c> professional_id <t> number <c> role_code <t> text <c> state <t> text <c> cell_number <t> text </t> Sizes <c> size_description <t> text <c> size_code <t> text </t> Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Dogs <c> size_code <t> text <c> weight <t> text <c> breed_code <t> text <c> date_of_birth <t> time <c> abandoned_yn <t> text <c> dog_id <t> number <c> gender <t> text <c> name <t> text <c> date_arrived <t> time <c> date_departed <t> time <c> date_adopted <t> time <c> age <t> text <c> owner_id <t> number <i> What are the id, role, and first name of the professionals who have performed two or more treatments? <s> SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2 </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> What is the name of the breed with the most dogs? <s> SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Dogs <c> owner_id <t> number <c> date_arrived <t> time <c> date_adopted <t> time <c> date_of_birth <t> time <c> date_departed <t> time <c> abandoned_yn <t> text <c> size_code <t> text <c> dog_id <t> number <c> breed_code <t> text <c> name <t> text <c> weight <t> text <c> age <t> text <c> gender <t> text </t> Treatments <c> dog_id <t> number <c> treatment_id <t> number <c> cost_of_treatment <t> number <c> date_of_treatment <t> time <c> treatment_type_code <t> text <c> professional_id <t> number </t> Breeds <c> breed_name <t> text <c> breed_code <t> text </t> Charges <c> charge_type <t> text <c> charge_amount <t> number <c> charge_id <t> number </t> Professionals <c> home_phone <t> text <c> first_name <t> text <c> cell_number <t> text <c> email_address <t> text <c> professional_id <t> number <c> last_name <t> text <c> street <t> text <c> zip_code <t> text <c> role_code <t> text <c> city <t> text <c> state <t> text </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Owners <c> last_name <t> text <c> home_phone <t> text <c> street <t> text <c> cell_number <t> text <c> city <t> text <c> state <t> text <c> email_address <t> text <c> zip_code <t> text <c> first_name <t> text <c> owner_id <t> number </t> Treatment_Types <c> treatment_type_description <t> text <c> treatment_type_code <t> text <i> What is the name of the breed with the most dogs? <s> SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> Which breed do the most dogs have? Give me the breed name. <s> SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Charges <c> charge_type <t> text <c> charge_amount <t> number <c> charge_id <t> number </t> Treatments <c> cost_of_treatment <t> number <c> treatment_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> dog_id <t> number </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Dogs <c> date_adopted <t> time <c> abandoned_yn <t> text <c> age <t> text <c> gender <t> text <c> date_of_birth <t> time <c> breed_code <t> text <c> date_arrived <t> time <c> dog_id <t> number <c> date_departed <t> time <c> weight <t> text <c> owner_id <t> number <c> size_code <t> text <c> name <t> text </t> Owners <c> email_address <t> text <c> home_phone <t> text <c> zip_code <t> text <c> first_name <t> text <c> city <t> text <c> last_name <t> text <c> street <t> text <c> state <t> text <c> owner_id <t> number <c> cell_number <t> text </t> Breeds <c> breed_name <t> text <c> breed_code <t> text </t> Sizes <c> size_description <t> text <c> size_code <t> text </t> Professionals <c> last_name <t> text <c> professional_id <t> number <c> first_name <t> text <c> city <t> text <c> home_phone <t> text <c> email_address <t> text <c> zip_code <t> text <c> state <t> text <c> street <t> text <c> role_code <t> text <c> cell_number <t> text <i> Which breed do the most dogs have? Give me the breed name. <s> SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> Which owner has paid for the most treatments on his or her dogs? List the owner id and last name. <s> SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Treatments <c> professional_id <t> number <c> treatment_id <t> number <c> date_of_treatment <t> time <c> dog_id <t> number <c> cost_of_treatment <t> number <c> treatment_type_code <t> text </t> Dogs <c> owner_id <t> number <c> age <t> text <c> breed_code <t> text <c> abandoned_yn <t> text <c> dog_id <t> number <c> weight <t> text <c> date_adopted <t> time <c> date_arrived <t> time <c> date_of_birth <t> time <c> gender <t> text <c> date_departed <t> time <c> name <t> text <c> size_code <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Breeds <c> breed_name <t> text <c> breed_code <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_description <t> text <c> size_code <t> text </t> Professionals <c> zip_code <t> text <c> city <t> text <c> first_name <t> text <c> home_phone <t> text <c> role_code <t> text <c> email_address <t> text <c> professional_id <t> number <c> cell_number <t> text <c> street <t> text <c> last_name <t> text <c> state <t> text </t> Owners <c> city <t> text <c> cell_number <t> text <c> street <t> text <c> owner_id <t> number <c> email_address <t> text <c> last_name <t> text <c> zip_code <t> text <c> home_phone <t> text <c> state <t> text <c> first_name <t> text <i> Which owner has paid for the most treatments on his or her dogs? List the owner id and last name. <s> SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> Tell me the owner id and last name of the owner who spent the most on treatments of his or her dogs. <s> SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Dogs <c> age <t> text <c> breed_code <t> text <c> date_adopted <t> time <c> dog_id <t> number <c> size_code <t> text <c> date_arrived <t> time <c> date_departed <t> time <c> abandoned_yn <t> text <c> weight <t> text <c> date_of_birth <t> time <c> name <t> text <c> owner_id <t> number <c> gender <t> text </t> Professionals <c> email_address <t> text <c> last_name <t> text <c> home_phone <t> text <c> state <t> text <c> professional_id <t> number <c> city <t> text <c> street <t> text <c> zip_code <t> text <c> cell_number <t> text <c> role_code <t> text <c> first_name <t> text </t> Sizes <c> size_description <t> text <c> size_code <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Treatments <c> treatment_id <t> number <c> professional_id <t> number <c> date_of_treatment <t> time <c> treatment_type_code <t> text <c> cost_of_treatment <t> number <c> dog_id <t> number </t> Charges <c> charge_id <t> number <c> charge_amount <t> number <c> charge_type <t> text </t> Owners <c> city <t> text <c> last_name <t> text <c> street <t> text <c> owner_id <t> number <c> zip_code <t> text <c> state <t> text <c> first_name <t> text <c> home_phone <t> text <c> email_address <t> text <c> cell_number <t> text <i> Tell me the owner id and last name of the owner who spent the most on treatments of his or her dogs. <s> SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1 </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> What is the description of the treatment type that costs the least money in total? <s> SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1 </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_amount <t> number <c> charge_type <t> text </t> Treatment_Types <c> treatment_type_description <t> text <c> treatment_type_code <t> text </t> Sizes <c> size_description <t> text <c> size_code <t> text </t> Treatments <c> professional_id <t> number <c> treatment_type_code <t> text <c> cost_of_treatment <t> number <c> treatment_id <t> number <c> date_of_treatment <t> time <c> dog_id <t> number </t> Professionals <c> email_address <t> text <c> zip_code <t> text <c> state <t> text <c> first_name <t> text <c> role_code <t> text <c> home_phone <t> text <c> last_name <t> text <c> professional_id <t> number <c> street <t> text <c> city <t> text <c> cell_number <t> text </t> Owners <c> last_name <t> text <c> zip_code <t> text <c> home_phone <t> text <c> email_address <t> text <c> state <t> text <c> owner_id <t> number <c> street <t> text <c> city <t> text <c> first_name <t> text <c> cell_number <t> text </t> Dogs <c> date_arrived <t> time <c> date_adopted <t> time <c> name <t> text <c> owner_id <t> number <c> abandoned_yn <t> text <c> gender <t> text <c> date_departed <t> time <c> dog_id <t> number <c> age <t> text <c> breed_code <t> text <c> weight <t> text <c> date_of_birth <t> time <c> size_code <t> text <i> What is the description of the treatment type that costs the least money in total? <s> SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1 </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> Give me the description of the treatment type whose total cost is the lowest. <s> SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1 </s>
--SEPARATOR--
Owners <c> cell_number <t> text <c> email_address <t> text <c> street <t> text <c> zip_code <t> text <c> first_name <t> text <c> home_phone <t> text <c> city <t> text <c> owner_id <t> number <c> last_name <t> text <c> state <t> text </t> Sizes <c> size_description <t> text <c> size_code <t> text </t> Treatments <c> cost_of_treatment <t> number <c> treatment_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> professional_id <t> number <c> dog_id <t> number </t> Professionals <c> role_code <t> text <c> zip_code <t> text <c> cell_number <t> text <c> street <t> text <c> city <t> text <c> email_address <t> text <c> home_phone <t> text <c> professional_id <t> number <c> first_name <t> text <c> state <t> text <c> last_name <t> text </t> Treatment_Types <c> treatment_type_description <t> text <c> treatment_type_code <t> text </t> Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Dogs <c> date_adopted <t> time <c> date_arrived <t> time <c> age <t> text <c> breed_code <t> text <c> name <t> text <c> owner_id <t> number <c> gender <t> text <c> size_code <t> text <c> abandoned_yn <t> text <c> weight <t> text <c> date_departed <t> time <c> dog_id <t> number <c> date_of_birth <t> time <i> Give me the description of the treatment type whose total cost is the lowest. <s> SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1 </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> Which owner has paid the largest amount of money in total for their dogs? Show the owner id and zip code. <s> SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1 </s>
--SEPARATOR--
Charges <c> charge_amount <t> number <c> charge_id <t> number <c> charge_type <t> text </t> Dogs <c> date_departed <t> time <c> dog_id <t> number <c> breed_code <t> text <c> owner_id <t> number <c> date_arrived <t> time <c> date_adopted <t> time <c> size_code <t> text <c> gender <t> text <c> age <t> text <c> name <t> text <c> weight <t> text <c> abandoned_yn <t> text <c> date_of_birth <t> time </t> Owners <c> street <t> text <c> home_phone <t> text <c> email_address <t> text <c> first_name <t> text <c> last_name <t> text <c> owner_id <t> number <c> state <t> text <c> cell_number <t> text <c> zip_code <t> text <c> city <t> text </t> Professionals <c> role_code <t> text <c> zip_code <t> text <c> state <t> text <c> home_phone <t> text <c> professional_id <t> number <c> cell_number <t> text <c> city <t> text <c> first_name <t> text <c> street <t> text <c> last_name <t> text <c> email_address <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Treatments <c> date_of_treatment <t> time <c> dog_id <t> number <c> treatment_id <t> number <c> treatment_type_code <t> text <c> cost_of_treatment <t> number <c> professional_id <t> number </t> Breeds <c> breed_name <t> text <c> breed_code <t> text </t> Sizes <c> size_code <t> text <c> size_description <t> text <i> Which owner has paid the largest amount of money in total for their dogs? Show the owner id and zip code. <s> SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1 </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> Find the owner id and zip code of the owner who spent the most money in total for his or her dogs. <s> SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1 </s>
--SEPARATOR--
Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number </t> Treatment_Types <c> treatment_type_description <t> text <c> treatment_type_code <t> text </t> Breeds <c> breed_name <t> text <c> breed_code <t> text </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Charges <c> charge_id <t> number <c> charge_amount <t> number <c> charge_type <t> text </t> Owners <c> street <t> text <c> first_name <t> text <c> owner_id <t> number <c> cell_number <t> text <c> email_address <t> text <c> zip_code <t> text <c> last_name <t> text <c> city <t> text <c> home_phone <t> text <c> state <t> text </t> Dogs <c> name <t> text <c> date_adopted <t> time <c> age <t> text <c> dog_id <t> number <c> date_departed <t> time <c> size_code <t> text <c> date_arrived <t> time <c> weight <t> text <c> owner_id <t> number <c> breed_code <t> text <c> gender <t> text <c> abandoned_yn <t> text <c> date_of_birth <t> time </t> Professionals <c> zip_code <t> text <c> professional_id <t> number <c> role_code <t> text <c> email_address <t> text <c> first_name <t> text <c> home_phone <t> text <c> cell_number <t> text <c> state <t> text <c> street <t> text <c> last_name <t> text <c> city <t> text <i> Find the owner id and zip code of the owner who spent the most money in total for his or her dogs. <s> SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1 </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> Which professionals have done at least two types of treatments? List the professional id and cell phone. <s> SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2 </s>
--SEPARATOR--
Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatments <c> date_of_treatment <t> time <c> professional_id <t> number <c> cost_of_treatment <t> number <c> treatment_id <t> number <c> dog_id <t> number <c> treatment_type_code <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> home_phone <t> text <c> owner_id <t> number <c> last_name <t> text <c> city <t> text <c> cell_number <t> text <c> zip_code <t> text <c> street <t> text <c> state <t> text <c> email_address <t> text <c> first_name <t> text </t> Breeds <c> breed_name <t> text <c> breed_code <t> text </t> Professionals <c> role_code <t> text <c> last_name <t> text <c> professional_id <t> number <c> state <t> text <c> street <t> text <c> city <t> text <c> home_phone <t> text <c> cell_number <t> text <c> zip_code <t> text <c> email_address <t> text <c> first_name <t> text </t> Charges <c> charge_id <t> number <c> charge_amount <t> number <c> charge_type <t> text </t> Dogs <c> date_departed <t> time <c> date_arrived <t> time <c> dog_id <t> number <c> weight <t> text <c> owner_id <t> number <c> date_adopted <t> time <c> age <t> text <c> gender <t> text <c> abandoned_yn <t> text <c> date_of_birth <t> time <c> name <t> text <c> size_code <t> text <c> breed_code <t> text <i> Which professionals have done at least two types of treatments? List the professional id and cell phone. <s> SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2 </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> Find the id and cell phone of the professionals who operate two or more types of treatments. <s> SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2 </s>
--SEPARATOR--
Sizes <c> size_description <t> text <c> size_code <t> text </t> Treatments <c> professional_id <t> number <c> dog_id <t> number <c> treatment_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number </t> Treatment_Types <c> treatment_type_description <t> text <c> treatment_type_code <t> text </t> Owners <c> street <t> text <c> last_name <t> text <c> cell_number <t> text <c> home_phone <t> text <c> owner_id <t> number <c> first_name <t> text <c> city <t> text <c> zip_code <t> text <c> state <t> text <c> email_address <t> text </t> Charges <c> charge_type <t> text <c> charge_id <t> number <c> charge_amount <t> number </t> Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Dogs <c> weight <t> text <c> gender <t> text <c> date_arrived <t> time <c> abandoned_yn <t> text <c> name <t> text <c> age <t> text <c> owner_id <t> number <c> size_code <t> text <c> date_of_birth <t> time <c> date_departed <t> time <c> breed_code <t> text <c> date_adopted <t> time <c> dog_id <t> number </t> Professionals <c> city <t> text <c> zip_code <t> text <c> professional_id <t> number <c> state <t> text <c> email_address <t> text <c> role_code <t> text <c> last_name <t> text <c> home_phone <t> text <c> cell_number <t> text <c> first_name <t> text <c> street <t> text <i> Find the id and cell phone of the professionals who operate two or more types of treatments. <s> SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2 </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> What are the first name and last name of the professionals who have done treatment with cost below average? <s> SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments ) </s>
--SEPARATOR--
Professionals <c> professional_id <t> number <c> last_name <t> text <c> city <t> text <c> cell_number <t> text <c> home_phone <t> text <c> street <t> text <c> first_name <t> text <c> email_address <t> text <c> role_code <t> text <c> state <t> text <c> zip_code <t> text </t> Treatments <c> treatment_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> cost_of_treatment <t> number <c> date_of_treatment <t> time <c> dog_id <t> number </t> Owners <c> first_name <t> text <c> home_phone <t> text <c> cell_number <t> text <c> street <t> text <c> last_name <t> text <c> city <t> text <c> owner_id <t> number <c> state <t> text <c> email_address <t> text <c> zip_code <t> text </t> Sizes <c> size_description <t> text <c> size_code <t> text </t> Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Dogs <c> date_departed <t> time <c> age <t> text <c> date_of_birth <t> time <c> breed_code <t> text <c> name <t> text <c> abandoned_yn <t> text <c> owner_id <t> number <c> size_code <t> text <c> dog_id <t> number <c> gender <t> text <c> date_arrived <t> time <c> weight <t> text <c> date_adopted <t> time </t> Charges <c> charge_type <t> text <c> charge_amount <t> number <c> charge_id <t> number </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text <i> What are the first name and last name of the professionals who have done treatment with cost below average? <s> SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments ) </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> Which professionals have operated a treatment that costs less than the average? Give me theor first names and last names. <s> SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments ) </s>
--SEPARATOR--
Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> treatment_type_code <t> text <c> professional_id <t> number <c> cost_of_treatment <t> number <c> date_of_treatment <t> time </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Dogs <c> age <t> text <c> date_adopted <t> time <c> weight <t> text <c> name <t> text <c> date_arrived <t> time <c> size_code <t> text <c> breed_code <t> text <c> date_of_birth <t> time <c> owner_id <t> number <c> gender <t> text <c> abandoned_yn <t> text <c> date_departed <t> time <c> dog_id <t> number </t> Owners <c> cell_number <t> text <c> first_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> zip_code <t> text <c> last_name <t> text <c> owner_id <t> number <c> street <t> text <c> city <t> text <c> state <t> text </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Professionals <c> cell_number <t> text <c> email_address <t> text <c> first_name <t> text <c> professional_id <t> number <c> home_phone <t> text <c> role_code <t> text <c> state <t> text <c> zip_code <t> text <c> city <t> text <c> last_name <t> text <c> street <t> text </t> Treatment_Types <c> treatment_type_description <t> text <c> treatment_type_code <t> text </t> Breeds <c> breed_name <t> text <c> breed_code <t> text <i> Which professionals have operated a treatment that costs less than the average? Give me theor first names and last names. <s> SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments ) </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> List the date of each treatment, together with the first name of the professional who operated it. <s> SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id </s>
--SEPARATOR--
Sizes <c> size_code <t> text <c> size_description <t> text </t> Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Owners <c> state <t> text <c> street <t> text <c> city <t> text <c> zip_code <t> text <c> last_name <t> text <c> cell_number <t> text <c> owner_id <t> number <c> home_phone <t> text <c> email_address <t> text <c> first_name <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Treatments <c> cost_of_treatment <t> number <c> treatment_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> dog_id <t> number <c> professional_id <t> number </t> Professionals <c> state <t> text <c> email_address <t> text <c> street <t> text <c> city <t> text <c> last_name <t> text <c> first_name <t> text <c> cell_number <t> text <c> zip_code <t> text <c> professional_id <t> number <c> role_code <t> text <c> home_phone <t> text </t> Dogs <c> gender <t> text <c> breed_code <t> text <c> abandoned_yn <t> text <c> date_of_birth <t> time <c> date_departed <t> time <c> date_adopted <t> time <c> size_code <t> text <c> age <t> text <c> owner_id <t> number <c> date_arrived <t> time <c> dog_id <t> number <c> weight <t> text <c> name <t> text <i> List the date of each treatment, together with the first name of the professional who operated it. <s> SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> What are the date and the operating professional's first name of each treatment? <s> SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id </s>
--SEPARATOR--
Professionals <c> cell_number <t> text <c> home_phone <t> text <c> first_name <t> text <c> zip_code <t> text <c> role_code <t> text <c> city <t> text <c> state <t> text <c> street <t> text <c> professional_id <t> number <c> last_name <t> text <c> email_address <t> text </t> Treatments <c> treatment_id <t> number <c> professional_id <t> number <c> cost_of_treatment <t> number <c> date_of_treatment <t> time <c> treatment_type_code <t> text <c> dog_id <t> number </t> Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Owners <c> zip_code <t> text <c> first_name <t> text <c> cell_number <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> last_name <t> text <c> home_phone <t> text <c> owner_id <t> number <c> email_address <t> text </t> Dogs <c> abandoned_yn <t> text <c> size_code <t> text <c> age <t> text <c> date_arrived <t> time <c> gender <t> text <c> date_of_birth <t> time <c> name <t> text <c> date_departed <t> time <c> owner_id <t> number <c> weight <t> text <c> dog_id <t> number <c> date_adopted <t> time <c> breed_code <t> text </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number <i> What are the date and the operating professional's first name of each treatment? <s> SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> List the cost of each treatment and the corresponding treatment type description. <s> SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code </s>
--SEPARATOR--
Charges <c> charge_amount <t> number <c> charge_type <t> text <c> charge_id <t> number </t> Dogs <c> size_code <t> text <c> dog_id <t> number <c> gender <t> text <c> weight <t> text <c> name <t> text <c> date_adopted <t> time <c> abandoned_yn <t> text <c> owner_id <t> number <c> date_departed <t> time <c> date_arrived <t> time <c> age <t> text <c> date_of_birth <t> time <c> breed_code <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Professionals <c> city <t> text <c> professional_id <t> number <c> state <t> text <c> email_address <t> text <c> zip_code <t> text <c> cell_number <t> text <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> role_code <t> text <c> home_phone <t> text </t> Owners <c> state <t> text <c> last_name <t> text <c> home_phone <t> text <c> first_name <t> text <c> email_address <t> text <c> owner_id <t> number <c> zip_code <t> text <c> street <t> text <c> city <t> text <c> cell_number <t> text </t> Treatments <c> cost_of_treatment <t> number <c> dog_id <t> number <c> treatment_id <t> number <c> date_of_treatment <t> time <c> professional_id <t> number <c> treatment_type_code <t> text </t> Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Sizes <c> size_description <t> text <c> size_code <t> text <i> List the cost of each treatment and the corresponding treatment type description. <s> SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> What are the cost and treatment type description of each treatment? <s> SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code </s>
--SEPARATOR--
Owners <c> city <t> text <c> state <t> text <c> last_name <t> text <c> first_name <t> text <c> zip_code <t> text <c> home_phone <t> text <c> street <t> text <c> cell_number <t> text <c> owner_id <t> number <c> email_address <t> text </t> Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Treatment_Types <c> treatment_type_description <t> text <c> treatment_type_code <t> text </t> Professionals <c> state <t> text <c> professional_id <t> number <c> first_name <t> text <c> cell_number <t> text <c> email_address <t> text <c> home_phone <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> role_code <t> text <c> zip_code <t> text </t> Sizes <c> size_description <t> text <c> size_code <t> text </t> Dogs <c> owner_id <t> number <c> gender <t> text <c> size_code <t> text <c> name <t> text <c> date_of_birth <t> time <c> date_arrived <t> time <c> date_adopted <t> time <c> age <t> text <c> weight <t> text <c> abandoned_yn <t> text <c> date_departed <t> time <c> dog_id <t> number <c> breed_code <t> text </t> Charges <c> charge_type <t> text <c> charge_id <t> number <c> charge_amount <t> number </t> Treatments <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> dog_id <t> number <c> treatment_id <t> number <c> cost_of_treatment <t> number <c> professional_id <t> number <i> What are the cost and treatment type description of each treatment? <s> SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> List each owner's first name, last name, and the size of his for her dog. <s> SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id </s>
--SEPARATOR--
Treatments <c> treatment_type_code <t> text <c> dog_id <t> number <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <c> professional_id <t> number <c> treatment_id <t> number </t> Dogs <c> gender <t> text <c> date_departed <t> time <c> owner_id <t> number <c> dog_id <t> number <c> breed_code <t> text <c> weight <t> text <c> date_of_birth <t> time <c> age <t> text <c> name <t> text <c> date_adopted <t> time <c> size_code <t> text <c> abandoned_yn <t> text <c> date_arrived <t> time </t> Professionals <c> email_address <t> text <c> first_name <t> text <c> professional_id <t> number <c> last_name <t> text <c> cell_number <t> text <c> state <t> text <c> role_code <t> text <c> street <t> text <c> zip_code <t> text <c> home_phone <t> text <c> city <t> text </t> Sizes <c> size_description <t> text <c> size_code <t> text </t> Charges <c> charge_amount <t> number <c> charge_type <t> text <c> charge_id <t> number </t> Owners <c> state <t> text <c> cell_number <t> text <c> email_address <t> text <c> home_phone <t> text <c> city <t> text <c> zip_code <t> text <c> street <t> text <c> first_name <t> text <c> last_name <t> text <c> owner_id <t> number </t> Treatment_Types <c> treatment_type_description <t> text <c> treatment_type_code <t> text </t> Breeds <c> breed_name <t> text <c> breed_code <t> text <i> List each owner's first name, last name, and the size of his for her dog. <s> SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> What are each owner's first name, last name, and the size of their dog? <s> SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id </s>
--SEPARATOR--
Owners <c> state <t> text <c> owner_id <t> number <c> zip_code <t> text <c> first_name <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> street <t> text <c> cell_number <t> text <c> city <t> text </t> Professionals <c> professional_id <t> number <c> state <t> text <c> city <t> text <c> zip_code <t> text <c> first_name <t> text <c> last_name <t> text <c> email_address <t> text <c> cell_number <t> text <c> street <t> text <c> home_phone <t> text <c> role_code <t> text </t> Sizes <c> size_description <t> text <c> size_code <t> text </t> Treatment_Types <c> treatment_type_description <t> text <c> treatment_type_code <t> text </t> Dogs <c> date_arrived <t> time <c> abandoned_yn <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> date_adopted <t> time <c> dog_id <t> number <c> weight <t> text <c> breed_code <t> text <c> date_departed <t> time <c> size_code <t> text <c> owner_id <t> number </t> Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Treatments <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <c> treatment_id <t> number <c> dog_id <t> number </t> Charges <c> charge_amount <t> number <c> charge_type <t> text <c> charge_id <t> number <i> What are each owner's first name, last name, and the size of their dog? <s> SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> List pairs of the owner's first name and the dogs's name. <s> SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id </s>
--SEPARATOR--
Dogs <c> name <t> text <c> size_code <t> text <c> weight <t> text <c> dog_id <t> number <c> date_of_birth <t> time <c> owner_id <t> number <c> gender <t> text <c> date_adopted <t> time <c> date_departed <t> time <c> breed_code <t> text <c> abandoned_yn <t> text <c> age <t> text <c> date_arrived <t> time </t> Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Treatments <c> professional_id <t> number <c> dog_id <t> number <c> treatment_id <t> number <c> date_of_treatment <t> time <c> treatment_type_code <t> text <c> cost_of_treatment <t> number </t> Treatment_Types <c> treatment_type_description <t> text <c> treatment_type_code <t> text </t> Owners <c> zip_code <t> text <c> last_name <t> text <c> owner_id <t> number <c> first_name <t> text <c> city <t> text <c> home_phone <t> text <c> state <t> text <c> email_address <t> text <c> cell_number <t> text <c> street <t> text </t> Charges <c> charge_amount <t> number <c> charge_id <t> number <c> charge_type <t> text </t> Professionals <c> home_phone <t> text <c> city <t> text <c> first_name <t> text <c> professional_id <t> number <c> role_code <t> text <c> cell_number <t> text <c> state <t> text <c> email_address <t> text <c> street <t> text <c> last_name <t> text <c> zip_code <t> text </t> Sizes <c> size_code <t> text <c> size_description <t> text <i> List pairs of the owner's first name and the dogs's name. <s> SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> What are each owner's first name and their dogs's name? <s> SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Treatment_Types <c> treatment_type_description <t> text <c> treatment_type_code <t> text </t> Charges <c> charge_type <t> text <c> charge_id <t> number <c> charge_amount <t> number </t> Treatments <c> treatment_id <t> number <c> professional_id <t> number <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <c> treatment_type_code <t> text <c> dog_id <t> number </t> Owners <c> cell_number <t> text <c> home_phone <t> text <c> street <t> text <c> last_name <t> text <c> state <t> text <c> owner_id <t> number <c> email_address <t> text <c> first_name <t> text <c> zip_code <t> text <c> city <t> text </t> Professionals <c> home_phone <t> text <c> email_address <t> text <c> zip_code <t> text <c> first_name <t> text <c> state <t> text <c> role_code <t> text <c> cell_number <t> text <c> city <t> text <c> professional_id <t> number <c> street <t> text <c> last_name <t> text </t> Sizes <c> size_description <t> text <c> size_code <t> text </t> Dogs <c> gender <t> text <c> date_adopted <t> time <c> date_arrived <t> time <c> weight <t> text <c> age <t> text <c> date_of_birth <t> time <c> dog_id <t> number <c> date_departed <t> time <c> abandoned_yn <t> text <c> owner_id <t> number <c> name <t> text <c> breed_code <t> text <c> size_code <t> text <i> What are each owner's first name and their dogs's name? <s> SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> List the names of the dogs of the rarest breed and the treatment dates of them. <s> SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 ) </s>
--SEPARATOR--
Sizes <c> size_code <t> text <c> size_description <t> text </t> Charges <c> charge_amount <t> number <c> charge_id <t> number <c> charge_type <t> text </t> Treatments <c> treatment_type_code <t> text <c> dog_id <t> number <c> cost_of_treatment <t> number <c> professional_id <t> number <c> treatment_id <t> number <c> date_of_treatment <t> time </t> Owners <c> first_name <t> text <c> zip_code <t> text <c> city <t> text <c> last_name <t> text <c> cell_number <t> text <c> state <t> text <c> email_address <t> text <c> home_phone <t> text <c> street <t> text <c> owner_id <t> number </t> Professionals <c> cell_number <t> text <c> state <t> text <c> first_name <t> text <c> professional_id <t> number <c> email_address <t> text <c> home_phone <t> text <c> zip_code <t> text <c> street <t> text <c> city <t> text <c> last_name <t> text <c> role_code <t> text </t> Dogs <c> size_code <t> text <c> breed_code <t> text <c> dog_id <t> number <c> age <t> text <c> weight <t> text <c> owner_id <t> number <c> gender <t> text <c> abandoned_yn <t> text <c> date_of_birth <t> time <c> date_adopted <t> time <c> date_arrived <t> time <c> date_departed <t> time <c> name <t> text </t> Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text <i> List the names of the dogs of the rarest breed and the treatment dates of them. <s> SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 ) </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> Which dogs are of the rarest breed? Show their names and treatment dates. <s> SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 ) </s>
--SEPARATOR--
Treatments <c> cost_of_treatment <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> professional_id <t> number <c> treatment_id <t> number <c> dog_id <t> number </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> home_phone <t> text <c> owner_id <t> number <c> zip_code <t> text <c> street <t> text <c> first_name <t> text <c> email_address <t> text <c> city <t> text <c> last_name <t> text <c> state <t> text <c> cell_number <t> text </t> Professionals <c> city <t> text <c> zip_code <t> text <c> first_name <t> text <c> email_address <t> text <c> street <t> text <c> role_code <t> text <c> state <t> text <c> cell_number <t> text <c> last_name <t> text <c> professional_id <t> number <c> home_phone <t> text </t> Charges <c> charge_id <t> number <c> charge_amount <t> number <c> charge_type <t> text </t> Sizes <c> size_description <t> text <c> size_code <t> text </t> Dogs <c> name <t> text <c> breed_code <t> text <c> size_code <t> text <c> date_departed <t> time <c> owner_id <t> number <c> date_arrived <t> time <c> date_of_birth <t> time <c> weight <t> text <c> age <t> text <c> abandoned_yn <t> text <c> date_adopted <t> time <c> dog_id <t> number <c> gender <t> text </t> Breeds <c> breed_name <t> text <c> breed_code <t> text <i> Which dogs are of the rarest breed? Show their names and treatment dates. <s> SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 ) </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> Which dogs are owned by someone who lives in Virginia? List the owner's first name and the dog's name. <s> SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia' </s>
--SEPARATOR--
Breeds <c> breed_name <t> text <c> breed_code <t> text </t> Owners <c> email_address <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> cell_number <t> text <c> owner_id <t> number <c> street <t> text <c> last_name <t> text <c> first_name <t> text <c> home_phone <t> text </t> Professionals <c> state <t> text <c> first_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text <c> street <t> text <c> last_name <t> text <c> city <t> text <c> professional_id <t> number <c> role_code <t> text <c> zip_code <t> text </t> Dogs <c> name <t> text <c> gender <t> text <c> owner_id <t> number <c> size_code <t> text <c> weight <t> text <c> dog_id <t> number <c> date_adopted <t> time <c> breed_code <t> text <c> date_departed <t> time <c> date_arrived <t> time <c> abandoned_yn <t> text <c> age <t> text <c> date_of_birth <t> time </t> Charges <c> charge_type <t> text <c> charge_id <t> number <c> charge_amount <t> number </t> Treatment_Types <c> treatment_type_description <t> text <c> treatment_type_code <t> text </t> Sizes <c> size_description <t> text <c> size_code <t> text </t> Treatments <c> date_of_treatment <t> time <c> treatment_type_code <t> text <c> professional_id <t> number <c> cost_of_treatment <t> number <c> dog_id <t> number <c> treatment_id <t> number <i> Which dogs are owned by someone who lives in Virginia? List the owner's first name and the dog's name. <s> SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia' </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> Find the first names of owners living in Virginia and the names of dogs they own. <s> SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia' </s>
--SEPARATOR--
Professionals <c> email_address <t> text <c> street <t> text <c> home_phone <t> text <c> city <t> text <c> zip_code <t> text <c> last_name <t> text <c> role_code <t> text <c> professional_id <t> number <c> state <t> text <c> cell_number <t> text <c> first_name <t> text </t> Treatments <c> treatment_id <t> number <c> cost_of_treatment <t> number <c> professional_id <t> number <c> dog_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time </t> Sizes <c> size_description <t> text <c> size_code <t> text </t> Dogs <c> date_arrived <t> time <c> owner_id <t> number <c> date_adopted <t> time <c> dog_id <t> number <c> name <t> text <c> breed_code <t> text <c> date_departed <t> time <c> size_code <t> text <c> date_of_birth <t> time <c> weight <t> text <c> abandoned_yn <t> text <c> gender <t> text <c> age <t> text </t> Charges <c> charge_amount <t> number <c> charge_id <t> number <c> charge_type <t> text </t> Breeds <c> breed_name <t> text <c> breed_code <t> text </t> Owners <c> street <t> text <c> owner_id <t> number <c> email_address <t> text <c> cell_number <t> text <c> first_name <t> text <c> last_name <t> text <c> home_phone <t> text <c> zip_code <t> text <c> city <t> text <c> state <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text <i> Find the first names of owners living in Virginia and the names of dogs they own. <s> SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia' </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> What are the arriving date and the departing date of the dogs who have gone through a treatment? <s> SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Treatment_Types <c> treatment_type_description <t> text <c> treatment_type_code <t> text </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatments <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <c> treatment_type_code <t> text <c> professional_id <t> number <c> treatment_id <t> number <c> dog_id <t> number </t> Charges <c> charge_amount <t> number <c> charge_type <t> text <c> charge_id <t> number </t> Owners <c> email_address <t> text <c> last_name <t> text <c> zip_code <t> text <c> owner_id <t> number <c> home_phone <t> text <c> city <t> text <c> state <t> text <c> cell_number <t> text <c> street <t> text <c> first_name <t> text </t> Professionals <c> first_name <t> text <c> zip_code <t> text <c> street <t> text <c> city <t> text <c> last_name <t> text <c> state <t> text <c> role_code <t> text <c> cell_number <t> text <c> home_phone <t> text <c> professional_id <t> number <c> email_address <t> text </t> Dogs <c> abandoned_yn <t> text <c> dog_id <t> number <c> size_code <t> text <c> weight <t> text <c> age <t> text <c> date_arrived <t> time <c> breed_code <t> text <c> name <t> text <c> date_adopted <t> time <c> gender <t> text <c> date_departed <t> time <c> owner_id <t> number <c> date_of_birth <t> time <i> What are the arriving date and the departing date of the dogs who have gone through a treatment? <s> SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> Find the arriving date and the departing date of the dogs that received a treatment. <s> SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id </s>
--SEPARATOR--
Charges <c> charge_amount <t> number <c> charge_id <t> number <c> charge_type <t> text </t> Dogs <c> gender <t> text <c> dog_id <t> number <c> date_arrived <t> time <c> abandoned_yn <t> text <c> weight <t> text <c> age <t> text <c> date_adopted <t> time <c> owner_id <t> number <c> date_of_birth <t> time <c> breed_code <t> text <c> name <t> text <c> date_departed <t> time <c> size_code <t> text </t> Breeds <c> breed_name <t> text <c> breed_code <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Professionals <c> street <t> text <c> zip_code <t> text <c> last_name <t> text <c> role_code <t> text <c> state <t> text <c> city <t> text <c> professional_id <t> number <c> first_name <t> text <c> home_phone <t> text <c> email_address <t> text <c> cell_number <t> text </t> Treatments <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <c> treatment_id <t> number <c> dog_id <t> number </t> Sizes <c> size_description <t> text <c> size_code <t> text </t> Owners <c> street <t> text <c> owner_id <t> number <c> first_name <t> text <c> zip_code <t> text <c> cell_number <t> text <c> city <t> text <c> state <t> text <c> email_address <t> text <c> last_name <t> text <c> home_phone <t> text <i> Find the arriving date and the departing date of the dogs that received a treatment. <s> SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> List the last name of the owner owning the youngest dog. <s> SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs ) </s>
--SEPARATOR--
Sizes <c> size_description <t> text <c> size_code <t> text </t> Treatments <c> dog_id <t> number <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <c> treatment_type_code <t> text <c> professional_id <t> number <c> treatment_id <t> number </t> Treatment_Types <c> treatment_type_description <t> text <c> treatment_type_code <t> text </t> Professionals <c> first_name <t> text <c> street <t> text <c> cell_number <t> text <c> professional_id <t> number <c> role_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> state <t> text <c> last_name <t> text <c> city <t> text <c> zip_code <t> text </t> Breeds <c> breed_name <t> text <c> breed_code <t> text </t> Owners <c> first_name <t> text <c> zip_code <t> text <c> street <t> text <c> city <t> text <c> cell_number <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> owner_id <t> number <c> state <t> text </t> Dogs <c> date_adopted <t> time <c> date_arrived <t> time <c> date_departed <t> time <c> abandoned_yn <t> text <c> size_code <t> text <c> gender <t> text <c> weight <t> text <c> date_of_birth <t> time <c> owner_id <t> number <c> age <t> text <c> breed_code <t> text <c> name <t> text <c> dog_id <t> number </t> Charges <c> charge_id <t> number <c> charge_amount <t> number <c> charge_type <t> text <i> List the last name of the owner owning the youngest dog. <s> SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs ) </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> Who owns the youngest dog? Give me his or her last name. <s> SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs ) </s>
--SEPARATOR--
Breeds <c> breed_name <t> text <c> breed_code <t> text </t> Sizes <c> size_description <t> text <c> size_code <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Professionals <c> first_name <t> text <c> state <t> text <c> city <t> text <c> cell_number <t> text <c> role_code <t> text <c> email_address <t> text <c> professional_id <t> number <c> zip_code <t> text <c> street <t> text <c> last_name <t> text <c> home_phone <t> text </t> Dogs <c> abandoned_yn <t> text <c> date_departed <t> time <c> breed_code <t> text <c> date_arrived <t> time <c> size_code <t> text <c> date_adopted <t> time <c> dog_id <t> number <c> age <t> text <c> weight <t> text <c> name <t> text <c> owner_id <t> number <c> date_of_birth <t> time <c> gender <t> text </t> Charges <c> charge_id <t> number <c> charge_amount <t> number <c> charge_type <t> text </t> Treatments <c> dog_id <t> number <c> cost_of_treatment <t> number <c> date_of_treatment <t> time <c> treatment_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text </t> Owners <c> last_name <t> text <c> street <t> text <c> owner_id <t> number <c> city <t> text <c> email_address <t> text <c> state <t> text <c> first_name <t> text <c> cell_number <t> text <c> zip_code <t> text <c> home_phone <t> text <i> Who owns the youngest dog? Give me his or her last name. <s> SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs ) </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> List the emails of the professionals who live in the state of Hawaii or the state of Wisconsin. <s> SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin' </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Professionals <c> city <t> text <c> state <t> text <c> first_name <t> text <c> email_address <t> text <c> zip_code <t> text <c> role_code <t> text <c> home_phone <t> text <c> street <t> text <c> last_name <t> text <c> cell_number <t> text <c> professional_id <t> number </t> Treatments <c> cost_of_treatment <t> number <c> treatment_id <t> number <c> treatment_type_code <t> text <c> professional_id <t> number <c> date_of_treatment <t> time <c> dog_id <t> number </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Charges <c> charge_type <t> text <c> charge_amount <t> number <c> charge_id <t> number </t> Owners <c> street <t> text <c> owner_id <t> number <c> last_name <t> text <c> city <t> text <c> cell_number <t> text <c> first_name <t> text <c> email_address <t> text <c> zip_code <t> text <c> state <t> text <c> home_phone <t> text </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Dogs <c> date_adopted <t> time <c> weight <t> text <c> name <t> text <c> age <t> text <c> date_departed <t> time <c> gender <t> text <c> dog_id <t> number <c> breed_code <t> text <c> date_arrived <t> time <c> date_of_birth <t> time <c> owner_id <t> number <c> abandoned_yn <t> text <c> size_code <t> text <i> List the emails of the professionals who live in the state of Hawaii or the state of Wisconsin. <s> SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin' </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> What are the emails of the professionals living in either the state of Hawaii or the state of Wisconsin? <s> SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin' </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> cost_of_treatment <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time </t> Owners <c> zip_code <t> text <c> last_name <t> text <c> city <t> text <c> owner_id <t> number <c> email_address <t> text <c> state <t> text <c> street <t> text <c> home_phone <t> text <c> cell_number <t> text <c> first_name <t> text </t> Professionals <c> cell_number <t> text <c> role_code <t> text <c> last_name <t> text <c> street <t> text <c> zip_code <t> text <c> state <t> text <c> professional_id <t> number <c> email_address <t> text <c> first_name <t> text <c> city <t> text <c> home_phone <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Dogs <c> gender <t> text <c> breed_code <t> text <c> weight <t> text <c> date_departed <t> time <c> date_of_birth <t> time <c> size_code <t> text <c> date_arrived <t> time <c> owner_id <t> number <c> date_adopted <t> time <c> abandoned_yn <t> text <c> dog_id <t> number <c> name <t> text <c> age <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number <i> What are the emails of the professionals living in either the state of Hawaii or the state of Wisconsin? <s> SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin' </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> What are the arriving date and the departing date of all the dogs? <s> SELECT date_arrived ,  date_departed FROM Dogs </s>
--SEPARATOR--
Breeds <c> breed_name <t> text <c> breed_code <t> text </t> Dogs <c> gender <t> text <c> date_arrived <t> time <c> name <t> text <c> abandoned_yn <t> text <c> date_adopted <t> time <c> size_code <t> text <c> dog_id <t> number <c> date_of_birth <t> time <c> breed_code <t> text <c> age <t> text <c> owner_id <t> number <c> date_departed <t> time <c> weight <t> text </t> Treatment_Types <c> treatment_type_description <t> text <c> treatment_type_code <t> text </t> Owners <c> street <t> text <c> home_phone <t> text <c> first_name <t> text <c> owner_id <t> number <c> city <t> text <c> zip_code <t> text <c> last_name <t> text <c> cell_number <t> text <c> state <t> text <c> email_address <t> text </t> Treatments <c> professional_id <t> number <c> treatment_type_code <t> text <c> treatment_id <t> number <c> dog_id <t> number <c> date_of_treatment <t> time <c> cost_of_treatment <t> number </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Professionals <c> email_address <t> text <c> first_name <t> text <c> state <t> text <c> role_code <t> text <c> last_name <t> text <c> professional_id <t> number <c> cell_number <t> text <c> home_phone <t> text <c> street <t> text <c> city <t> text <c> zip_code <t> text </t> Sizes <c> size_description <t> text <c> size_code <t> text <i> What are the arriving date and the departing date of all the dogs? <s> SELECT date_arrived ,  date_departed FROM Dogs </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> List the arrival date and the departure date for all the dogs. <s> SELECT date_arrived ,  date_departed FROM Dogs </s>
--SEPARATOR--
Treatments <c> treatment_id <t> number <c> professional_id <t> number <c> date_of_treatment <t> time <c> dog_id <t> number <c> cost_of_treatment <t> number <c> treatment_type_code <t> text </t> Dogs <c> date_adopted <t> time <c> dog_id <t> number <c> name <t> text <c> date_arrived <t> time <c> gender <t> text <c> owner_id <t> number <c> date_departed <t> time <c> date_of_birth <t> time <c> size_code <t> text <c> abandoned_yn <t> text <c> weight <t> text <c> age <t> text <c> breed_code <t> text </t> Sizes <c> size_description <t> text <c> size_code <t> text </t> Professionals <c> cell_number <t> text <c> street <t> text <c> professional_id <t> number <c> zip_code <t> text <c> city <t> text <c> last_name <t> text <c> home_phone <t> text <c> state <t> text <c> role_code <t> text <c> first_name <t> text <c> email_address <t> text </t> Treatment_Types <c> treatment_type_description <t> text <c> treatment_type_code <t> text </t> Charges <c> charge_id <t> number <c> charge_amount <t> number <c> charge_type <t> text </t> Breeds <c> breed_name <t> text <c> breed_code <t> text </t> Owners <c> cell_number <t> text <c> email_address <t> text <c> state <t> text <c> city <t> text <c> street <t> text <c> zip_code <t> text <c> first_name <t> text <c> home_phone <t> text <c> owner_id <t> number <c> last_name <t> text <i> List the arrival date and the departure date for all the dogs. <s> SELECT date_arrived ,  date_departed FROM Dogs </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> How many dogs went through any treatments? <s> SELECT count(DISTINCT dog_id) FROM Treatments </s>
--SEPARATOR--
Dogs <c> date_departed <t> time <c> dog_id <t> number <c> abandoned_yn <t> text <c> gender <t> text <c> owner_id <t> number <c> date_of_birth <t> time <c> breed_code <t> text <c> age <t> text <c> date_adopted <t> time <c> size_code <t> text <c> weight <t> text <c> name <t> text <c> date_arrived <t> time </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_description <t> text <c> size_code <t> text </t> Owners <c> state <t> text <c> last_name <t> text <c> owner_id <t> number <c> street <t> text <c> email_address <t> text <c> city <t> text <c> zip_code <t> text <c> home_phone <t> text <c> first_name <t> text <c> cell_number <t> text </t> Treatments <c> treatment_type_code <t> text <c> professional_id <t> number <c> dog_id <t> number <c> cost_of_treatment <t> number <c> date_of_treatment <t> time <c> treatment_id <t> number </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Professionals <c> email_address <t> text <c> street <t> text <c> city <t> text <c> first_name <t> text <c> cell_number <t> text <c> state <t> text <c> professional_id <t> number <c> home_phone <t> text <c> last_name <t> text <c> zip_code <t> text <c> role_code <t> text </t> Breeds <c> breed_name <t> text <c> breed_code <t> text <i> How many dogs went through any treatments? <s> SELECT count(DISTINCT dog_id) FROM Treatments </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> Count the number of dogs that went through a treatment. <s> SELECT count(DISTINCT dog_id) FROM Treatments </s>
--SEPARATOR--
Professionals <c> home_phone <t> text <c> email_address <t> text <c> zip_code <t> text <c> cell_number <t> text <c> professional_id <t> number <c> state <t> text <c> role_code <t> text <c> last_name <t> text <c> first_name <t> text <c> city <t> text <c> street <t> text </t> Charges <c> charge_amount <t> number <c> charge_type <t> text <c> charge_id <t> number </t> Treatment_Types <c> treatment_type_description <t> text <c> treatment_type_code <t> text </t> Treatments <c> date_of_treatment <t> time <c> treatment_type_code <t> text <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> cost_of_treatment <t> number </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> date_of_birth <t> time <c> weight <t> text <c> age <t> text <c> gender <t> text <c> breed_code <t> text <c> date_departed <t> time <c> size_code <t> text <c> name <t> text <c> abandoned_yn <t> text <c> date_arrived <t> time <c> date_adopted <t> time </t> Sizes <c> size_description <t> text <c> size_code <t> text </t> Owners <c> owner_id <t> number <c> zip_code <t> text <c> city <t> text <c> last_name <t> text <c> state <t> text <c> street <t> text <c> email_address <t> text <c> home_phone <t> text <c> first_name <t> text <c> cell_number <t> text </t> Breeds <c> breed_code <t> text <c> breed_name <t> text <i> Count the number of dogs that went through a treatment. <s> SELECT count(DISTINCT dog_id) FROM Treatments </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> How many professionals have performed any treatment to dogs? <s> SELECT count(DISTINCT professional_id) FROM Treatments </s>
--SEPARATOR--
Dogs <c> name <t> text <c> age <t> text <c> abandoned_yn <t> text <c> dog_id <t> number <c> size_code <t> text <c> gender <t> text <c> date_departed <t> time <c> owner_id <t> number <c> date_arrived <t> time <c> weight <t> text <c> breed_code <t> text <c> date_adopted <t> time <c> date_of_birth <t> time </t> Professionals <c> cell_number <t> text <c> state <t> text <c> zip_code <t> text <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> email_address <t> text <c> home_phone <t> text <c> professional_id <t> number <c> role_code <t> text </t> Owners <c> state <t> text <c> zip_code <t> text <c> owner_id <t> number <c> home_phone <t> text <c> street <t> text <c> city <t> text <c> first_name <t> text <c> email_address <t> text <c> cell_number <t> text <c> last_name <t> text </t> Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_amount <t> number <c> charge_type <t> text <c> charge_id <t> number </t> Sizes <c> size_description <t> text <c> size_code <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Treatments <c> cost_of_treatment <t> number <c> date_of_treatment <t> time <c> treatment_id <t> number <c> treatment_type_code <t> text <c> professional_id <t> number <c> dog_id <t> number <i> How many professionals have performed any treatment to dogs? <s> SELECT count(DISTINCT professional_id) FROM Treatments </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> Find the number of professionals who have ever treated dogs. <s> SELECT count(DISTINCT professional_id) FROM Treatments </s>
--SEPARATOR--
Treatment_Types <c> treatment_type_description <t> text <c> treatment_type_code <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Breeds <c> breed_name <t> text <c> breed_code <t> text </t> Treatments <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <c> dog_id <t> number <c> treatment_type_code <t> text <c> professional_id <t> number <c> treatment_id <t> number </t> Professionals <c> street <t> text <c> professional_id <t> number <c> state <t> text <c> city <t> text <c> last_name <t> text <c> cell_number <t> text <c> email_address <t> text <c> zip_code <t> text <c> role_code <t> text <c> first_name <t> text <c> home_phone <t> text </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Dogs <c> owner_id <t> number <c> date_departed <t> time <c> dog_id <t> number <c> date_arrived <t> time <c> size_code <t> text <c> gender <t> text <c> name <t> text <c> date_adopted <t> time <c> abandoned_yn <t> text <c> age <t> text <c> date_of_birth <t> time <c> breed_code <t> text <c> weight <t> text </t> Owners <c> state <t> text <c> cell_number <t> text <c> home_phone <t> text <c> zip_code <t> text <c> city <t> text <c> email_address <t> text <c> first_name <t> text <c> last_name <t> text <c> owner_id <t> number <c> street <t> text <i> Find the number of professionals who have ever treated dogs. <s> SELECT count(DISTINCT professional_id) FROM Treatments </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> Which professionals live in a city containing the substring 'West'? List his or her role, street, city and state. <s> SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%' </s>
--SEPARATOR--
Owners <c> street <t> text <c> zip_code <t> text <c> first_name <t> text <c> last_name <t> text <c> email_address <t> text <c> cell_number <t> text <c> owner_id <t> number <c> home_phone <t> text <c> state <t> text <c> city <t> text </t> Dogs <c> weight <t> text <c> date_adopted <t> time <c> owner_id <t> number <c> abandoned_yn <t> text <c> date_departed <t> time <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> dog_id <t> number <c> date_arrived <t> time <c> gender <t> text <c> breed_code <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Professionals <c> role_code <t> text <c> email_address <t> text <c> street <t> text <c> state <t> text <c> home_phone <t> text <c> cell_number <t> text <c> first_name <t> text <c> city <t> text <c> last_name <t> text <c> zip_code <t> text <c> professional_id <t> number </t> Sizes <c> size_description <t> text <c> size_code <t> text </t> Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_type <t> text <c> charge_id <t> number <c> charge_amount <t> number </t> Treatments <c> dog_id <t> number <c> professional_id <t> number <c> treatment_id <t> number <c> cost_of_treatment <t> number <c> date_of_treatment <t> time <c> treatment_type_code <t> text <i> Which professionals live in a city containing the substring 'West'? List his or her role, street, city and state. <s> SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%' </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> Find the role, street, city and state of the professionals living in a city that contains the substring 'West'. <s> SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%' </s>
--SEPARATOR--
Sizes <c> size_description <t> text <c> size_code <t> text </t> Treatments <c> professional_id <t> number <c> treatment_type_code <t> text <c> treatment_id <t> number <c> cost_of_treatment <t> number <c> dog_id <t> number <c> date_of_treatment <t> time </t> Charges <c> charge_type <t> text <c> charge_amount <t> number <c> charge_id <t> number </t> Owners <c> last_name <t> text <c> state <t> text <c> street <t> text <c> zip_code <t> text <c> email_address <t> text <c> owner_id <t> number <c> city <t> text <c> first_name <t> text <c> cell_number <t> text <c> home_phone <t> text </t> Breeds <c> breed_name <t> text <c> breed_code <t> text </t> Treatment_Types <c> treatment_type_description <t> text <c> treatment_type_code <t> text </t> Dogs <c> date_adopted <t> time <c> date_arrived <t> time <c> name <t> text <c> date_of_birth <t> time <c> weight <t> text <c> breed_code <t> text <c> abandoned_yn <t> text <c> date_departed <t> time <c> owner_id <t> number <c> age <t> text <c> dog_id <t> number <c> size_code <t> text <c> gender <t> text </t> Professionals <c> zip_code <t> text <c> state <t> text <c> street <t> text <c> email_address <t> text <c> role_code <t> text <c> last_name <t> text <c> city <t> text <c> first_name <t> text <c> home_phone <t> text <c> cell_number <t> text <c> professional_id <t> number <i> Find the role, street, city and state of the professionals living in a city that contains the substring 'West'. <s> SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%' </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> Which owners live in the state whose name contains the substring 'North'? List his first name, last name and email. <s> SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%' </s>
--SEPARATOR--
Sizes <c> size_code <t> text <c> size_description <t> text </t> Breeds <c> breed_name <t> text <c> breed_code <t> text </t> Treatment_Types <c> treatment_type_description <t> text <c> treatment_type_code <t> text </t> Dogs <c> size_code <t> text <c> weight <t> text <c> gender <t> text <c> age <t> text <c> owner_id <t> number <c> dog_id <t> number <c> date_of_birth <t> time <c> date_departed <t> time <c> breed_code <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> name <t> text <c> abandoned_yn <t> text </t> Charges <c> charge_type <t> text <c> charge_id <t> number <c> charge_amount <t> number </t> Owners <c> email_address <t> text <c> cell_number <t> text <c> street <t> text <c> owner_id <t> number <c> city <t> text <c> home_phone <t> text <c> zip_code <t> text <c> last_name <t> text <c> state <t> text <c> first_name <t> text </t> Treatments <c> treatment_type_code <t> text <c> cost_of_treatment <t> number <c> dog_id <t> number <c> treatment_id <t> number <c> date_of_treatment <t> time <c> professional_id <t> number </t> Professionals <c> street <t> text <c> email_address <t> text <c> role_code <t> text <c> state <t> text <c> last_name <t> text <c> zip_code <t> text <c> professional_id <t> number <c> cell_number <t> text <c> first_name <t> text <c> home_phone <t> text <c> city <t> text <i> Which owners live in the state whose name contains the substring 'North'? List his first name, last name and email. <s> SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%' </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> Return the first name, last name and email of the owners living in a state whose name contains the substring 'North'. <s> SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%' </s>
--SEPARATOR--
Professionals <c> professional_id <t> number <c> last_name <t> text <c> email_address <t> text <c> zip_code <t> text <c> street <t> text <c> first_name <t> text <c> role_code <t> text <c> home_phone <t> text <c> city <t> text <c> state <t> text <c> cell_number <t> text </t> Breeds <c> breed_name <t> text <c> breed_code <t> text </t> Treatment_Types <c> treatment_type_description <t> text <c> treatment_type_code <t> text </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Dogs <c> weight <t> text <c> dog_id <t> number <c> gender <t> text <c> date_of_birth <t> time <c> breed_code <t> text <c> abandoned_yn <t> text <c> date_adopted <t> time <c> size_code <t> text <c> age <t> text <c> name <t> text <c> date_departed <t> time <c> owner_id <t> number <c> date_arrived <t> time </t> Charges <c> charge_amount <t> number <c> charge_type <t> text <c> charge_id <t> number </t> Owners <c> owner_id <t> number <c> last_name <t> text <c> street <t> text <c> city <t> text <c> home_phone <t> text <c> first_name <t> text <c> cell_number <t> text <c> zip_code <t> text <c> email_address <t> text <c> state <t> text </t> Treatments <c> treatment_type_code <t> text <c> dog_id <t> number <c> professional_id <t> number <c> cost_of_treatment <t> number <c> treatment_id <t> number <c> date_of_treatment <t> time <i> Return the first name, last name and email of the owners living in a state whose name contains the substring 'North'. <s> SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%' </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> How many dogs have an age below the average? <s> SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs ) </s>
--SEPARATOR--
Sizes <c> size_code <t> text <c> size_description <t> text </t> Dogs <c> name <t> text <c> breed_code <t> text <c> weight <t> text <c> gender <t> text <c> date_arrived <t> time <c> date_of_birth <t> time <c> dog_id <t> number <c> size_code <t> text <c> owner_id <t> number <c> date_departed <t> time <c> date_adopted <t> time <c> abandoned_yn <t> text <c> age <t> text </t> Charges <c> charge_amount <t> number <c> charge_id <t> number <c> charge_type <t> text </t> Owners <c> zip_code <t> text <c> state <t> text <c> home_phone <t> text <c> street <t> text <c> last_name <t> text <c> first_name <t> text <c> owner_id <t> number <c> email_address <t> text <c> cell_number <t> text <c> city <t> text </t> Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Treatments <c> treatment_type_code <t> text <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> cost_of_treatment <t> number <c> date_of_treatment <t> time </t> Professionals <c> role_code <t> text <c> first_name <t> text <c> professional_id <t> number <c> state <t> text <c> last_name <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> street <t> text <c> cell_number <t> text <c> city <t> text <i> How many dogs have an age below the average? <s> SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs ) </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> Count the number of dogs of an age below the average. <s> SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs ) </s>
--SEPARATOR--
Breeds <c> breed_name <t> text <c> breed_code <t> text </t> Dogs <c> breed_code <t> text <c> date_of_birth <t> time <c> name <t> text <c> abandoned_yn <t> text <c> size_code <t> text <c> date_adopted <t> time <c> weight <t> text <c> date_arrived <t> time <c> date_departed <t> time <c> owner_id <t> number <c> age <t> text <c> gender <t> text <c> dog_id <t> number </t> Owners <c> last_name <t> text <c> first_name <t> text <c> zip_code <t> text <c> home_phone <t> text <c> owner_id <t> number <c> street <t> text <c> state <t> text <c> cell_number <t> text <c> email_address <t> text <c> city <t> text </t> Sizes <c> size_description <t> text <c> size_code <t> text </t> Professionals <c> city <t> text <c> state <t> text <c> email_address <t> text <c> last_name <t> text <c> zip_code <t> text <c> role_code <t> text <c> street <t> text <c> professional_id <t> number <c> cell_number <t> text <c> home_phone <t> text <c> first_name <t> text </t> Charges <c> charge_type <t> text <c> charge_amount <t> number <c> charge_id <t> number </t> Treatments <c> cost_of_treatment <t> number <c> date_of_treatment <t> time <c> professional_id <t> number <c> treatment_type_code <t> text <c> dog_id <t> number <c> treatment_id <t> number </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text <i> Count the number of dogs of an age below the average. <s> SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs ) </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> How much does the most recent treatment cost? <s> SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1 </s>
--SEPARATOR--
Dogs <c> name <t> text <c> date_adopted <t> time <c> owner_id <t> number <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> abandoned_yn <t> text <c> dog_id <t> number <c> date_arrived <t> time <c> date_departed <t> time <c> breed_code <t> text <c> size_code <t> text <c> weight <t> text </t> Professionals <c> cell_number <t> text <c> role_code <t> text <c> state <t> text <c> city <t> text <c> email_address <t> text <c> home_phone <t> text <c> first_name <t> text <c> last_name <t> text <c> professional_id <t> number <c> street <t> text <c> zip_code <t> text </t> Charges <c> charge_type <t> text <c> charge_id <t> number <c> charge_amount <t> number </t> Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Owners <c> home_phone <t> text <c> cell_number <t> text <c> zip_code <t> text <c> first_name <t> text <c> owner_id <t> number <c> street <t> text <c> city <t> text <c> email_address <t> text <c> state <t> text <c> last_name <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Treatments <c> dog_id <t> number <c> cost_of_treatment <t> number <c> date_of_treatment <t> time <c> treatment_type_code <t> text <c> professional_id <t> number <c> treatment_id <t> number <i> How much does the most recent treatment cost? <s> SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1 </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> Show me the cost of the most recently performed treatment. <s> SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1 </s>
--SEPARATOR--
Sizes <c> size_description <t> text <c> size_code <t> text </t> Treatments <c> cost_of_treatment <t> number <c> professional_id <t> number <c> date_of_treatment <t> time <c> dog_id <t> number <c> treatment_type_code <t> text <c> treatment_id <t> number </t> Breeds <c> breed_name <t> text <c> breed_code <t> text </t> Professionals <c> home_phone <t> text <c> professional_id <t> number <c> city <t> text <c> first_name <t> text <c> role_code <t> text <c> street <t> text <c> last_name <t> text <c> zip_code <t> text <c> email_address <t> text <c> cell_number <t> text <c> state <t> text </t> Dogs <c> date_arrived <t> time <c> weight <t> text <c> date_adopted <t> time <c> breed_code <t> text <c> date_of_birth <t> time <c> size_code <t> text <c> dog_id <t> number <c> gender <t> text <c> date_departed <t> time <c> age <t> text <c> name <t> text <c> owner_id <t> number <c> abandoned_yn <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> cell_number <t> text <c> state <t> text <c> email_address <t> text <c> zip_code <t> text <c> first_name <t> text <c> home_phone <t> text <c> street <t> text <c> city <t> text <c> last_name <t> text <c> owner_id <t> number <i> Show me the cost of the most recently performed treatment. <s> SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1 </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> How many dogs have not gone through any treatment? <s> SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments ) </s>
--SEPARATOR--
Sizes <c> size_description <t> text <c> size_code <t> text </t> Dogs <c> date_adopted <t> time <c> weight <t> text <c> abandoned_yn <t> text <c> dog_id <t> number <c> date_arrived <t> time <c> gender <t> text <c> size_code <t> text <c> age <t> text <c> date_of_birth <t> time <c> breed_code <t> text <c> name <t> text <c> date_departed <t> time <c> owner_id <t> number </t> Professionals <c> zip_code <t> text <c> street <t> text <c> email_address <t> text <c> state <t> text <c> home_phone <t> text <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> cell_number <t> text <c> city <t> text <c> last_name <t> text </t> Charges <c> charge_type <t> text <c> charge_amount <t> number <c> charge_id <t> number </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> treatment_type_code <t> text <c> professional_id <t> number <c> cost_of_treatment <t> number <c> date_of_treatment <t> time </t> Treatment_Types <c> treatment_type_description <t> text <c> treatment_type_code <t> text </t> Owners <c> email_address <t> text <c> cell_number <t> text <c> home_phone <t> text <c> street <t> text <c> owner_id <t> number <c> last_name <t> text <c> first_name <t> text <c> state <t> text <c> zip_code <t> text <c> city <t> text </t> Breeds <c> breed_name <t> text <c> breed_code <t> text <i> How many dogs have not gone through any treatment? <s> SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments ) </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> Tell me the number of dogs that have not received any treatment . <s> select count(*) from dogs where dog_id not in ( select dog_id from treatments ) </s>
--SEPARATOR--
Professionals <c> city <t> text <c> cell_number <t> text <c> role_code <t> text <c> street <t> text <c> email_address <t> text <c> zip_code <t> text <c> state <t> text <c> first_name <t> text <c> last_name <t> text <c> professional_id <t> number <c> home_phone <t> text </t> Sizes <c> size_description <t> text <c> size_code <t> text </t> Charges <c> charge_type <t> text <c> charge_id <t> number <c> charge_amount <t> number </t> Breeds <c> breed_name <t> text <c> breed_code <t> text </t> Owners <c> email_address <t> text <c> city <t> text <c> owner_id <t> number <c> first_name <t> text <c> state <t> text <c> home_phone <t> text <c> street <t> text <c> cell_number <t> text <c> zip_code <t> text <c> last_name <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Dogs <c> date_departed <t> time <c> abandoned_yn <t> text <c> gender <t> text <c> date_arrived <t> time <c> size_code <t> text <c> weight <t> text <c> owner_id <t> number <c> age <t> text <c> breed_code <t> text <c> date_of_birth <t> time <c> date_adopted <t> time <c> dog_id <t> number <c> name <t> text </t> Treatments <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> treatment_id <t> number <c> cost_of_treatment <t> number <i> Tell me the number of dogs that have not received any treatment . <s> select count(*) from dogs where dog_id not in ( select dog_id from treatments ) </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> How many owners temporarily do not have any dogs? <s> SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs ) </s>
--SEPARATOR--
Treatments <c> dog_id <t> number <c> professional_id <t> number <c> cost_of_treatment <t> number <c> date_of_treatment <t> time <c> treatment_type_code <t> text <c> treatment_id <t> number </t> Sizes <c> size_description <t> text <c> size_code <t> text </t> Owners <c> last_name <t> text <c> owner_id <t> number <c> state <t> text <c> zip_code <t> text <c> street <t> text <c> email_address <t> text <c> home_phone <t> text <c> city <t> text <c> cell_number <t> text <c> first_name <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Professionals <c> city <t> text <c> email_address <t> text <c> first_name <t> text <c> role_code <t> text <c> professional_id <t> number <c> home_phone <t> text <c> cell_number <t> text <c> last_name <t> text <c> street <t> text <c> state <t> text <c> zip_code <t> text </t> Charges <c> charge_id <t> number <c> charge_amount <t> number <c> charge_type <t> text </t> Dogs <c> date_arrived <t> time <c> date_departed <t> time <c> name <t> text <c> size_code <t> text <c> dog_id <t> number <c> owner_id <t> number <c> gender <t> text <c> breed_code <t> text <c> abandoned_yn <t> text <c> age <t> text <c> date_adopted <t> time <c> date_of_birth <t> time <c> weight <t> text </t> Breeds <c> breed_name <t> text <c> breed_code <t> text <i> How many owners temporarily do not have any dogs? <s> SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs ) </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> Find the number of owners who do not own any dogs at this moment. <s> SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs ) </s>
--SEPARATOR--
Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Treatments <c> treatment_id <t> number <c> date_of_treatment <t> time <c> dog_id <t> number <c> cost_of_treatment <t> number <c> treatment_type_code <t> text <c> professional_id <t> number </t> Breeds <c> breed_name <t> text <c> breed_code <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Professionals <c> home_phone <t> text <c> role_code <t> text <c> cell_number <t> text <c> email_address <t> text <c> professional_id <t> number <c> zip_code <t> text <c> first_name <t> text <c> city <t> text <c> last_name <t> text <c> street <t> text <c> state <t> text </t> Dogs <c> size_code <t> text <c> weight <t> text <c> date_arrived <t> time <c> breed_code <t> text <c> age <t> text <c> dog_id <t> number <c> date_of_birth <t> time <c> date_adopted <t> time <c> date_departed <t> time <c> gender <t> text <c> abandoned_yn <t> text <c> name <t> text <c> owner_id <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Owners <c> owner_id <t> number <c> last_name <t> text <c> home_phone <t> text <c> state <t> text <c> city <t> text <c> cell_number <t> text <c> first_name <t> text <c> email_address <t> text <c> street <t> text <c> zip_code <t> text <i> Find the number of owners who do not own any dogs at this moment. <s> SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs ) </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> How many professionals did not operate any treatment on dogs? <s> SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments ) </s>
--SEPARATOR--
Sizes <c> size_code <t> text <c> size_description <t> text </t> Professionals <c> role_code <t> text <c> zip_code <t> text <c> state <t> text <c> cell_number <t> text <c> professional_id <t> number <c> home_phone <t> text <c> first_name <t> text <c> email_address <t> text <c> street <t> text <c> last_name <t> text <c> city <t> text </t> Treatment_Types <c> treatment_type_description <t> text <c> treatment_type_code <t> text </t> Treatments <c> cost_of_treatment <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_id <t> number <c> date_of_treatment <t> time <c> treatment_type_code <t> text </t> Dogs <c> date_of_birth <t> time <c> owner_id <t> number <c> name <t> text <c> size_code <t> text <c> age <t> text <c> dog_id <t> number <c> date_adopted <t> time <c> breed_code <t> text <c> date_arrived <t> time <c> abandoned_yn <t> text <c> date_departed <t> time <c> gender <t> text <c> weight <t> text </t> Charges <c> charge_amount <t> number <c> charge_type <t> text <c> charge_id <t> number </t> Owners <c> street <t> text <c> home_phone <t> text <c> email_address <t> text <c> zip_code <t> text <c> city <t> text <c> first_name <t> text <c> state <t> text <c> last_name <t> text <c> cell_number <t> text <c> owner_id <t> number </t> Breeds <c> breed_name <t> text <c> breed_code <t> text <i> How many professionals did not operate any treatment on dogs? <s> SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments ) </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> Find the number of professionals who have not treated any dogs. <s> SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments ) </s>
--SEPARATOR--
Sizes <c> size_description <t> text <c> size_code <t> text </t> Treatments <c> dog_id <t> number <c> treatment_id <t> number <c> cost_of_treatment <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> professional_id <t> number </t> Breeds <c> breed_name <t> text <c> breed_code <t> text </t> Owners <c> last_name <t> text <c> street <t> text <c> zip_code <t> text <c> home_phone <t> text <c> owner_id <t> number <c> cell_number <t> text <c> state <t> text <c> first_name <t> text <c> city <t> text <c> email_address <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Treatment_Types <c> treatment_type_description <t> text <c> treatment_type_code <t> text </t> Dogs <c> weight <t> text <c> breed_code <t> text <c> date_departed <t> time <c> age <t> text <c> date_adopted <t> time <c> dog_id <t> number <c> size_code <t> text <c> name <t> text <c> gender <t> text <c> owner_id <t> number <c> abandoned_yn <t> text <c> date_of_birth <t> time <c> date_arrived <t> time </t> Professionals <c> street <t> text <c> role_code <t> text <c> professional_id <t> number <c> state <t> text <c> home_phone <t> text <c> email_address <t> text <c> zip_code <t> text <c> cell_number <t> text <c> last_name <t> text <c> city <t> text <c> first_name <t> text <i> Find the number of professionals who have not treated any dogs. <s> SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments ) </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> List the dog name, age and weight of the dogs who have been abandoned? 1 stands for yes, and 0 stands for no. <s> SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1 </s>
--SEPARATOR--
Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> zip_code <t> text <c> home_phone <t> text <c> street <t> text <c> first_name <t> text <c> email_address <t> text <c> state <t> text <c> cell_number <t> text <c> owner_id <t> number <c> last_name <t> text <c> city <t> text </t> Breeds <c> breed_name <t> text <c> breed_code <t> text </t> Charges <c> charge_amount <t> number <c> charge_type <t> text <c> charge_id <t> number </t> Dogs <c> date_departed <t> time <c> breed_code <t> text <c> owner_id <t> number <c> age <t> text <c> dog_id <t> number <c> gender <t> text <c> date_adopted <t> time <c> size_code <t> text <c> abandoned_yn <t> text <c> weight <t> text <c> date_of_birth <t> time <c> name <t> text <c> date_arrived <t> time </t> Treatments <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> cost_of_treatment <t> number </t> Professionals <c> state <t> text <c> city <t> text <c> zip_code <t> text <c> first_name <t> text <c> home_phone <t> text <c> professional_id <t> number <c> role_code <t> text <c> street <t> text <c> last_name <t> text <c> cell_number <t> text <c> email_address <t> text </t> Sizes <c> size_description <t> text <c> size_code <t> text <i> List the dog name, age and weight of the dogs who have been abandoned? 1 stands for yes, and 0 stands for no. <s> SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1 </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> What are the dog name, age and weight of the dogs that were abandoned? Note that 1 stands for yes, and 0 stands for no in the tables. <s> SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1 </s>
--SEPARATOR--
Charges <c> charge_type <t> text <c> charge_amount <t> number <c> charge_id <t> number </t> Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Treatments <c> professional_id <t> number <c> treatment_type_code <t> text <c> dog_id <t> number <c> treatment_id <t> number <c> date_of_treatment <t> time <c> cost_of_treatment <t> number </t> Professionals <c> cell_number <t> text <c> professional_id <t> number <c> role_code <t> text <c> city <t> text <c> state <t> text <c> last_name <t> text <c> email_address <t> text <c> street <t> text <c> zip_code <t> text <c> home_phone <t> text <c> first_name <t> text </t> Sizes <c> size_description <t> text <c> size_code <t> text </t> Dogs <c> age <t> text <c> date_departed <t> time <c> gender <t> text <c> owner_id <t> number <c> size_code <t> text <c> breed_code <t> text <c> date_adopted <t> time <c> abandoned_yn <t> text <c> date_arrived <t> time <c> dog_id <t> number <c> date_of_birth <t> time <c> weight <t> text <c> name <t> text </t> Owners <c> cell_number <t> text <c> first_name <t> text <c> zip_code <t> text <c> city <t> text <c> home_phone <t> text <c> owner_id <t> number <c> last_name <t> text <c> state <t> text <c> email_address <t> text <c> street <t> text </t> Treatment_Types <c> treatment_type_description <t> text <c> treatment_type_code <t> text <i> What are the dog name, age and weight of the dogs that were abandoned? Note that 1 stands for yes, and 0 stands for no in the tables. <s> SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1 </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> What is the average age of all the dogs? <s> SELECT avg(age) FROM Dogs </s>
--SEPARATOR--
Owners <c> first_name <t> text <c> state <t> text <c> owner_id <t> number <c> zip_code <t> text <c> home_phone <t> text <c> city <t> text <c> last_name <t> text <c> street <t> text <c> cell_number <t> text <c> email_address <t> text </t> Treatments <c> date_of_treatment <t> time <c> treatment_type_code <t> text <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> cost_of_treatment <t> number </t> Charges <c> charge_amount <t> number <c> charge_type <t> text <c> charge_id <t> number </t> Professionals <c> home_phone <t> text <c> city <t> text <c> zip_code <t> text <c> last_name <t> text <c> state <t> text <c> professional_id <t> number <c> street <t> text <c> cell_number <t> text <c> email_address <t> text <c> first_name <t> text <c> role_code <t> text </t> Treatment_Types <c> treatment_type_description <t> text <c> treatment_type_code <t> text </t> Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Dogs <c> date_of_birth <t> time <c> abandoned_yn <t> text <c> dog_id <t> number <c> date_arrived <t> time <c> gender <t> text <c> breed_code <t> text <c> age <t> text <c> size_code <t> text <c> weight <t> text <c> name <t> text <c> date_departed <t> time <c> owner_id <t> number <c> date_adopted <t> time <i> What is the average age of all the dogs? <s> SELECT avg(age) FROM Dogs </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> Compute the average age of all the dogs. <s> SELECT avg(age) FROM Dogs </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Professionals <c> zip_code <t> text <c> role_code <t> text <c> state <t> text <c> cell_number <t> text <c> professional_id <t> number <c> first_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> last_name <t> text <c> city <t> text <c> street <t> text </t> Owners <c> street <t> text <c> first_name <t> text <c> last_name <t> text <c> cell_number <t> text <c> home_phone <t> text <c> zip_code <t> text <c> email_address <t> text <c> owner_id <t> number <c> state <t> text <c> city <t> text </t> Charges <c> charge_amount <t> number <c> charge_id <t> number <c> charge_type <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Treatments <c> professional_id <t> number <c> date_of_treatment <t> time <c> dog_id <t> number <c> treatment_type_code <t> text <c> cost_of_treatment <t> number <c> treatment_id <t> number </t> Sizes <c> size_description <t> text <c> size_code <t> text </t> Dogs <c> date_adopted <t> time <c> owner_id <t> number <c> size_code <t> text <c> breed_code <t> text <c> name <t> text <c> date_of_birth <t> time <c> date_departed <t> time <c> gender <t> text <c> dog_id <t> number <c> age <t> text <c> weight <t> text <c> abandoned_yn <t> text <c> date_arrived <t> time <i> Compute the average age of all the dogs. <s> SELECT avg(age) FROM Dogs </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> What is the age of the oldest dog? <s> SELECT max(age) FROM Dogs </s>
--SEPARATOR--
Professionals <c> zip_code <t> text <c> state <t> text <c> home_phone <t> text <c> last_name <t> text <c> cell_number <t> text <c> professional_id <t> number <c> city <t> text <c> role_code <t> text <c> email_address <t> text <c> street <t> text <c> first_name <t> text </t> Treatments <c> dog_id <t> number <c> treatment_type_code <t> text <c> professional_id <t> number <c> cost_of_treatment <t> number <c> treatment_id <t> number <c> date_of_treatment <t> time </t> Treatment_Types <c> treatment_type_description <t> text <c> treatment_type_code <t> text </t> Charges <c> charge_type <t> text <c> charge_amount <t> number <c> charge_id <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Dogs <c> breed_code <t> text <c> age <t> text <c> gender <t> text <c> date_arrived <t> time <c> name <t> text <c> weight <t> text <c> size_code <t> text <c> abandoned_yn <t> text <c> date_of_birth <t> time <c> owner_id <t> number <c> date_departed <t> time <c> dog_id <t> number <c> date_adopted <t> time </t> Owners <c> owner_id <t> number <c> cell_number <t> text <c> last_name <t> text <c> first_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> state <t> text <c> street <t> text <c> city <t> text <c> zip_code <t> text </t> Breeds <c> breed_code <t> text <c> breed_name <t> text <i> What is the age of the oldest dog? <s> SELECT max(age) FROM Dogs </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> Tell me the age of the oldest dog. <s> SELECT max(age) FROM Dogs </s>
--SEPARATOR--
Professionals <c> email_address <t> text <c> home_phone <t> text <c> street <t> text <c> role_code <t> text <c> state <t> text <c> first_name <t> text <c> cell_number <t> text <c> city <t> text <c> zip_code <t> text <c> professional_id <t> number <c> last_name <t> text </t> Sizes <c> size_description <t> text <c> size_code <t> text </t> Treatments <c> date_of_treatment <t> time <c> treatment_id <t> number <c> treatment_type_code <t> text <c> dog_id <t> number <c> professional_id <t> number <c> cost_of_treatment <t> number </t> Dogs <c> size_code <t> text <c> owner_id <t> number <c> age <t> text <c> date_of_birth <t> time <c> name <t> text <c> date_adopted <t> time <c> date_departed <t> time <c> breed_code <t> text <c> abandoned_yn <t> text <c> dog_id <t> number <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Charges <c> charge_id <t> number <c> charge_amount <t> number <c> charge_type <t> text </t> Owners <c> owner_id <t> number <c> city <t> text <c> zip_code <t> text <c> home_phone <t> text <c> first_name <t> text <c> email_address <t> text <c> cell_number <t> text <c> street <t> text <c> state <t> text <c> last_name <t> text </t> Breeds <c> breed_code <t> text <c> breed_name <t> text <i> Tell me the age of the oldest dog. <s> SELECT max(age) FROM Dogs </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> How much does each charge type costs? List both charge type and amount. <s> SELECT charge_type ,  charge_amount FROM Charges </s>
--SEPARATOR--
Dogs <c> date_of_birth <t> time <c> date_adopted <t> time <c> size_code <t> text <c> abandoned_yn <t> text <c> dog_id <t> number <c> owner_id <t> number <c> weight <t> text <c> gender <t> text <c> date_departed <t> time <c> age <t> text <c> breed_code <t> text <c> name <t> text <c> date_arrived <t> time </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Charges <c> charge_amount <t> number <c> charge_id <t> number <c> charge_type <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Professionals <c> cell_number <t> text <c> role_code <t> text <c> professional_id <t> number <c> first_name <t> text <c> last_name <t> text <c> home_phone <t> text <c> street <t> text <c> email_address <t> text <c> zip_code <t> text <c> state <t> text <c> city <t> text </t> Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Owners <c> street <t> text <c> owner_id <t> number <c> first_name <t> text <c> home_phone <t> text <c> last_name <t> text <c> city <t> text <c> email_address <t> text <c> cell_number <t> text <c> zip_code <t> text <c> state <t> text </t> Treatments <c> date_of_treatment <t> time <c> treatment_id <t> number <c> professional_id <t> number <c> cost_of_treatment <t> number <c> dog_id <t> number <c> treatment_type_code <t> text <i> How much does each charge type costs? List both charge type and amount. <s> SELECT charge_type ,  charge_amount FROM Charges </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> List each charge type and its amount. <s> SELECT charge_type ,  charge_amount FROM Charges </s>
--SEPARATOR--
Dogs <c> dog_id <t> number <c> date_adopted <t> time <c> date_of_birth <t> time <c> breed_code <t> text <c> age <t> text <c> size_code <t> text <c> abandoned_yn <t> text <c> date_arrived <t> time <c> weight <t> text <c> gender <t> text <c> name <t> text <c> owner_id <t> number <c> date_departed <t> time </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Owners <c> state <t> text <c> street <t> text <c> home_phone <t> text <c> zip_code <t> text <c> first_name <t> text <c> cell_number <t> text <c> owner_id <t> number <c> last_name <t> text <c> email_address <t> text <c> city <t> text </t> Professionals <c> first_name <t> text <c> city <t> text <c> cell_number <t> text <c> last_name <t> text <c> professional_id <t> number <c> role_code <t> text <c> zip_code <t> text <c> state <t> text <c> email_address <t> text <c> home_phone <t> text <c> street <t> text </t> Breeds <c> breed_name <t> text <c> breed_code <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Sizes <c> size_description <t> text <c> size_code <t> text </t> Treatments <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> dog_id <t> number <c> treatment_id <t> number <c> professional_id <t> number <c> cost_of_treatment <t> number <i> List each charge type and its amount. <s> SELECT charge_type ,  charge_amount FROM Charges </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> How much does the most expensive charge type costs? <s> SELECT max(charge_amount) FROM Charges </s>
--SEPARATOR--
Dogs <c> name <t> text <c> size_code <t> text <c> date_of_birth <t> time <c> date_adopted <t> time <c> age <t> text <c> gender <t> text <c> date_departed <t> time <c> abandoned_yn <t> text <c> owner_id <t> number <c> weight <t> text <c> date_arrived <t> time <c> breed_code <t> text <c> dog_id <t> number </t> Sizes <c> size_description <t> text <c> size_code <t> text </t> Treatment_Types <c> treatment_type_description <t> text <c> treatment_type_code <t> text </t> Treatments <c> treatment_type_code <t> text <c> dog_id <t> number <c> date_of_treatment <t> time <c> professional_id <t> number <c> treatment_id <t> number <c> cost_of_treatment <t> number </t> Owners <c> owner_id <t> number <c> home_phone <t> text <c> street <t> text <c> city <t> text <c> first_name <t> text <c> cell_number <t> text <c> state <t> text <c> email_address <t> text <c> last_name <t> text <c> zip_code <t> text </t> Professionals <c> first_name <t> text <c> zip_code <t> text <c> email_address <t> text <c> cell_number <t> text <c> state <t> text <c> home_phone <t> text <c> city <t> text <c> professional_id <t> number <c> role_code <t> text <c> last_name <t> text <c> street <t> text </t> Breeds <c> breed_name <t> text <c> breed_code <t> text </t> Charges <c> charge_id <t> number <c> charge_amount <t> number <c> charge_type <t> text <i> How much does the most expensive charge type costs? <s> SELECT max(charge_amount) FROM Charges </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> What is the charge amount of the most expensive charge type? <s> SELECT max(charge_amount) FROM Charges </s>
--SEPARATOR--
Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Charges <c> charge_type <t> text <c> charge_amount <t> number <c> charge_id <t> number </t> Professionals <c> home_phone <t> text <c> email_address <t> text <c> professional_id <t> number <c> cell_number <t> text <c> zip_code <t> text <c> street <t> text <c> first_name <t> text <c> state <t> text <c> role_code <t> text <c> city <t> text <c> last_name <t> text </t> Treatments <c> date_of_treatment <t> time <c> professional_id <t> number <c> treatment_id <t> number <c> cost_of_treatment <t> number <c> dog_id <t> number <c> treatment_type_code <t> text </t> Dogs <c> size_code <t> text <c> owner_id <t> number <c> abandoned_yn <t> text <c> date_departed <t> time <c> breed_code <t> text <c> gender <t> text <c> dog_id <t> number <c> date_arrived <t> time <c> weight <t> text <c> age <t> text <c> date_of_birth <t> time <c> name <t> text <c> date_adopted <t> time </t> Owners <c> zip_code <t> text <c> home_phone <t> text <c> city <t> text <c> street <t> text <c> last_name <t> text <c> owner_id <t> number <c> first_name <t> text <c> state <t> text <c> cell_number <t> text <c> email_address <t> text </t> Breeds <c> breed_name <t> text <c> breed_code <t> text </t> Sizes <c> size_code <t> text <c> size_description <t> text <i> What is the charge amount of the most expensive charge type? <s> SELECT max(charge_amount) FROM Charges </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> List the email, cell phone and home phone of all the professionals. <s> SELECT email_address ,  cell_number ,  home_phone FROM professionals </s>
--SEPARATOR--
Owners <c> city <t> text <c> cell_number <t> text <c> state <t> text <c> owner_id <t> number <c> street <t> text <c> email_address <t> text <c> home_phone <t> text <c> zip_code <t> text <c> last_name <t> text <c> first_name <t> text </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Dogs <c> name <t> text <c> date_of_birth <t> time <c> date_adopted <t> time <c> weight <t> text <c> date_arrived <t> time <c> date_departed <t> time <c> breed_code <t> text <c> dog_id <t> number <c> size_code <t> text <c> owner_id <t> number <c> abandoned_yn <t> text <c> age <t> text <c> gender <t> text </t> Treatment_Types <c> treatment_type_description <t> text <c> treatment_type_code <t> text </t> Professionals <c> street <t> text <c> last_name <t> text <c> email_address <t> text <c> first_name <t> text <c> state <t> text <c> zip_code <t> text <c> cell_number <t> text <c> professional_id <t> number <c> role_code <t> text <c> home_phone <t> text <c> city <t> text </t> Treatments <c> treatment_id <t> number <c> date_of_treatment <t> time <c> professional_id <t> number <c> treatment_type_code <t> text <c> dog_id <t> number <c> cost_of_treatment <t> number </t> Charges <c> charge_id <t> number <c> charge_amount <t> number <c> charge_type <t> text <i> List the email, cell phone and home phone of all the professionals. <s> SELECT email_address ,  cell_number ,  home_phone FROM professionals </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> What are the email, cell phone and home phone of each professional? <s> SELECT email_address ,  cell_number ,  home_phone FROM professionals </s>
--SEPARATOR--
Professionals <c> professional_id <t> number <c> last_name <t> text <c> cell_number <t> text <c> city <t> text <c> email_address <t> text <c> first_name <t> text <c> zip_code <t> text <c> state <t> text <c> home_phone <t> text <c> role_code <t> text <c> street <t> text </t> Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_type <t> text <c> charge_id <t> number <c> charge_amount <t> number </t> Treatments <c> dog_id <t> number <c> treatment_type_code <t> text <c> cost_of_treatment <t> number <c> professional_id <t> number <c> treatment_id <t> number <c> date_of_treatment <t> time </t> Owners <c> home_phone <t> text <c> last_name <t> text <c> street <t> text <c> first_name <t> text <c> zip_code <t> text <c> cell_number <t> text <c> email_address <t> text <c> state <t> text <c> owner_id <t> number <c> city <t> text </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_description <t> text <c> treatment_type_code <t> text </t> Dogs <c> age <t> text <c> date_departed <t> time <c> name <t> text <c> gender <t> text <c> date_adopted <t> time <c> date_arrived <t> time <c> dog_id <t> number <c> size_code <t> text <c> weight <t> text <c> owner_id <t> number <c> breed_code <t> text <c> date_of_birth <t> time <c> abandoned_yn <t> text <i> What are the email, cell phone and home phone of each professional? <s> SELECT email_address ,  cell_number ,  home_phone FROM professionals </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> What are all the possible breed type and size type combinations? <s> SELECT DISTINCT breed_code ,  size_code FROM dogs </s>
--SEPARATOR--
Charges <c> charge_amount <t> number <c> charge_id <t> number <c> charge_type <t> text </t> Sizes <c> size_description <t> text <c> size_code <t> text </t> Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Professionals <c> last_name <t> text <c> zip_code <t> text <c> role_code <t> text <c> professional_id <t> number <c> state <t> text <c> city <t> text <c> home_phone <t> text <c> email_address <t> text <c> street <t> text <c> first_name <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> cost_of_treatment <t> number <c> date_of_treatment <t> time <c> professional_id <t> number <c> treatment_type_code <t> text </t> Dogs <c> date_of_birth <t> time <c> size_code <t> text <c> dog_id <t> number <c> breed_code <t> text <c> gender <t> text <c> weight <t> text <c> date_departed <t> time <c> owner_id <t> number <c> name <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> age <t> text <c> abandoned_yn <t> text </t> Owners <c> street <t> text <c> cell_number <t> text <c> first_name <t> text <c> city <t> text <c> owner_id <t> number <c> state <t> text <c> email_address <t> text <c> zip_code <t> text <c> home_phone <t> text <c> last_name <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text <i> What are all the possible breed type and size type combinations? <s> SELECT DISTINCT breed_code ,  size_code FROM dogs </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> Find the distinct breed type and size type combinations for dogs. <s> SELECT DISTINCT breed_code ,  size_code FROM dogs </s>
--SEPARATOR--
Treatments <c> dog_id <t> number <c> cost_of_treatment <t> number <c> date_of_treatment <t> time <c> professional_id <t> number <c> treatment_id <t> number <c> treatment_type_code <t> text </t> Sizes <c> size_description <t> text <c> size_code <t> text </t> Breeds <c> breed_name <t> text <c> breed_code <t> text </t> Professionals <c> cell_number <t> text <c> city <t> text <c> professional_id <t> number <c> role_code <t> text <c> street <t> text <c> last_name <t> text <c> email_address <t> text <c> state <t> text <c> zip_code <t> text <c> home_phone <t> text <c> first_name <t> text </t> Owners <c> email_address <t> text <c> city <t> text <c> zip_code <t> text <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> state <t> text <c> street <t> text <c> cell_number <t> text <c> home_phone <t> text </t> Dogs <c> breed_code <t> text <c> weight <t> text <c> date_adopted <t> time <c> name <t> text <c> abandoned_yn <t> text <c> size_code <t> text <c> dog_id <t> number <c> date_of_birth <t> time <c> owner_id <t> number <c> gender <t> text <c> date_departed <t> time <c> date_arrived <t> time <c> age <t> text </t> Charges <c> charge_type <t> text <c> charge_amount <t> number <c> charge_id <t> number </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text <i> Find the distinct breed type and size type combinations for dogs. <s> SELECT DISTINCT breed_code ,  size_code FROM dogs </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> List the first name of all the professionals along with the description of the treatment they have done. <s> SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code </s>
--SEPARATOR--
Owners <c> last_name <t> text <c> city <t> text <c> email_address <t> text <c> state <t> text <c> owner_id <t> number <c> zip_code <t> text <c> first_name <t> text <c> street <t> text <c> cell_number <t> text <c> home_phone <t> text </t> Professionals <c> last_name <t> text <c> first_name <t> text <c> professional_id <t> number <c> role_code <t> text <c> city <t> text <c> zip_code <t> text <c> street <t> text <c> state <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> cost_of_treatment <t> number <c> dog_id <t> number <c> treatment_id <t> number <c> professional_id <t> number <c> date_of_treatment <t> time <c> treatment_type_code <t> text </t> Treatment_Types <c> treatment_type_description <t> text <c> treatment_type_code <t> text </t> Sizes <c> size_description <t> text <c> size_code <t> text </t> Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Dogs <c> breed_code <t> text <c> name <t> text <c> dog_id <t> number <c> date_of_birth <t> time <c> date_arrived <t> time <c> size_code <t> text <c> date_departed <t> time <c> abandoned_yn <t> text <c> gender <t> text <c> owner_id <t> number <c> date_adopted <t> time <c> age <t> text <c> weight <t> text <i> List the first name of all the professionals along with the description of the treatment they have done. <s> SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code </s>
--SEPARATOR--
Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Sizes <c> size_code <t> text <c> size_description <t> text </t> Treatment_Types <c> treatment_type_code <t> text <c> treatment_type_description <t> text </t> Owners <c> owner_id <t> number <c> first_name <t> text <c> last_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Dogs <c> dog_id <t> number <c> owner_id <t> number <c> abandoned_yn <t> text <c> breed_code <t> text <c> size_code <t> text <c> name <t> text <c> age <t> text <c> date_of_birth <t> time <c> gender <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_adopted <t> time <c> date_departed <t> time </t> Professionals <c> professional_id <t> number <c> role_code <t> text <c> first_name <t> text <c> street <t> text <c> city <t> text <c> state <t> text <c> zip_code <t> text <c> last_name <t> text <c> email_address <t> text <c> home_phone <t> text <c> cell_number <t> text </t> Treatments <c> treatment_id <t> number <c> dog_id <t> number <c> professional_id <t> number <c> treatment_type_code <t> text <c> date_of_treatment <t> time <c> cost_of_treatment <t> number <i> What are each professional's first name and description of the treatment they have performed? <s> SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code </s>
--SEPARATOR--
Professionals <c> last_name <t> text <c> street <t> text <c> professional_id <t> number <c> city <t> text <c> first_name <t> text <c> email_address <t> text <c> role_code <t> text <c> state <t> text <c> cell_number <t> text <c> zip_code <t> text <c> home_phone <t> text </t> Sizes <c> size_description <t> text <c> size_code <t> text </t> Treatment_Types <c> treatment_type_description <t> text <c> treatment_type_code <t> text </t> Dogs <c> dog_id <t> number <c> date_adopted <t> time <c> size_code <t> text <c> name <t> text <c> weight <t> text <c> date_arrived <t> time <c> date_of_birth <t> time <c> gender <t> text <c> date_departed <t> time <c> owner_id <t> number <c> breed_code <t> text <c> age <t> text <c> abandoned_yn <t> text </t> Breeds <c> breed_code <t> text <c> breed_name <t> text </t> Charges <c> charge_id <t> number <c> charge_type <t> text <c> charge_amount <t> number </t> Treatments <c> dog_id <t> number <c> professional_id <t> number <c> date_of_treatment <t> time <c> treatment_type_code <t> text <c> cost_of_treatment <t> number <c> treatment_id <t> number </t> Owners <c> owner_id <t> number <c> city <t> text <c> first_name <t> text <c> home_phone <t> text <c> state <t> text <c> last_name <t> text <c> cell_number <t> text <c> zip_code <t> text <c> street <t> text <c> email_address <t> text <i> What are each professional's first name and description of the treatment they have performed? <s> SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code </s>
--SEPARATOR--
singer <c> Singer_ID <t> number <c> Name <t> text <c> Birth_Year <t> number <c> Net_Worth_Millions <t> number <c> Citizenship <t> text </t> song <c> Song_ID <t> number <c> Title <t> text <c> Singer_ID <t> number <c> Sales <t> number <c> Highest_Position <t> number <i> How many singers are there? <s> SELECT count(*) FROM singer </s>
--SEPARATOR--
singer <c> Birth_Year <t> number <c> Net_Worth_Millions <t> number <c> Citizenship <t> text <c> Name <t> text <c> Singer_ID <t> number </t> song <c> Sales <t> number <c> Singer_ID <t> number <c> Highest_Position <t> number <c> Title <t> text <c> Song_ID <t> number <i> How many singers are there? <s> SELECT count(*) FROM singer </s>
--SEPARATOR--
singer <c> Singer_ID <t> number <c> Name <t> text <c> Birth_Year <t> number <c> Net_Worth_Millions <t> number <c> Citizenship <t> text </t> song <c> Song_ID <t> number <c> Title <t> text <c> Singer_ID <t> number <c> Sales <t> number <c> Highest_Position <t> number <i> What is the count of singers? <s> SELECT count(*) FROM singer </s>
--SEPARATOR--
song <c> Song_ID <t> number <c> Singer_ID <t> number <c> Title <t> text <c> Highest_Position <t> number <c> Sales <t> number </t> singer <c> Birth_Year <t> number <c> Net_Worth_Millions <t> number <c> Singer_ID <t> number <c> Name <t> text <c> Citizenship <t> text <i> What is the count of singers? <s> SELECT count(*) FROM singer </s>
--SEPARATOR--
singer <c> Singer_ID <t> number <c> Name <t> text <c> Birth_Year <t> number <c> Net_Worth_Millions <t> number <c> Citizenship <t> text </t> song <c> Song_ID <t> number <c> Title <t> text <c> Singer_ID <t> number <c> Sales <t> number <c> Highest_Position <t> number <i> List the name of singers in ascending order of net worth. <s> SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC </s>
--SEPARATOR--
song <c> Singer_ID <t> number <c> Song_ID <t> number <c> Sales <t> number <c> Title <t> text <c> Highest_Position <t> number </t> singer <c> Citizenship <t> text <c> Name <t> text <c> Singer_ID <t> number <c> Net_Worth_Millions <t> number <c> Birth_Year <t> number <i> List the name of singers in ascending order of net worth. <s> SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC </s>
--SEPARATOR--
singer <c> Singer_ID <t> number <c> Name <t> text <c> Birth_Year <t> number <c> Net_Worth_Millions <t> number <c> Citizenship <t> text </t> song <c> Song_ID <t> number <c> Title <t> text <c> Singer_ID <t> number <c> Sales <t> number <c> Highest_Position <t> number <i> What are the names of singers ordered by ascending net worth? <s> SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC </s>
--SEPARATOR--
singer <c> Singer_ID <t> number <c> Name <t> text <c> Net_Worth_Millions <t> number <c> Citizenship <t> text <c> Birth_Year <t> number </t> song <c> Highest_Position <t> number <c> Singer_ID <t> number <c> Title <t> text <c> Sales <t> number <c> Song_ID <t> number <i> What are the names of singers ordered by ascending net worth? <s> SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC </s>
--SEPARATOR--
singer <c> Singer_ID <t> number <c> Name <t> text <c> Birth_Year <t> number <c> Net_Worth_Millions <t> number <c> Citizenship <t> text </t> song <c> Song_ID <t> number <c> Title <t> text <c> Singer_ID <t> number <c> Sales <t> number <c> Highest_Position <t> number <i> What are the birth year and citizenship of singers? <s> SELECT Birth_Year ,  Citizenship FROM singer </s>
--SEPARATOR--
song <c> Highest_Position <t> number <c> Title <t> text <c> Sales <t> number <c> Song_ID <t> number <c> Singer_ID <t> number </t> singer <c> Name <t> text <c> Birth_Year <t> number <c> Singer_ID <t> number <c> Net_Worth_Millions <t> number <c> Citizenship <t> text <i> What are the birth year and citizenship of singers? <s> SELECT Birth_Year ,  Citizenship FROM singer </s>
--SEPARATOR--
singer <c> Singer_ID <t> number <c> Name <t> text <c> Birth_Year <t> number <c> Net_Worth_Millions <t> number <c> Citizenship <t> text </t> song <c> Song_ID <t> number <c> Title <t> text <c> Singer_ID <t> number <c> Sales <t> number <c> Highest_Position <t> number <i> What are the birth years and citizenships of the singers? <s> SELECT Birth_Year ,  Citizenship FROM singer </s>
--SEPARATOR--
song <c> Title <t> text <c> Highest_Position <t> number <c> Sales <t> number <c> Song_ID <t> number <c> Singer_ID <t> number </t> singer <c> Citizenship <t> text <c> Name <t> text <c> Birth_Year <t> number <c> Singer_ID <t> number <c> Net_Worth_Millions <t> number <i> What are the birth years and citizenships of the singers? <s> SELECT Birth_Year ,  Citizenship FROM singer </s>
--SEPARATOR--
singer <c> Singer_ID <t> number <c> Name <t> text <c> Birth_Year <t> number <c> Net_Worth_Millions <t> number <c> Citizenship <t> text </t> song <c> Song_ID <t> number <c> Title <t> text <c> Singer_ID <t> number <c> Sales <t> number <c> Highest_Position <t> number <i> List the name of singers whose citizenship is not "France". <s> SELECT Name FROM singer WHERE Citizenship != "France" </s>
--SEPARATOR--
song <c> Sales <t> number <c> Highest_Position <t> number <c> Song_ID <t> number <c> Singer_ID <t> number <c> Title <t> text </t> singer <c> Citizenship <t> text <c> Singer_ID <t> number <c> Birth_Year <t> number <c> Name <t> text <c> Net_Worth_Millions <t> number <i> List the name of singers whose citizenship is not "France". <s> SELECT Name FROM singer WHERE Citizenship != "France" </s>
--SEPARATOR--
singer <c> Singer_ID <t> number <c> Name <t> text <c> Birth_Year <t> number <c> Net_Worth_Millions <t> number <c> Citizenship <t> text </t> song <c> Song_ID <t> number <c> Title <t> text <c> Singer_ID <t> number <c> Sales <t> number <c> Highest_Position <t> number <i> What are the names of the singers who are not French citizens? <s> SELECT Name FROM singer WHERE Citizenship != "France" </s>
--SEPARATOR--
singer <c> Birth_Year <t> number <c> Singer_ID <t> number <c> Net_Worth_Millions <t> number <c> Name <t> text <c> Citizenship <t> text </t> song <c> Title <t> text <c> Singer_ID <t> number <c> Highest_Position <t> number <c> Sales <t> number <c> Song_ID <t> number <i> What are the names of the singers who are not French citizens? <s> SELECT Name FROM singer WHERE Citizenship != "France" </s>
--SEPARATOR--
singer <c> Singer_ID <t> number <c> Name <t> text <c> Birth_Year <t> number <c> Net_Worth_Millions <t> number <c> Citizenship <t> text </t> song <c> Song_ID <t> number <c> Title <t> text <c> Singer_ID <t> number <c> Sales <t> number <c> Highest_Position <t> number <i> Show the name of singers whose birth year is either 1948 or 1949? <s> SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949 </s>
--SEPARATOR--
song <c> Singer_ID <t> number <c> Title <t> text <c> Song_ID <t> number <c> Sales <t> number <c> Highest_Position <t> number </t> singer <c> Birth_Year <t> number <c> Singer_ID <t> number <c> Citizenship <t> text <c> Name <t> text <c> Net_Worth_Millions <t> number <i> Show the name of singers whose birth year is either 1948 or 1949? <s> SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949 </s>
--SEPARATOR--
singer <c> Singer_ID <t> number <c> Name <t> text <c> Birth_Year <t> number <c> Net_Worth_Millions <t> number <c> Citizenship <t> text </t> song <c> Song_ID <t> number <c> Title <t> text <c> Singer_ID <t> number <c> Sales <t> number <c> Highest_Position <t> number <i> What are the names of the singers whose birth years are either 1948 or 1949? <s> SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949 </s>
--SEPARATOR--
singer <c> Net_Worth_Millions <t> number <c> Singer_ID <t> number <c> Name <t> text <c> Birth_Year <t> number <c> Citizenship <t> text </t> song <c> Highest_Position <t> number <c> Singer_ID <t> number <c> Title <t> text <c> Sales <t> number <c> Song_ID <t> number <i> What are the names of the singers whose birth years are either 1948 or 1949? <s> SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949 </s>
--SEPARATOR--
singer <c> Singer_ID <t> number <c> Name <t> text <c> Birth_Year <t> number <c> Net_Worth_Millions <t> number <c> Citizenship <t> text </t> song <c> Song_ID <t> number <c> Title <t> text <c> Singer_ID <t> number <c> Sales <t> number <c> Highest_Position <t> number <i> What is the name of the singer with the largest net worth? <s> SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1 </s>
--SEPARATOR--
song <c> Sales <t> number <c> Song_ID <t> number <c> Title <t> text <c> Singer_ID <t> number <c> Highest_Position <t> number </t> singer <c> Name <t> text <c> Citizenship <t> text <c> Net_Worth_Millions <t> number <c> Birth_Year <t> number <c> Singer_ID <t> number <i> What is the name of the singer with the largest net worth? <s> SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1 </s>
--SEPARATOR--
singer <c> Singer_ID <t> number <c> Name <t> text <c> Birth_Year <t> number <c> Net_Worth_Millions <t> number <c> Citizenship <t> text </t> song <c> Song_ID <t> number <c> Title <t> text <c> Singer_ID <t> number <c> Sales <t> number <c> Highest_Position <t> number <i> What is the name of the singer who is worth the most? <s> SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1 </s>
--SEPARATOR--
singer <c> Birth_Year <t> number <c> Singer_ID <t> number <c> Name <t> text <c> Citizenship <t> text <c> Net_Worth_Millions <t> number </t> song <c> Sales <t> number <c> Singer_ID <t> number <c> Title <t> text <c> Highest_Position <t> number <c> Song_ID <t> number <i> What is the name of the singer who is worth the most? <s> SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1 </s>
--SEPARATOR--
singer <c> Singer_ID <t> number <c> Name <t> text <c> Birth_Year <t> number <c> Net_Worth_Millions <t> number <c> Citizenship <t> text </t> song <c> Song_ID <t> number <c> Title <t> text <c> Singer_ID <t> number <c> Sales <t> number <c> Highest_Position <t> number <i> Show different citizenship of singers and the number of singers of each citizenship. <s> SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship </s>
--SEPARATOR--
song <c> Highest_Position <t> number <c> Song_ID <t> number <c> Singer_ID <t> number <c> Sales <t> number <c> Title <t> text </t> singer <c> Singer_ID <t> number <c> Citizenship <t> text <c> Name <t> text <c> Net_Worth_Millions <t> number <c> Birth_Year <t> number <i> Show different citizenship of singers and the number of singers of each citizenship. <s> SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship </s>
--SEPARATOR--
singer <c> Singer_ID <t> number <c> Name <t> text <c> Birth_Year <t> number <c> Net_Worth_Millions <t> number <c> Citizenship <t> text </t> song <c> Song_ID <t> number <c> Title <t> text <c> Singer_ID <t> number <c> Sales <t> number <c> Highest_Position <t> number <i> For each citizenship, how many singers are from that country? <s> SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship </s>
--SEPARATOR--
song <c> Sales <t> number <c> Song_ID <t> number <c> Title <t> text <c> Singer_ID <t> number <c> Highest_Position <t> number </t> singer <c> Birth_Year <t> number <c> Singer_ID <t> number <c> Citizenship <t> text <c> Net_Worth_Millions <t> number <c> Name <t> text <i> For each citizenship, how many singers are from that country? <s> SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship </s>
--SEPARATOR--
singer <c> Singer_ID <t> number <c> Name <t> text <c> Birth_Year <t> number <c> Net_Worth_Millions <t> number <c> Citizenship <t> text </t> song <c> Song_ID <t> number <c> Title <t> text <c> Singer_ID <t> number <c> Sales <t> number <c> Highest_Position <t> number <i> Please show the most common citizenship of singers. <s> SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1 </s>
--SEPARATOR--
song <c> Title <t> text <c> Song_ID <t> number <c> Singer_ID <t> number <c> Highest_Position <t> number <c> Sales <t> number </t> singer <c> Net_Worth_Millions <t> number <c> Birth_Year <t> number <c> Citizenship <t> text <c> Singer_ID <t> number <c> Name <t> text <i> Please show the most common citizenship of singers. <s> SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1 </s>
--SEPARATOR--
singer <c> Singer_ID <t> number <c> Name <t> text <c> Birth_Year <t> number <c> Net_Worth_Millions <t> number <c> Citizenship <t> text </t> song <c> Song_ID <t> number <c> Title <t> text <c> Singer_ID <t> number <c> Sales <t> number <c> Highest_Position <t> number <i> What is the most common singer citizenship ? <s> select citizenship from singer group by citizenship order by count(*) desc limit 1 </s>
--SEPARATOR--
singer <c> Birth_Year <t> number <c> Net_Worth_Millions <t> number <c> Singer_ID <t> number <c> Name <t> text <c> Citizenship <t> text </t> song <c> Sales <t> number <c> Highest_Position <t> number <c> Song_ID <t> number <c> Title <t> text <c> Singer_ID <t> number <i> What is the most common singer citizenship ? <s> select citizenship from singer group by citizenship order by count(*) desc limit 1 </s>
--SEPARATOR--
singer <c> Singer_ID <t> number <c> Name <t> text <c> Birth_Year <t> number <c> Net_Worth_Millions <t> number <c> Citizenship <t> text </t> song <c> Song_ID <t> number <c> Title <t> text <c> Singer_ID <t> number <c> Sales <t> number <c> Highest_Position <t> number <i> Show different citizenships and the maximum net worth of singers of each citizenship. <s> SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship </s>
--SEPARATOR--
song <c> Highest_Position <t> number <c> Sales <t> number <c> Song_ID <t> number <c> Title <t> text <c> Singer_ID <t> number </t> singer <c> Citizenship <t> text <c> Name <t> text <c> Net_Worth_Millions <t> number <c> Singer_ID <t> number <c> Birth_Year <t> number <i> Show different citizenships and the maximum net worth of singers of each citizenship. <s> SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship </s>
--SEPARATOR--
singer <c> Singer_ID <t> number <c> Name <t> text <c> Birth_Year <t> number <c> Net_Worth_Millions <t> number <c> Citizenship <t> text </t> song <c> Song_ID <t> number <c> Title <t> text <c> Singer_ID <t> number <c> Sales <t> number <c> Highest_Position <t> number <i> For each citizenship, what is the maximum net worth? <s> SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship </s>
--SEPARATOR--
song <c> Sales <t> number <c> Singer_ID <t> number <c> Highest_Position <t> number <c> Song_ID <t> number <c> Title <t> text </t> singer <c> Singer_ID <t> number <c> Name <t> text <c> Citizenship <t> text <c> Birth_Year <t> number <c> Net_Worth_Millions <t> number <i> For each citizenship, what is the maximum net worth? <s> SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship </s>
--SEPARATOR--
singer <c> Singer_ID <t> number <c> Name <t> text <c> Birth_Year <t> number <c> Net_Worth_Millions <t> number <c> Citizenship <t> text </t> song <c> Song_ID <t> number <c> Title <t> text <c> Singer_ID <t> number <c> Sales <t> number <c> Highest_Position <t> number <i> Show titles of songs and names of singers. <s> SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID </s>
--SEPARATOR--
song <c> Song_ID <t> number <c> Singer_ID <t> number <c> Title <t> text <c> Sales <t> number <c> Highest_Position <t> number </t> singer <c> Net_Worth_Millions <t> number <c> Singer_ID <t> number <c> Name <t> text <c> Citizenship <t> text <c> Birth_Year <t> number <i> Show titles of songs and names of singers. <s> SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID </s>
--SEPARATOR--
singer <c> Singer_ID <t> number <c> Name <t> text <c> Birth_Year <t> number <c> Net_Worth_Millions <t> number <c> Citizenship <t> text </t> song <c> Song_ID <t> number <c> Title <t> text <c> Singer_ID <t> number <c> Sales <t> number <c> Highest_Position <t> number <i> What are the song titles and singer names? <s> SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID </s>
--SEPARATOR--
singer <c> Birth_Year <t> number <c> Singer_ID <t> number <c> Name <t> text <c> Net_Worth_Millions <t> number <c> Citizenship <t> text </t> song <c> Highest_Position <t> number <c> Sales <t> number <c> Title <t> text <c> Song_ID <t> number <c> Singer_ID <t> number <i> What are the song titles and singer names? <s> SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID </s>
--SEPARATOR--
singer <c> Singer_ID <t> number <c> Name <t> text <c> Birth_Year <t> number <c> Net_Worth_Millions <t> number <c> Citizenship <t> text </t> song <c> Song_ID <t> number <c> Title <t> text <c> Singer_ID <t> number <c> Sales <t> number <c> Highest_Position <t> number <i> Show distinct names of singers that have songs with sales more than 300000. <s> SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000 </s>
--SEPARATOR--
song <c> Sales <t> number <c> Highest_Position <t> number <c> Song_ID <t> number <c> Title <t> text <c> Singer_ID <t> number </t> singer <c> Birth_Year <t> number <c> Singer_ID <t> number <c> Net_Worth_Millions <t> number <c> Name <t> text <c> Citizenship <t> text <i> Show distinct names of singers that have songs with sales more than 300000. <s> SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000 </s>
--SEPARATOR--
singer <c> Singer_ID <t> number <c> Name <t> text <c> Birth_Year <t> number <c> Net_Worth_Millions <t> number <c> Citizenship <t> text </t> song <c> Song_ID <t> number <c> Title <t> text <c> Singer_ID <t> number <c> Sales <t> number <c> Highest_Position <t> number <i> what are the different names of the singers that have sales more than 300000? <s> SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000 </s>
--SEPARATOR--
song <c> Title <t> text <c> Song_ID <t> number <c> Highest_Position <t> number <c> Sales <t> number <c> Singer_ID <t> number </t> singer <c> Citizenship <t> text <c> Net_Worth_Millions <t> number <c> Name <t> text <c> Birth_Year <t> number <c> Singer_ID <t> number <i> what are the different names of the singers that have sales more than 300000? <s> SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000 </s>
--SEPARATOR--
singer <c> Singer_ID <t> number <c> Name <t> text <c> Birth_Year <t> number <c> Net_Worth_Millions <t> number <c> Citizenship <t> text </t> song <c> Song_ID <t> number <c> Title <t> text <c> Singer_ID <t> number <c> Sales <t> number <c> Highest_Position <t> number <i> Show the names of singers that have more than one song. <s> SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1 </s>
--SEPARATOR--
singer <c> Net_Worth_Millions <t> number <c> Citizenship <t> text <c> Name <t> text <c> Singer_ID <t> number <c> Birth_Year <t> number </t> song <c> Highest_Position <t> number <c> Title <t> text <c> Sales <t> number <c> Song_ID <t> number <c> Singer_ID <t> number <i> Show the names of singers that have more than one song. <s> SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1 </s>
--SEPARATOR--
singer <c> Singer_ID <t> number <c> Name <t> text <c> Birth_Year <t> number <c> Net_Worth_Millions <t> number <c> Citizenship <t> text </t> song <c> Song_ID <t> number <c> Title <t> text <c> Singer_ID <t> number <c> Sales <t> number <c> Highest_Position <t> number <i> What are the names of the singers that have more than one songs? <s> SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1 </s>
--SEPARATOR--
song <c> Singer_ID <t> number <c> Title <t> text <c> Highest_Position <t> number <c> Song_ID <t> number <c> Sales <t> number </t> singer <c> Birth_Year <t> number <c> Citizenship <t> text <c> Net_Worth_Millions <t> number <c> Singer_ID <t> number <c> Name <t> text <i> What are the names of the singers that have more than one songs? <s> SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1 </s>
--SEPARATOR--
singer <c> Singer_ID <t> number <c> Name <t> text <c> Birth_Year <t> number <c> Net_Worth_Millions <t> number <c> Citizenship <t> text </t> song <c> Song_ID <t> number <c> Title <t> text <c> Singer_ID <t> number <c> Sales <t> number <c> Highest_Position <t> number <i> Show the names of singers and the total sales of their songs. <s> SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name </s>
--SEPARATOR--
song <c> Highest_Position <t> number <c> Singer_ID <t> number <c> Sales <t> number <c> Song_ID <t> number <c> Title <t> text </t> singer <c> Singer_ID <t> number <c> Citizenship <t> text <c> Name <t> text <c> Birth_Year <t> number <c> Net_Worth_Millions <t> number <i> Show the names of singers and the total sales of their songs. <s> SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name </s>
--SEPARATOR--
singer <c> Singer_ID <t> number <c> Name <t> text <c> Birth_Year <t> number <c> Net_Worth_Millions <t> number <c> Citizenship <t> text </t> song <c> Song_ID <t> number <c> Title <t> text <c> Singer_ID <t> number <c> Sales <t> number <c> Highest_Position <t> number <i> For each singer name, what is the total sales for their songs? <s> SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name </s>
--SEPARATOR--
singer <c> Name <t> text <c> Birth_Year <t> number <c> Singer_ID <t> number <c> Citizenship <t> text <c> Net_Worth_Millions <t> number </t> song <c> Singer_ID <t> number <c> Sales <t> number <c> Highest_Position <t> number <c> Song_ID <t> number <c> Title <t> text <i> For each singer name, what is the total sales for their songs? <s> SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name </s>
--SEPARATOR--
singer <c> Singer_ID <t> number <c> Name <t> text <c> Birth_Year <t> number <c> Net_Worth_Millions <t> number <c> Citizenship <t> text </t> song <c> Song_ID <t> number <c> Title <t> text <c> Singer_ID <t> number <c> Sales <t> number <c> Highest_Position <t> number <i> List the name of singers that do not have any song. <s> SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song) </s>
--SEPARATOR--
singer <c> Net_Worth_Millions <t> number <c> Citizenship <t> text <c> Singer_ID <t> number <c> Name <t> text <c> Birth_Year <t> number </t> song <c> Song_ID <t> number <c> Title <t> text <c> Singer_ID <t> number <c> Highest_Position <t> number <c> Sales <t> number <i> List the name of singers that do not have any song. <s> SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song) </s>
--SEPARATOR--
singer <c> Singer_ID <t> number <c> Name <t> text <c> Birth_Year <t> number <c> Net_Worth_Millions <t> number <c> Citizenship <t> text </t> song <c> Song_ID <t> number <c> Title <t> text <c> Singer_ID <t> number <c> Sales <t> number <c> Highest_Position <t> number <i> What is the sname of every sing that does not have any song? <s> SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song) </s>
--SEPARATOR--
singer <c> Birth_Year <t> number <c> Name <t> text <c> Citizenship <t> text <c> Singer_ID <t> number <c> Net_Worth_Millions <t> number </t> song <c> Title <t> text <c> Highest_Position <t> number <c> Singer_ID <t> number <c> Sales <t> number <c> Song_ID <t> number <i> What is the sname of every sing that does not have any song? <s> SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song) </s>
--SEPARATOR--
singer <c> Singer_ID <t> number <c> Name <t> text <c> Birth_Year <t> number <c> Net_Worth_Millions <t> number <c> Citizenship <t> text </t> song <c> Song_ID <t> number <c> Title <t> text <c> Singer_ID <t> number <c> Sales <t> number <c> Highest_Position <t> number <i> Show the citizenship shared by singers with birth year before 1945 and after 1955. <s> SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955 </s>
--SEPARATOR--
singer <c> Net_Worth_Millions <t> number <c> Name <t> text <c> Singer_ID <t> number <c> Citizenship <t> text <c> Birth_Year <t> number </t> song <c> Title <t> text <c> Song_ID <t> number <c> Sales <t> number <c> Highest_Position <t> number <c> Singer_ID <t> number <i> Show the citizenship shared by singers with birth year before 1945 and after 1955. <s> SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955 </s>
--SEPARATOR--
singer <c> Singer_ID <t> number <c> Name <t> text <c> Birth_Year <t> number <c> Net_Worth_Millions <t> number <c> Citizenship <t> text </t> song <c> Song_ID <t> number <c> Title <t> text <c> Singer_ID <t> number <c> Sales <t> number <c> Highest_Position <t> number <i> What are the citizenships that are shared by singers with a birth year before 1945 and after 1955? <s> SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955 </s>
--SEPARATOR--
singer <c> Citizenship <t> text <c> Name <t> text <c> Birth_Year <t> number <c> Singer_ID <t> number <c> Net_Worth_Millions <t> number </t> song <c> Sales <t> number <c> Title <t> text <c> Highest_Position <t> number <c> Song_ID <t> number <c> Singer_ID <t> number <i> What are the citizenships that are shared by singers with a birth year before 1945 and after 1955? <s> SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955 </s>
--SEPARATOR--
Ref_Feature_Types <c> feature_type_code <t> text <c> feature_type_name <t> text </t> Ref_Property_Types <c> property_type_code <t> text <c> property_type_description <t> text </t> Other_Available_Features <c> feature_id <t> number <c> feature_type_code <t> text <c> feature_name <t> text <c> feature_description <t> text </t> Properties <c> property_id <t> number <c> property_type_code <t> text <c> date_on_market <t> time <c> date_sold <t> time <c> property_name <t> text <c> property_address <t> text <c> room_count <t> number <c> vendor_requested_price <t> number <c> buyer_offered_price <t> number <c> agreed_selling_price <t> number <c> apt_feature_1 <t> text <c> apt_feature_2 <t> text <c> apt_feature_3 <t> text <c> fld_feature_1 <t> text <c> fld_feature_2 <t> text <c> fld_feature_3 <t> text <c> hse_feature_1 <t> text <c> hse_feature_2 <t> text <c> hse_feature_3 <t> text <c> oth_feature_1 <t> text <c> oth_feature_2 <t> text <c> oth_feature_3 <t> text <c> shp_feature_1 <t> text <c> shp_feature_2 <t> text <c> shp_feature_3 <t> text <c> other_property_details <t> text </t> Other_Property_Features <c> property_id <t> number <c> feature_id <t> number <c> property_feature_description <t> text <i> How many available features are there in total? <s> SELECT count(*) FROM Other_Available_Features </s>
--SEPARATOR--
Other_Property_Features <c> property_id <t> number <c> property_feature_description <t> text <c> feature_id <t> number </t> Properties <c> fld_feature_2 <t> text <c> apt_feature_3 <t> text <c> agreed_selling_price <t> number <c> shp_feature_1 <t> text <c> hse_feature_1 <t> text <c> apt_feature_1 <t> text <c> other_property_details <t> text <c> property_name <t> text <c> shp_feature_2 <t> text <c> hse_feature_2 <t> text <c> date_on_market <t> time <c> property_type_code <t> text <c> fld_feature_3 <t> text <c> oth_feature_2 <t> text <c> fld_feature_1 <t> text <c> property_id <t> number <c> hse_feature_3 <t> text <c> property_address <t> text <c> date_sold <t> time <c> buyer_offered_price <t> number <c> vendor_requested_price <t> number <c> apt_feature_2 <t> text <c> room_count <t> number <c> shp_feature_3 <t> text <c> oth_feature_1 <t> text <c> oth_feature_3 <t> text </t> Other_Available_Features <c> feature_type_code <t> text <c> feature_description <t> text <c> feature_id <t> number <c> feature_name <t> text </t> Ref_Property_Types <c> property_type_description <t> text <c> property_type_code <t> text </t> Ref_Feature_Types <c> feature_type_name <t> text <c> feature_type_code <t> text <i> How many available features are there in total? <s> SELECT count(*) FROM Other_Available_Features </s>
--SEPARATOR--
Ref_Feature_Types <c> feature_type_code <t> text <c> feature_type_name <t> text </t> Ref_Property_Types <c> property_type_code <t> text <c> property_type_description <t> text </t> Other_Available_Features <c> feature_id <t> number <c> feature_type_code <t> text <c> feature_name <t> text <c> feature_description <t> text </t> Properties <c> property_id <t> number <c> property_type_code <t> text <c> date_on_market <t> time <c> date_sold <t> time <c> property_name <t> text <c> property_address <t> text <c> room_count <t> number <c> vendor_requested_price <t> number <c> buyer_offered_price <t> number <c> agreed_selling_price <t> number <c> apt_feature_1 <t> text <c> apt_feature_2 <t> text <c> apt_feature_3 <t> text <c> fld_feature_1 <t> text <c> fld_feature_2 <t> text <c> fld_feature_3 <t> text <c> hse_feature_1 <t> text <c> hse_feature_2 <t> text <c> hse_feature_3 <t> text <c> oth_feature_1 <t> text <c> oth_feature_2 <t> text <c> oth_feature_3 <t> text <c> shp_feature_1 <t> text <c> shp_feature_2 <t> text <c> shp_feature_3 <t> text <c> other_property_details <t> text </t> Other_Property_Features <c> property_id <t> number <c> feature_id <t> number <c> property_feature_description <t> text <i> What is the feature type name of feature AirCon? <s> SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  "AirCon" </s>
--SEPARATOR--
Ref_Property_Types <c> property_type_code <t> text <c> property_type_description <t> text </t> Properties <c> property_type_code <t> text <c> fld_feature_1 <t> text <c> apt_feature_2 <t> text <c> apt_feature_1 <t> text <c> oth_feature_2 <t> text <c> fld_feature_3 <t> text <c> property_address <t> text <c> agreed_selling_price <t> number <c> buyer_offered_price <t> number <c> oth_feature_3 <t> text <c> vendor_requested_price <t> number <c> date_sold <t> time <c> shp_feature_2 <t> text <c> oth_feature_1 <t> text <c> property_name <t> text <c> shp_feature_3 <t> text <c> hse_feature_3 <t> text <c> date_on_market <t> time <c> property_id <t> number <c> room_count <t> number <c> other_property_details <t> text <c> shp_feature_1 <t> text <c> hse_feature_1 <t> text <c> fld_feature_2 <t> text <c> hse_feature_2 <t> text <c> apt_feature_3 <t> text </t> Other_Available_Features <c> feature_id <t> number <c> feature_name <t> text <c> feature_type_code <t> text <c> feature_description <t> text </t> Ref_Feature_Types <c> feature_type_name <t> text <c> feature_type_code <t> text </t> Other_Property_Features <c> property_feature_description <t> text <c> feature_id <t> number <c> property_id <t> number <i> What is the feature type name of feature AirCon? <s> SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  "AirCon" </s>
--SEPARATOR--
Ref_Feature_Types <c> feature_type_code <t> text <c> feature_type_name <t> text </t> Ref_Property_Types <c> property_type_code <t> text <c> property_type_description <t> text </t> Other_Available_Features <c> feature_id <t> number <c> feature_type_code <t> text <c> feature_name <t> text <c> feature_description <t> text </t> Properties <c> property_id <t> number <c> property_type_code <t> text <c> date_on_market <t> time <c> date_sold <t> time <c> property_name <t> text <c> property_address <t> text <c> room_count <t> number <c> vendor_requested_price <t> number <c> buyer_offered_price <t> number <c> agreed_selling_price <t> number <c> apt_feature_1 <t> text <c> apt_feature_2 <t> text <c> apt_feature_3 <t> text <c> fld_feature_1 <t> text <c> fld_feature_2 <t> text <c> fld_feature_3 <t> text <c> hse_feature_1 <t> text <c> hse_feature_2 <t> text <c> hse_feature_3 <t> text <c> oth_feature_1 <t> text <c> oth_feature_2 <t> text <c> oth_feature_3 <t> text <c> shp_feature_1 <t> text <c> shp_feature_2 <t> text <c> shp_feature_3 <t> text <c> other_property_details <t> text </t> Other_Property_Features <c> property_id <t> number <c> feature_id <t> number <c> property_feature_description <t> text <i> Show the property type descriptions of properties belonging to that code. <s> SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code </s>
--SEPARATOR--
Properties <c> agreed_selling_price <t> number <c> fld_feature_3 <t> text <c> oth_feature_3 <t> text <c> apt_feature_1 <t> text <c> property_address <t> text <c> shp_feature_3 <t> text <c> oth_feature_1 <t> text <c> apt_feature_3 <t> text <c> date_on_market <t> time <c> buyer_offered_price <t> number <c> property_id <t> number <c> hse_feature_3 <t> text <c> property_name <t> text <c> hse_feature_2 <t> text <c> fld_feature_2 <t> text <c> shp_feature_1 <t> text <c> fld_feature_1 <t> text <c> date_sold <t> time <c> apt_feature_2 <t> text <c> other_property_details <t> text <c> room_count <t> number <c> hse_feature_1 <t> text <c> oth_feature_2 <t> text <c> shp_feature_2 <t> text <c> vendor_requested_price <t> number <c> property_type_code <t> text </t> Other_Property_Features <c> property_feature_description <t> text <c> feature_id <t> number <c> property_id <t> number </t> Ref_Property_Types <c> property_type_description <t> text <c> property_type_code <t> text </t> Ref_Feature_Types <c> feature_type_name <t> text <c> feature_type_code <t> text </t> Other_Available_Features <c> feature_name <t> text <c> feature_type_code <t> text <c> feature_description <t> text <c> feature_id <t> number <i> Show the property type descriptions of properties belonging to that code. <s> SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code </s>
--SEPARATOR--
Ref_Feature_Types <c> feature_type_code <t> text <c> feature_type_name <t> text </t> Ref_Property_Types <c> property_type_code <t> text <c> property_type_description <t> text </t> Other_Available_Features <c> feature_id <t> number <c> feature_type_code <t> text <c> feature_name <t> text <c> feature_description <t> text </t> Properties <c> property_id <t> number <c> property_type_code <t> text <c> date_on_market <t> time <c> date_sold <t> time <c> property_name <t> text <c> property_address <t> text <c> room_count <t> number <c> vendor_requested_price <t> number <c> buyer_offered_price <t> number <c> agreed_selling_price <t> number <c> apt_feature_1 <t> text <c> apt_feature_2 <t> text <c> apt_feature_3 <t> text <c> fld_feature_1 <t> text <c> fld_feature_2 <t> text <c> fld_feature_3 <t> text <c> hse_feature_1 <t> text <c> hse_feature_2 <t> text <c> hse_feature_3 <t> text <c> oth_feature_1 <t> text <c> oth_feature_2 <t> text <c> oth_feature_3 <t> text <c> shp_feature_1 <t> text <c> shp_feature_2 <t> text <c> shp_feature_3 <t> text <c> other_property_details <t> text </t> Other_Property_Features <c> property_id <t> number <c> feature_id <t> number <c> property_feature_description <t> text <i> What are the names of properties that are either houses or apartments with more than 1 room? <s> SELECT property_name FROM Properties WHERE property_type_code  =  "House" UNION SELECT property_name FROM Properties WHERE property_type_code  =  "Apartment" AND room_count  >  1 </s>
--SEPARATOR--
Other_Available_Features <c> feature_type_code <t> text <c> feature_id <t> number <c> feature_description <t> text <c> feature_name <t> text </t> Ref_Property_Types <c> property_type_description <t> text <c> property_type_code <t> text </t> Ref_Feature_Types <c> feature_type_name <t> text <c> feature_type_code <t> text </t> Properties <c> property_type_code <t> text <c> shp_feature_3 <t> text <c> date_on_market <t> time <c> hse_feature_1 <t> text <c> oth_feature_1 <t> text <c> apt_feature_1 <t> text <c> agreed_selling_price <t> number <c> vendor_requested_price <t> number <c> date_sold <t> time <c> apt_feature_2 <t> text <c> other_property_details <t> text <c> buyer_offered_price <t> number <c> fld_feature_2 <t> text <c> apt_feature_3 <t> text <c> shp_feature_1 <t> text <c> property_id <t> number <c> property_address <t> text <c> room_count <t> number <c> hse_feature_3 <t> text <c> hse_feature_2 <t> text <c> shp_feature_2 <t> text <c> property_name <t> text <c> fld_feature_3 <t> text <c> oth_feature_3 <t> text <c> oth_feature_2 <t> text <c> fld_feature_1 <t> text </t> Other_Property_Features <c> feature_id <t> number <c> property_id <t> number <c> property_feature_description <t> text <i> What are the names of properties that are either houses or apartments with more than 1 room? <s> SELECT property_name FROM Properties WHERE property_type_code  =  "House" UNION SELECT property_name FROM Properties WHERE property_type_code  =  "Apartment" AND room_count  >  1 </s>